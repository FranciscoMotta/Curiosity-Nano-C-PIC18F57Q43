

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Apr 25 18:40:14 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 17/06/2022 GMT
    32                           ; 
    33                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F57Q43 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   002BF0                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _character_matrix_buttons
    71   002BF0  31                 	db	49
    72   002BF1  32                 	db	50
    73   002BF2  33                 	db	51
    74   002BF3  41                 	db	65
    75   002BF4  34                 	db	52
    76   002BF5  35                 	db	53
    77   002BF6  36                 	db	54
    78   002BF7  42                 	db	66
    79   002BF8  37                 	db	55
    80   002BF9  38                 	db	56
    81   002BFA  39                 	db	57
    82   002BFB  43                 	db	67
    83   002BFC  2A                 	db	42
    84   002BFD  30                 	db	48
    85   002BFE  23                 	db	35
    86   002BFF  44                 	db	68
    87   000000                     _OSCCON1bits	set	173
    88   000000                     _ANSELD	set	1048
    89   000000                     _WPUD	set	1049
    90   000000                     _LATF	set	1219
    91   000000                     _TRISD	set	1225
    92   000000                     _LATD	set	1217
    93   000000                     _TRISF	set	1227
    94   000000                     _PORTD	set	1233
    95   000000                     _OSCFRQbits	set	177
    96                           
    97                           	psect	smallconst
    98   002600                     __psmallconst:
    99                           	callstack 0
   100   002600  00                 	db	0
   101   002601                     STR_1:
   102   002601  4C                 	db	76	;'L'
   103   002602  65                 	db	101	;'e'
   104   002603  63                 	db	99	;'c'
   105   002604  74                 	db	116	;'t'
   106   002605  2E                 	db	46
   107   002606  20                 	db	32
   108   002607  4D                 	db	77	;'M'
   109   002608  61                 	db	97	;'a'
   110   002609  74                 	db	116	;'t'
   111   00260A  72                 	db	114	;'r'
   112   00260B  69                 	db	105	;'i'
   113   00260C  78                 	db	120	;'x'
   114   00260D  20                 	db	32
   115   00260E  34                 	db	52	;'4'
   116   00260F  78                 	db	120	;'x'
   117   002610  34                 	db	52	;'4'
   118   002611  00                 	db	0
   119   002612                     STR_3:
   120   002612  20                 	db	32
   121   002613  43                 	db	67	;'C'
   122   002614  48                 	db	72	;'H'
   123   002615  41                 	db	65	;'A'
   124   002616  52                 	db	82	;'R'
   125   002617  3A                 	db	58	;':'
   126   002618  20                 	db	32
   127   002619  00                 	db	0
   128   00261A                     STR_2:
   129   00261A  52                 	db	82	;'R'
   130   00261B  41                 	db	65	;'A'
   131   00261C  57                 	db	87	;'W'
   132   00261D  3A                 	db	58	;':'
   133   00261E  20                 	db	32
   134   00261F  00                 	db	0
   135   002620  00                 	db	0	; dummy byte at the end
   136   000000                     
   137                           ; #config settings
   138                           
   139                           	psect	cinit
   140   002BB4                     __pcinit:
   141                           	callstack 0
   142   002BB4                     start_initialization:
   143                           	callstack 0
   144   002BB4                     __initialization:
   145                           	callstack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (16 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149   002BB4  0EF0               	movlw	low __pidataCOMRAM
   150   002BB6  6EF6               	movwf	tblptrl,c
   151   002BB8  0E2B               	movlw	high __pidataCOMRAM
   152   002BBA  6EF7               	movwf	tblptrh,c
   153   002BBC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154   002BBE  6EF8               	movwf	tblptru,c
   155   002BC0  EE01  F118         	lfsr	0,__pdataCOMRAM
   156   002BC4  EE10 F010          	lfsr	1,16
   157   002BC8                     copy_data0:
   158   002BC8  0009               	tblrd		*+
   159   002BCA  C4F5 F4EE          	movff	tablat,postinc0
   160   002BCE  50E5               	movf	postdec1,w,c
   161   002BD0  50E1               	movf	fsr1l,w,c
   162   002BD2  E1FA               	bnz	copy_data0
   163   002BD4                     end_of_initialization:
   164                           	callstack 0
   165   002BD4                     __end_of__initialization:
   166                           	callstack 0
   167   002BD4  0100               	movlb	0
   168   002BD6  EF62  F014         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	dataCOMRAM
   171   000518                     __pdataCOMRAM:
   172                           	callstack 0
   173   000518                     _character_matrix_buttons:
   174                           	callstack 0
   175   000518                     	ds	16
   176                           
   177                           	psect	cstackCOMRAM
   178   000501                     __pcstackCOMRAM:
   179                           	callstack 0
   180   000501                     ??_User_Matrix_Decode_Raw_Readed:
   181   000501                     ??_FM_Lcd_Send_Nibble:
   182   000501                     ?___awmod:
   183                           	callstack 0
   184   000501                     User_Matrix_Buttons_Read@read_rows:
   185                           	callstack 0
   186   000501                     FM_Hfintosc_Init@clock_params:
   187                           	callstack 0
   188   000501                     ___awmod@dividend:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x0
   192   000501                     	ds	1
   193   000502                     User_Matrix_Buttons_Read@read_cols:
   194                           	callstack 0
   195   000502                     FM_Lcd_Send_Nibble@byte_to_send:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0x1
   199   000502                     	ds	1
   200   000503                     ??_FM_Hfintosc_Init:
   201   000503                     User_Matrix_Decode_Raw_Readed@raw_value:
   202                           	callstack 0
   203   000503                     User_Matrix_Buttons_Read@push_button:
   204                           	callstack 0
   205   000503                     FM_Lcd_Send_Nibble@upper_bits:
   206                           	callstack 0
   207   000503                     ___awmod@divisor:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x2
   211   000503                     	ds	1
   212   000504                     User_Matrix_Decode_Raw_Readed@hexa_value:
   213                           	callstack 0
   214   000504                     FM_Lcd_Send_Nibble@lower_bits:
   215                           	callstack 0
   216   000504                     Internal_Clock_Init@my_clock_params:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x3
   220   000504                     	ds	1
   221   000505                     FM_Lcd_Send_Command@command_to_send:
   222                           	callstack 0
   223   000505                     FM_Lcd_Send_Character@character_to_send:
   224                           	callstack 0
   225   000505                     ___awmod@counter:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x4
   229   000505                     	ds	1
   230   000506                     FM_Lcd_Set_Cursor@columna:
   231                           	callstack 0
   232   000506                     ___awmod@sign:
   233                           	callstack 0
   234   000506                     FM_Lcd_Send_String@cadena:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x5
   238   000506                     	ds	1
   239   000507                     ?___awdiv:
   240                           	callstack 0
   241   000507                     FM_Lcd_Set_Cursor@filas:
   242                           	callstack 0
   243   000507                     ___awdiv@dividend:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x6
   247   000507                     	ds	1
   248   000508                     ??_FM_Lcd_Send_String:
   249   000508                     FM_Lcd_Set_Cursor@base_pos:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x7
   253   000508                     	ds	1
   254   000509                     ___awdiv@divisor:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x8
   258   000509                     	ds	1
   259   00050A                     FM_Lcd_Send_String@index:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x9
   263   00050A                     	ds	1
   264   00050B                     ___awdiv@counter:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0xA
   268   00050B                     	ds	1
   269   00050C                     ___awdiv@sign:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0xB
   273   00050C                     	ds	1
   274   00050D                     ___awdiv@quotient:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0xC
   278   00050D                     	ds	2
   279   00050F                     _FM_Lcd_Send_Uint8$894:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0xE
   283   00050F                     	ds	2
   284   000511                     FM_Lcd_Send_Uint8@centenas:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x10
   288   000511                     	ds	1
   289   000512                     FM_Lcd_Send_Uint8@decenas:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x11
   293   000512                     	ds	1
   294   000513                     FM_Lcd_Send_Uint8@unidades:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x12
   298   000513                     	ds	1
   299   000514                     FM_Lcd_Send_Uint8@numero:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x13
   303   000514                     	ds	1
   304   000515                     ??_main:
   305                           
   306                           ; 1 bytes @ 0x14
   307   000515                     	ds	2
   308   000517                     main@raw_data:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x16
   312   000517                     	ds	1
   313                           
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 73 in file "main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  raw_data        1   22[COMRAM] unsigned char 
   324 ;; Return value:  Size  Location     Type
   325 ;;                  2   44[None  ] int 
   326 ;; Registers used:
   327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   336 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   337 ;;Total ram usage:        3 bytes
   338 ;; Hardware stack levels required when called: 3
   339 ;; This function calls:
   340 ;;		_FM_Lcd_Easy_Init
   341 ;;		_FM_Lcd_Send_Character
   342 ;;		_FM_Lcd_Send_String
   343 ;;		_FM_Lcd_Send_Uint8
   344 ;;		_FM_Lcd_Set_Cursor
   345 ;;		_Internal_Clock_Init
   346 ;;		_User_Matrix_Buttons_Init
   347 ;;		_User_Matrix_Buttons_Read
   348 ;;		_User_Matrix_Decode_Raw_Readed
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text0
   355   0028C4                     __ptext0:
   356                           	callstack 0
   357   0028C4                     _main:
   358                           	callstack 124
   359   0028C4                     
   360                           ;main.c: 75:     Internal_Clock_Init();
   361   0028C4  ECED  F015         	call	_Internal_Clock_Init	;wreg free
   362   0028C8                     
   363                           ;main.c: 76:     FM_Lcd_Easy_Init();
   364   0028C8  ECC5  F015         	call	_FM_Lcd_Easy_Init	;wreg free
   365   0028CC                     
   366                           ;main.c: 77:     User_Matrix_Buttons_Init();
   367   0028CC  EC0C  F016         	call	_User_Matrix_Buttons_Init	;wreg free
   368   0028D0                     
   369                           ;main.c: 78:     FM_Lcd_Set_Cursor(ROW_1, COL_1);
   370   0028D0  0E00               	movlw	0
   371   0028D2  6E06               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   372   0028D4  0E00               	movlw	0
   373   0028D6  EC85  F015         	call	_FM_Lcd_Set_Cursor
   374   0028DA                     
   375                           ;main.c: 79:     FM_Lcd_Send_String("Lect. Matrix 4x4");
   376   0028DA  0E01               	movlw	low STR_1
   377   0028DC  6E06               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   378   0028DE  0E26               	movlw	high STR_1
   379   0028E0  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   380   0028E2  EC59  F015         	call	_FM_Lcd_Send_String	;wreg free
   381   0028E6                     
   382                           ;main.c: 80:     FM_Lcd_Set_Cursor(ROW_2, COL_1);
   383   0028E6  0E00               	movlw	0
   384   0028E8  6E06               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   385   0028EA  0E01               	movlw	1
   386   0028EC  EC85  F015         	call	_FM_Lcd_Set_Cursor
   387   0028F0                     
   388                           ;main.c: 81:     FM_Lcd_Send_Uint8(123);
   389   0028F0  0E7B               	movlw	123
   390   0028F2  ECA9  F014         	call	_FM_Lcd_Send_Uint8
   391   0028F6                     l1272:
   392                           
   393                           ;main.c: 83:     {;main.c: 84:         FM_Lcd_Set_Cursor(ROW_2, COL_1);
   394   0028F6  0E00               	movlw	0
   395   0028F8  6E06               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   396   0028FA  0E01               	movlw	1
   397   0028FC  EC85  F015         	call	_FM_Lcd_Set_Cursor
   398   002900                     
   399                           ;main.c: 85:         FM_Lcd_Send_String("RAW: ");
   400   002900  0E1A               	movlw	low STR_2
   401   002902  6E06               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   402   002904  0E26               	movlw	high STR_2
   403   002906  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   404   002908  EC59  F015         	call	_FM_Lcd_Send_String	;wreg free
   405   00290C                     
   406                           ;main.c: 86:         uint8_t raw_data = User_Matrix_Buttons_Read();
   407   00290C  EC2A  F015         	call	_User_Matrix_Buttons_Read	;wreg free
   408   002910  6E17               	movwf	main@raw_data^(0+1280),c
   409   002912                     
   410                           ;main.c: 87:         FM_Lcd_Send_Uint8(raw_data);
   411   002912  5017               	movf	main@raw_data^(0+1280),w,c
   412   002914  ECA9  F014         	call	_FM_Lcd_Send_Uint8
   413   002918                     
   414                           ;main.c: 88:         FM_Lcd_Send_String(" CHAR: ");
   415   002918  0E12               	movlw	low STR_3
   416   00291A  6E06               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   417   00291C  0E26               	movlw	high STR_3
   418   00291E  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   419   002920  EC59  F015         	call	_FM_Lcd_Send_String	;wreg free
   420   002924                     
   421                           ;main.c: 89:         FM_Lcd_Send_Character(User_Matrix_Decode_Raw_Readed(raw_data));
   422   002924  5017               	movf	main@raw_data^(0+1280),w,c
   423   002926  EC11  F013         	call	_User_Matrix_Decode_Raw_Readed
   424   00292A  EC00  F016         	call	_FM_Lcd_Send_Character
   425   00292E                     
   426                           ;main.c: 90:         LATF ^= (1 << 3);;
   427   00292E  0E08               	movlw	8
   428   002930  1AC3               	xorwf	195,f,c	;volatile
   429   002932                     
   430                           ;main.c: 91:         _delay((unsigned long)((100)*(16000000UL/4000.0)));
   431   002932  0E03               	movlw	3
   432   002934  6E16               	movwf	(??_main+1)^(0+1280),c
   433   002936  0E08               	movlw	8
   434   002938  6E15               	movwf	??_main^(0+1280),c
   435   00293A  0E77               	movlw	119
   436   00293C                     u337:
   437   00293C  2EE8               	decfsz	wreg,f,c
   438   00293E  D7FE               	bra	u337
   439   002940  2E15               	decfsz	??_main^(0+1280),f,c
   440   002942  D7FC               	bra	u337
   441   002944  2E16               	decfsz	(??_main+1)^(0+1280),f,c
   442   002946  D7FA               	bra	u337
   443   002948  F000               	nop	
   444   00294A  EF7B  F014         	goto	l1272
   445   00294E  EFFE  F0FF         	goto	start
   446   002952                     __end_of_main:
   447                           	callstack 0
   448                           
   449 ;; *************** function _User_Matrix_Decode_Raw_Readed *****************
   450 ;; Defined at:
   451 ;;		line 100 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  raw_value       1    wreg     unsigned char 
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  raw_value       1    2[COMRAM] unsigned char 
   456 ;;  hexa_value      1    3[COMRAM] unsigned char 
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      unsigned char 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   469 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   470 ;;Total ram usage:        4 bytes
   471 ;; Hardware stack levels used: 1
   472 ;; This function calls:
   473 ;;		Nothing
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text1
   480   002622                     __ptext1:
   481                           	callstack 0
   482   002622                     _User_Matrix_Decode_Raw_Readed:
   483                           	callstack 126
   484                           
   485                           ;incstack = 0
   486                           ;User_Matrix_Decode_Raw_Readed@raw_value stored from wreg
   487   002622  6E03               	movwf	User_Matrix_Decode_Raw_Readed@raw_value^(0+1280),c
   488   002624                     
   489                           ;main.c: 100: char User_Matrix_Decode_Raw_Readed (uint8_t raw_value);main.c: 101: {;main
      +                          .c: 102:     char hexa_value = 0x00;
   490   002624  0E00               	movlw	0
   491   002626  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   492                           
   493                           ;main.c: 103:     switch(raw_value)
   494   002628  EF59  F013         	goto	l1038
   495   00262C                     l1004:
   496                           
   497                           ;main.c: 106:             hexa_value = '1';
   498   00262C  0E31               	movlw	49
   499   00262E  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   500                           
   501                           ;main.c: 107:             break;
   502   002630  EFA6  F013         	goto	l1040
   503   002634                     l1006:
   504                           
   505                           ;main.c: 109:             hexa_value = '2';
   506   002634  0E32               	movlw	50
   507   002636  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   508                           
   509                           ;main.c: 110:             break;
   510   002638  EFA6  F013         	goto	l1040
   511   00263C                     l1008:
   512                           
   513                           ;main.c: 112:             hexa_value = '3';
   514   00263C  0E33               	movlw	51
   515   00263E  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   516                           
   517                           ;main.c: 113:             break;
   518   002640  EFA6  F013         	goto	l1040
   519   002644                     l1010:
   520                           
   521                           ;main.c: 115:             hexa_value = 'A';
   522   002644  0E41               	movlw	65
   523   002646  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   524                           
   525                           ;main.c: 116:             break;
   526   002648  EFA6  F013         	goto	l1040
   527   00264C                     l1012:
   528                           
   529                           ;main.c: 118:             hexa_value = '4';
   530   00264C  0E34               	movlw	52
   531   00264E  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   532                           
   533                           ;main.c: 119:             break;
   534   002650  EFA6  F013         	goto	l1040
   535   002654                     l1014:
   536                           
   537                           ;main.c: 121:             hexa_value = '5';
   538   002654  0E35               	movlw	53
   539   002656  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   540                           
   541                           ;main.c: 122:             break;
   542   002658  EFA6  F013         	goto	l1040
   543   00265C                     l1016:
   544                           
   545                           ;main.c: 124:             hexa_value = '6';
   546   00265C  0E36               	movlw	54
   547   00265E  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   548                           
   549                           ;main.c: 125:             break;
   550   002660  EFA6  F013         	goto	l1040
   551   002664                     l1018:
   552                           
   553                           ;main.c: 127:             hexa_value = 'B';
   554   002664  0E42               	movlw	66
   555   002666  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   556                           
   557                           ;main.c: 128:             break;
   558   002668  EFA6  F013         	goto	l1040
   559   00266C                     l1020:
   560                           
   561                           ;main.c: 130:             hexa_value = '7';
   562   00266C  0E37               	movlw	55
   563   00266E  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   564                           
   565                           ;main.c: 131:             break;
   566   002670  EFA6  F013         	goto	l1040
   567   002674                     l1022:
   568                           
   569                           ;main.c: 133:             hexa_value = '8';
   570   002674  0E38               	movlw	56
   571   002676  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   572                           
   573                           ;main.c: 134:             break;
   574   002678  EFA6  F013         	goto	l1040
   575   00267C                     l1024:
   576                           
   577                           ;main.c: 136:             hexa_value = '9';
   578   00267C  0E39               	movlw	57
   579   00267E  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   580                           
   581                           ;main.c: 137:             break;
   582   002680  EFA6  F013         	goto	l1040
   583   002684                     l1026:
   584                           
   585                           ;main.c: 139:             hexa_value = 'C';
   586   002684  0E43               	movlw	67
   587   002686  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   588                           
   589                           ;main.c: 140:             break;
   590   002688  EFA6  F013         	goto	l1040
   591   00268C                     l1028:
   592                           
   593                           ;main.c: 142:             hexa_value = '*';
   594   00268C  0E2A               	movlw	42
   595   00268E  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   596                           
   597                           ;main.c: 143:             break;
   598   002690  EFA6  F013         	goto	l1040
   599   002694                     l1030:
   600                           
   601                           ;main.c: 145:             hexa_value = '0';
   602   002694  0E30               	movlw	48
   603   002696  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   604                           
   605                           ;main.c: 146:             break;
   606   002698  EFA6  F013         	goto	l1040
   607   00269C                     l1032:
   608                           
   609                           ;main.c: 148:             hexa_value = '#';
   610   00269C  0E23               	movlw	35
   611   00269E  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   612                           
   613                           ;main.c: 149:             break;
   614   0026A0  EFA6  F013         	goto	l1040
   615   0026A4                     l1034:
   616                           
   617                           ;main.c: 151:             hexa_value = 'D';
   618   0026A4  0E44               	movlw	68
   619   0026A6  6E04               	movwf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),c
   620                           
   621                           ;main.c: 152:             break;
   622   0026A8  EFA6  F013         	goto	l1040
   623   0026AC                     l69:
   624                           
   625                           ;main.c: 154:             __nop();
   626   0026AC  F000               	nop	
   627                           
   628                           ;main.c: 155:             break;
   629   0026AE  EFA6  F013         	goto	l1040
   630   0026B2                     l1038:
   631   0026B2  5003               	movf	User_Matrix_Decode_Raw_Readed@raw_value^(0+1280),w,c
   632   0026B4  6E01               	movwf	??_User_Matrix_Decode_Raw_Readed^(0+1280),c
   633   0026B6  6A02               	clrf	(??_User_Matrix_Decode_Raw_Readed+1)^(0+1280),c
   634                           
   635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   636                           ; Switch size 1, requested type "simple"
   637                           ; Number of cases is 1, Range of values is 0 to 0
   638                           ; switch strategies available:
   639                           ; Name         Instructions Cycles
   640                           ; simple_byte            4     3 (average)
   641                           ;	Chosen strategy is simple_byte
   642   0026B8  5002               	movf	(??_User_Matrix_Decode_Raw_Readed+1)^(0+1280),w,c
   643   0026BA  0A00               	xorlw	0	; case 0
   644   0026BC  B4D8               	btfsc	status,2,c
   645   0026BE  EF63  F013         	goto	l1308
   646   0026C2  EF56  F013         	goto	l69
   647   0026C6                     l1308:
   648                           
   649                           ; Switch size 1, requested type "simple"
   650                           ; Number of cases is 16, Range of values is 119 to 238
   651                           ; switch strategies available:
   652                           ; Name         Instructions Cycles
   653                           ; simple_byte           49    25 (average)
   654                           ;	Chosen strategy is simple_byte
   655   0026C6  5001               	movf	??_User_Matrix_Decode_Raw_Readed^(0+1280),w,c
   656   0026C8  0A77               	xorlw	119	; case 119
   657   0026CA  B4D8               	btfsc	status,2,c
   658   0026CC  EF52  F013         	goto	l1034
   659   0026D0  0A0C               	xorlw	12	; case 123
   660   0026D2  B4D8               	btfsc	status,2,c
   661   0026D4  EF42  F013         	goto	l1026
   662   0026D8  0A06               	xorlw	6	; case 125
   663   0026DA  B4D8               	btfsc	status,2,c
   664   0026DC  EF32  F013         	goto	l1018
   665   0026E0  0A03               	xorlw	3	; case 126
   666   0026E2  B4D8               	btfsc	status,2,c
   667   0026E4  EF22  F013         	goto	l1010
   668   0026E8  0AC9               	xorlw	201	; case 183
   669   0026EA  B4D8               	btfsc	status,2,c
   670   0026EC  EF4E  F013         	goto	l1032
   671   0026F0  0A0C               	xorlw	12	; case 187
   672   0026F2  B4D8               	btfsc	status,2,c
   673   0026F4  EF3E  F013         	goto	l1024
   674   0026F8  0A06               	xorlw	6	; case 189
   675   0026FA  B4D8               	btfsc	status,2,c
   676   0026FC  EF2E  F013         	goto	l1016
   677   002700  0A03               	xorlw	3	; case 190
   678   002702  B4D8               	btfsc	status,2,c
   679   002704  EF1E  F013         	goto	l1008
   680   002708  0A69               	xorlw	105	; case 215
   681   00270A  B4D8               	btfsc	status,2,c
   682   00270C  EF4A  F013         	goto	l1030
   683   002710  0A0C               	xorlw	12	; case 219
   684   002712  B4D8               	btfsc	status,2,c
   685   002714  EF3A  F013         	goto	l1022
   686   002718  0A06               	xorlw	6	; case 221
   687   00271A  B4D8               	btfsc	status,2,c
   688   00271C  EF2A  F013         	goto	l1014
   689   002720  0A03               	xorlw	3	; case 222
   690   002722  B4D8               	btfsc	status,2,c
   691   002724  EF1A  F013         	goto	l1006
   692   002728  0A39               	xorlw	57	; case 231
   693   00272A  B4D8               	btfsc	status,2,c
   694   00272C  EF46  F013         	goto	l1028
   695   002730  0A0C               	xorlw	12	; case 235
   696   002732  B4D8               	btfsc	status,2,c
   697   002734  EF36  F013         	goto	l1020
   698   002738  0A06               	xorlw	6	; case 237
   699   00273A  B4D8               	btfsc	status,2,c
   700   00273C  EF26  F013         	goto	l1012
   701   002740  0A03               	xorlw	3	; case 238
   702   002742  B4D8               	btfsc	status,2,c
   703   002744  EF16  F013         	goto	l1004
   704   002748  EF56  F013         	goto	l69
   705   00274C                     l1040:
   706                           
   707                           ;main.c: 157:     return hexa_value;
   708   00274C  5004               	movf	User_Matrix_Decode_Raw_Readed@hexa_value^(0+1280),w,c
   709   00274E  0012               	return		;funcret
   710   002750                     __end_of_User_Matrix_Decode_Raw_Readed:
   711                           	callstack 0
   712                           
   713 ;; *************** function _User_Matrix_Buttons_Read *****************
   714 ;; Defined at:
   715 ;;		line 160 in file "main.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  push_button     1    2[COMRAM] unsigned char 
   720 ;;  read_cols       1    1[COMRAM] unsigned char 
   721 ;;  read_rows       1    0[COMRAM] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      unsigned char 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   732 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   734 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   735 ;;Total ram usage:        3 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text2
   745   002A54                     __ptext2:
   746                           	callstack 0
   747   002A54                     _User_Matrix_Buttons_Read:
   748                           	callstack 126
   749   002A54                     
   750                           ;main.c: 163:     WPUD = 0xFF;
   751   002A54  0104               	movlb	4	; () banked
   752   002A56  6919               	setf	25,b	;volatile
   753   002A58                     
   754                           ; BSR set to: 4
   755                           ;main.c: 166:     TRISD = 0x0F;;
   756   002A58  0E0F               	movlw	15
   757   002A5A  6EC9               	movwf	201,c	;volatile
   758                           
   759                           ;main.c: 169:     LATD = 0x0F;
   760   002A5C  0E0F               	movlw	15
   761   002A5E  6EC1               	movwf	193,c	;volatile
   762                           
   763                           ;main.c: 170:     TRISD = 0x0F;;
   764   002A60  0E0F               	movlw	15
   765   002A62  6EC9               	movwf	201,c	;volatile
   766   002A64                     l980:
   767   002A64  0E0F               	movlw	15
   768   002A66  18D1               	xorwf	209,w,c	;volatile
   769   002A68  B4D8               	btfsc	status,2,c
   770   002A6A  EF39  F015         	goto	u161
   771   002A6E  EF3B  F015         	goto	u160
   772   002A72                     u161:
   773   002A72  EF32  F015         	goto	l980
   774   002A76                     u160:
   775   002A76                     
   776                           ;main.c: 176:     uint8_t read_rows = PORTD & 0x0F;
   777   002A76  50D1               	movf	209,w,c	;volatile
   778   002A78  0B0F               	andlw	15
   779   002A7A  6E01               	movwf	User_Matrix_Buttons_Read@read_rows^(0+1280),c
   780   002A7C                     
   781                           ;main.c: 179:     TRISD = 0xF0;;
   782   002A7C  0EF0               	movlw	240
   783   002A7E  6EC9               	movwf	201,c	;volatile
   784   002A80                     
   785                           ;main.c: 182:     LATD = 0xF0;
   786   002A80  0EF0               	movlw	240
   787   002A82  6EC1               	movwf	193,c	;volatile
   788   002A84                     
   789                           ;main.c: 183:     TRISD = 0xF0;;
   790   002A84  0EF0               	movlw	240
   791   002A86  6EC9               	movwf	201,c	;volatile
   792   002A88                     l990:
   793   002A88  0EF0               	movlw	240
   794   002A8A  18D1               	xorwf	209,w,c	;volatile
   795   002A8C  B4D8               	btfsc	status,2,c
   796   002A8E  EF4B  F015         	goto	u171
   797   002A92  EF4D  F015         	goto	u170
   798   002A96                     u171:
   799   002A96  EF44  F015         	goto	l990
   800   002A9A                     u170:
   801   002A9A                     
   802                           ;main.c: 189:     uint8_t read_cols = PORTD & 0xF0;
   803   002A9A  50D1               	movf	209,w,c	;volatile
   804   002A9C  0BF0               	andlw	240
   805   002A9E  6E02               	movwf	User_Matrix_Buttons_Read@read_cols^(0+1280),c
   806   002AA0                     
   807                           ;main.c: 190:     TRISD = 0x0F;;
   808   002AA0  0E0F               	movlw	15
   809   002AA2  6EC9               	movwf	201,c	;volatile
   810   002AA4                     
   811                           ;main.c: 193:     uint8_t push_button = 0;
   812   002AA4  0E00               	movlw	0
   813   002AA6  6E03               	movwf	User_Matrix_Buttons_Read@push_button^(0+1280),c
   814                           
   815                           ;main.c: 194:     push_button = read_cols | read_rows;
   816   002AA8  5002               	movf	User_Matrix_Buttons_Read@read_cols^(0+1280),w,c
   817   002AAA  1001               	iorwf	User_Matrix_Buttons_Read@read_rows^(0+1280),w,c
   818   002AAC  6E03               	movwf	User_Matrix_Buttons_Read@push_button^(0+1280),c
   819   002AAE                     
   820                           ;main.c: 195:     return push_button;
   821   002AAE  5003               	movf	User_Matrix_Buttons_Read@push_button^(0+1280),w,c
   822   002AB0  0012               	return		;funcret
   823   002AB2                     __end_of_User_Matrix_Buttons_Read:
   824                           	callstack 0
   825                           
   826 ;; *************** function _User_Matrix_Buttons_Init *****************
   827 ;; Defined at:
   828 ;;		line 198 in file "main.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, status,2
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   846 ;;Total ram usage:        0 bytes
   847 ;; Hardware stack levels used: 1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text3
   856   002C18                     __ptext3:
   857                           	callstack 0
   858   002C18                     _User_Matrix_Buttons_Init:
   859                           	callstack 126
   860   002C18                     
   861                           ;main.c: 201:     ANSELD = 0x00;
   862   002C18  0E00               	movlw	0
   863   002C1A  0104               	movlb	4	; () banked
   864   002C1C  6F18               	movwf	24,b	;volatile
   865   002C1E                     
   866                           ; BSR set to: 4
   867                           ;main.c: 203:     WPUD = 0xFF;
   868   002C1E  6919               	setf	25,b	;volatile
   869   002C20                     
   870                           ; BSR set to: 4
   871   002C20  0012               	return		;funcret
   872   002C22                     __end_of_User_Matrix_Buttons_Init:
   873                           	callstack 0
   874                           
   875 ;; *************** function _Internal_Clock_Init *****************
   876 ;; Defined at:
   877 ;;		line 212 in file "main.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  my_clock_par    2    3[COMRAM] struct .
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   892 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   895 ;;Total ram usage:        2 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 1
   898 ;; This function calls:
   899 ;;		_FM_Hfintosc_Init
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text4
   906   002BDA                     __ptext4:
   907                           	callstack 0
   908   002BDA                     _Internal_Clock_Init:
   909                           	callstack 125
   910   002BDA                     
   911                           ;main.c: 214:     _clock_hfintosc_params_t my_clock_params;;main.c: 215:     my_clock_pa
      +                          rams.divisor_clock = clock_div_1;
   912   002BDA  0E00               	movlw	0
   913   002BDC  6E04               	movwf	Internal_Clock_Init@my_clock_params^(0+1280),c
   914                           
   915                           ;main.c: 216:     my_clock_params.frecuencia_clock = freq_clk_16MHZ;
   916   002BDE  0E05               	movlw	5
   917   002BE0  6E05               	movwf	(Internal_Clock_Init@my_clock_params+1)^(0+1280),c
   918   002BE2                     
   919                           ;main.c: 217:     FM_Hfintosc_Init(&my_clock_params);
   920   002BE2  0E04               	movlw	low Internal_Clock_Init@my_clock_params
   921   002BE4  6E01               	movwf	FM_Hfintosc_Init@clock_params^(0+1280),c
   922   002BE6  0E05               	movlw	high Internal_Clock_Init@my_clock_params
   923   002BE8  6E02               	movwf	(FM_Hfintosc_Init@clock_params+1)^(0+1280),c
   924   002BEA  ECA7  F015         	call	_FM_Hfintosc_Init	;wreg free
   925   002BEE  0012               	return		;funcret
   926   002BF0                     __end_of_Internal_Clock_Init:
   927                           	callstack 0
   928                           
   929 ;; *************** function _FM_Hfintosc_Init *****************
   930 ;; Defined at:
   931 ;;		line 8 in file "system_config.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  clock_params    2    0[COMRAM] PTR struct .
   934 ;;		 -> Internal_Clock_Init@my_clock_params(2), 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   949 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   950 ;;Total ram usage:        3 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_Internal_Clock_Init
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text5
   960   002B4E                     __ptext5:
   961                           	callstack 0
   962   002B4E                     _FM_Hfintosc_Init:
   963                           	callstack 125
   964   002B4E                     
   965                           ;system_config.c: 8: void FM_Hfintosc_Init (_clock_hfintosc_params_t *clock_params);syst
      +                          em_config.c: 9: {;system_config.c: 10:     OSCCON1bits.NOSC = 0b110;
   966   002B4E  0100               	movlb	0	; () banked
   967   002B50  51AD               	movf	173,w,b	;volatile
   968   002B52  0B8F               	andlw	-113
   969   002B54  0960               	iorlw	96
   970   002B56  6FAD               	movwf	173,b	;volatile
   971   002B58                     
   972                           ; BSR set to: 0
   973                           ;system_config.c: 11:     OSCCON1bits.NDIV = clock_params->divisor_clock;
   974   002B58  C501  F4D9         	movff	FM_Hfintosc_Init@clock_params,fsr2l
   975   002B5C  C502  F4DA         	movff	FM_Hfintosc_Init@clock_params+1,fsr2h
   976   002B60  50DF               	movf	indf2,w,c
   977   002B62  6E03               	movwf	??_FM_Hfintosc_Init^(0+1280),c
   978   002B64  51AD               	movf	173,w,b	;volatile
   979   002B66  1803               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
   980   002B68  0BF0               	andlw	-16
   981   002B6A  1803               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
   982   002B6C  6FAD               	movwf	173,b	;volatile
   983   002B6E                     
   984                           ; BSR set to: 0
   985                           ;system_config.c: 12:     OSCFRQbits.HFFRQ = clock_params->frecuencia_clock;
   986   002B6E  EE20 F001          	lfsr	2,1
   987   002B72  5001               	movf	FM_Hfintosc_Init@clock_params^(0+1280),w,c
   988   002B74  26D9               	addwf	fsr2l,f,c
   989   002B76  5002               	movf	(FM_Hfintosc_Init@clock_params+1)^(0+1280),w,c
   990   002B78  22DA               	addwfc	fsr2h,f,c
   991   002B7A  50DF               	movf	indf2,w,c
   992   002B7C  6E03               	movwf	??_FM_Hfintosc_Init^(0+1280),c
   993   002B7E  51B1               	movf	177,w,b	;volatile
   994   002B80  1803               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
   995   002B82  0BF0               	andlw	-16
   996   002B84  1803               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
   997   002B86  6FB1               	movwf	177,b	;volatile
   998   002B88                     
   999                           ; BSR set to: 0
  1000   002B88  0012               	return		;funcret
  1001   002B8A                     __end_of_FM_Hfintosc_Init:
  1002                           	callstack 0
  1003                           
  1004 ;; *************** function _FM_Lcd_Set_Cursor *****************
  1005 ;; Defined at:
  1006 ;;		line 55 in file "FM_Lcd_Easy.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  filas           1    wreg     enum E16718
  1009 ;;  columna         1    5[COMRAM] enum E16722
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  filas           1    6[COMRAM] enum E16718
  1012 ;;  base_pos        1    7[COMRAM] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1022 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1025 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1026 ;;Total ram usage:        3 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; Hardware stack levels required when called: 2
  1029 ;; This function calls:
  1030 ;;		_FM_Lcd_Send_Command
  1031 ;; This function is called by:
  1032 ;;		_main
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text6
  1037   002B0A                     __ptext6:
  1038                           	callstack 0
  1039   002B0A                     _FM_Lcd_Set_Cursor:
  1040                           	callstack 124
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;incstack = 0
  1044                           ;FM_Lcd_Set_Cursor@filas stored from wreg
  1045   002B0A  6E07               	movwf	FM_Lcd_Set_Cursor@filas^(0+1280),c
  1046   002B0C                     
  1047                           ;FM_Lcd_Easy.c: 55: void FM_Lcd_Set_Cursor (_row_lcd_t filas, _column_lcd_t columna);FM_
      +                          Lcd_Easy.c: 56: {;FM_Lcd_Easy.c: 57:     char base_pos = 0x00;
  1048   002B0C  0E00               	movlw	0
  1049   002B0E  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),c
  1050   002B10                     
  1051                           ;FM_Lcd_Easy.c: 58:     if(filas == ROW_1)
  1052   002B10  5007               	movf	FM_Lcd_Set_Cursor@filas^(0+1280),w,c
  1053   002B12  A4D8               	btfss	status,2,c
  1054   002B14  EF8E  F015         	goto	u301
  1055   002B18  EF90  F015         	goto	u300
  1056   002B1C                     u301:
  1057   002B1C  EF94  F015         	goto	l1224
  1058   002B20                     u300:
  1059   002B20                     
  1060                           ;FM_Lcd_Easy.c: 59:     {;FM_Lcd_Easy.c: 60:         base_pos = 0x80;
  1061   002B20  0E80               	movlw	128
  1062   002B22  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),c
  1063                           
  1064                           ;FM_Lcd_Easy.c: 61:     }
  1065   002B24  EFA1  F015         	goto	l1228
  1066   002B28                     l1224:
  1067   002B28  0407               	decf	FM_Lcd_Set_Cursor@filas^(0+1280),w,c
  1068   002B2A  A4D8               	btfss	status,2,c
  1069   002B2C  EF9A  F015         	goto	u311
  1070   002B30  EF9C  F015         	goto	u310
  1071   002B34                     u311:
  1072   002B34  EFA0  F015         	goto	l120
  1073   002B38                     u310:
  1074   002B38                     
  1075                           ;FM_Lcd_Easy.c: 63:     {;FM_Lcd_Easy.c: 64:         base_pos = 0xC0;
  1076   002B38  0EC0               	movlw	192
  1077   002B3A  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),c
  1078                           
  1079                           ;FM_Lcd_Easy.c: 65:     }
  1080   002B3C  EFA1  F015         	goto	l1228
  1081   002B40                     l120:
  1082                           
  1083                           ;FM_Lcd_Easy.c: 67:     {;FM_Lcd_Easy.c: 68:         __nop();
  1084   002B40  F000               	nop	
  1085   002B42                     l1228:
  1086                           
  1087                           ;FM_Lcd_Easy.c: 72:     base_pos += columna;
  1088   002B42  5006               	movf	FM_Lcd_Set_Cursor@columna^(0+1280),w,c
  1089   002B44  2608               	addwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),f,c
  1090   002B46                     
  1091                           ;FM_Lcd_Easy.c: 73:     FM_Lcd_Send_Command(base_pos);
  1092   002B46  5008               	movf	FM_Lcd_Set_Cursor@base_pos^(0+1280),w,c
  1093   002B48  EC06  F016         	call	_FM_Lcd_Send_Command
  1094   002B4C  0012               	return		;funcret
  1095   002B4E                     __end_of_FM_Lcd_Set_Cursor:
  1096                           	callstack 0
  1097                           
  1098 ;; *************** function _FM_Lcd_Send_Uint8 *****************
  1099 ;; Defined at:
  1100 ;;		line 87 in file "FM_Lcd_Easy.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  numero          1    wreg     unsigned char 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  numero          1   19[COMRAM] unsigned char 
  1105 ;;  unidades        1   18[COMRAM] unsigned char 
  1106 ;;  decenas         1   17[COMRAM] unsigned char 
  1107 ;;  centenas        1   16[COMRAM] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1118 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1120 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1121 ;;Total ram usage:        6 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; Hardware stack levels required when called: 2
  1124 ;; This function calls:
  1125 ;;		_FM_Lcd_Send_Character
  1126 ;;		___awdiv
  1127 ;;		___awmod
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text7
  1134   002952                     __ptext7:
  1135                           	callstack 0
  1136   002952                     _FM_Lcd_Send_Uint8:
  1137                           	callstack 124
  1138                           
  1139                           ;incstack = 0
  1140                           ;FM_Lcd_Send_Uint8@numero stored from wreg
  1141   002952  6E14               	movwf	FM_Lcd_Send_Uint8@numero^(0+1280),c
  1142   002954                     
  1143                           ;FM_Lcd_Easy.c: 90:     centenas = numero / 100;
  1144   002954  C514  F507         	movff	FM_Lcd_Send_Uint8@numero,___awdiv@dividend
  1145   002958  6A08               	clrf	(___awdiv@dividend+1)^(0+1280),c
  1146   00295A  0E00               	movlw	0
  1147   00295C  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
  1148   00295E  0E64               	movlw	100
  1149   002960  6E09               	movwf	___awdiv@divisor^(0+1280),c
  1150   002962  ECA8  F013         	call	___awdiv	;wreg free
  1151   002966  5007               	movf	?___awdiv^(0+1280),w,c
  1152   002968  6E11               	movwf	FM_Lcd_Send_Uint8@centenas^(0+1280),c
  1153   00296A                     
  1154                           ;FM_Lcd_Easy.c: 91:     decenas = (numero % 100) / 10;
  1155   00296A  0E00               	movlw	0
  1156   00296C  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
  1157   00296E  0E64               	movlw	100
  1158   002970  6E03               	movwf	___awmod@divisor^(0+1280),c
  1159   002972  C514  F501         	movff	FM_Lcd_Send_Uint8@numero,___awmod@dividend
  1160   002976  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
  1161   002978  EC0A  F014         	call	___awmod	;wreg free
  1162   00297C  C501  F507         	movff	?___awmod,___awdiv@dividend
  1163   002980  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
  1164   002984  0E00               	movlw	0
  1165   002986  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
  1166   002988  0E0A               	movlw	10
  1167   00298A  6E09               	movwf	___awdiv@divisor^(0+1280),c
  1168   00298C  ECA8  F013         	call	___awdiv	;wreg free
  1169   002990  5007               	movf	?___awdiv^(0+1280),w,c
  1170   002992  6E12               	movwf	FM_Lcd_Send_Uint8@decenas^(0+1280),c
  1171   002994                     
  1172                           ;FM_Lcd_Easy.c: 92:     unidades = (numero % 100) % 10;
  1173   002994  0E00               	movlw	0
  1174   002996  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
  1175   002998  0E64               	movlw	100
  1176   00299A  6E03               	movwf	___awmod@divisor^(0+1280),c
  1177   00299C  C514  F501         	movff	FM_Lcd_Send_Uint8@numero,___awmod@dividend
  1178   0029A0  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
  1179   0029A2  EC0A  F014         	call	___awmod	;wreg free
  1180   0029A6  C501  F50F         	movff	?___awmod,_FM_Lcd_Send_Uint8$894
  1181   0029AA  C502  F510         	movff	?___awmod+1,_FM_Lcd_Send_Uint8$894+1
  1182   0029AE                     
  1183                           ;FM_Lcd_Easy.c: 92:     unidades = (numero % 100) % 10;
  1184   0029AE  C50F  F501         	movff	_FM_Lcd_Send_Uint8$894,___awmod@dividend
  1185   0029B2  C510  F502         	movff	_FM_Lcd_Send_Uint8$894+1,___awmod@dividend+1
  1186   0029B6  0E00               	movlw	0
  1187   0029B8  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
  1188   0029BA  0E0A               	movlw	10
  1189   0029BC  6E03               	movwf	___awmod@divisor^(0+1280),c
  1190   0029BE  EC0A  F014         	call	___awmod	;wreg free
  1191   0029C2  5001               	movf	?___awmod^(0+1280),w,c
  1192   0029C4  6E13               	movwf	FM_Lcd_Send_Uint8@unidades^(0+1280),c
  1193   0029C6                     
  1194                           ;FM_Lcd_Easy.c: 93:     FM_Lcd_Send_Character(centenas + 0x30);
  1195   0029C6  5011               	movf	FM_Lcd_Send_Uint8@centenas^(0+1280),w,c
  1196   0029C8  0F30               	addlw	48
  1197   0029CA  EC00  F016         	call	_FM_Lcd_Send_Character
  1198   0029CE                     
  1199                           ;FM_Lcd_Easy.c: 94:     FM_Lcd_Send_Character(decenas + 0x30);
  1200   0029CE  5012               	movf	FM_Lcd_Send_Uint8@decenas^(0+1280),w,c
  1201   0029D0  0F30               	addlw	48
  1202   0029D2  EC00  F016         	call	_FM_Lcd_Send_Character
  1203   0029D6                     
  1204                           ;FM_Lcd_Easy.c: 95:     FM_Lcd_Send_Character(unidades + 0x30);
  1205   0029D6  5013               	movf	FM_Lcd_Send_Uint8@unidades^(0+1280),w,c
  1206   0029D8  0F30               	addlw	48
  1207   0029DA  EC00  F016         	call	_FM_Lcd_Send_Character
  1208   0029DE  0012               	return		;funcret
  1209   0029E0                     __end_of_FM_Lcd_Send_Uint8:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function ___awmod *****************
  1213 ;; Defined at:
  1214 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  dividend        2    0[COMRAM] int 
  1217 ;;  divisor         2    2[COMRAM] int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  sign            1    5[COMRAM] unsigned char 
  1220 ;;  counter         1    4[COMRAM] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  2    0[COMRAM] int 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1233 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1234 ;;Total ram usage:        6 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_FM_Lcd_Send_Uint8
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text8
  1244   002814                     __ptext8:
  1245                           	callstack 0
  1246   002814                     ___awmod:
  1247                           	callstack 125
  1248   002814  0E00               	movlw	0
  1249   002816  6E06               	movwf	___awmod@sign^(0+1280),c
  1250   002818  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
  1251   00281A  EF13  F014         	goto	u240
  1252   00281E  EF11  F014         	goto	u241
  1253   002822                     u241:
  1254   002822  EF19  F014         	goto	l1184
  1255   002826                     u240:
  1256   002826  6C01               	negf	___awmod@dividend^(0+1280),c
  1257   002828  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  1258   00282A  B0D8               	btfsc	status,0,c
  1259   00282C  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  1260   00282E  0E01               	movlw	1
  1261   002830  6E06               	movwf	___awmod@sign^(0+1280),c
  1262   002832                     l1184:
  1263   002832  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
  1264   002834  EF20  F014         	goto	u250
  1265   002838  EF1E  F014         	goto	u251
  1266   00283C                     u251:
  1267   00283C  EF24  F014         	goto	l1188
  1268   002840                     u250:
  1269   002840  6C03               	negf	___awmod@divisor^(0+1280),c
  1270   002842  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
  1271   002844  B0D8               	btfsc	status,0,c
  1272   002846  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
  1273   002848                     l1188:
  1274   002848  5003               	movf	___awmod@divisor^(0+1280),w,c
  1275   00284A  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  1276   00284C  B4D8               	btfsc	status,2,c
  1277   00284E  EF2B  F014         	goto	u261
  1278   002852  EF2D  F014         	goto	u260
  1279   002856                     u261:
  1280   002856  EF51  F014         	goto	l1204
  1281   00285A                     u260:
  1282   00285A  0E01               	movlw	1
  1283   00285C  6E05               	movwf	___awmod@counter^(0+1280),c
  1284   00285E  EF35  F014         	goto	l1194
  1285   002862                     l1192:
  1286   002862  90D8               	bcf	status,0,c
  1287   002864  3603               	rlcf	___awmod@divisor^(0+1280),f,c
  1288   002866  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  1289   002868  2A05               	incf	___awmod@counter^(0+1280),f,c
  1290   00286A                     l1194:
  1291   00286A  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  1292   00286C  EF3A  F014         	goto	u271
  1293   002870  EF3C  F014         	goto	u270
  1294   002874                     u271:
  1295   002874  EF31  F014         	goto	l1192
  1296   002878                     u270:
  1297   002878                     l1196:
  1298   002878  5003               	movf	___awmod@divisor^(0+1280),w,c
  1299   00287A  5C01               	subwf	___awmod@dividend^(0+1280),w,c
  1300   00287C  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  1301   00287E  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  1302   002880  A0D8               	btfss	status,0,c
  1303   002882  EF45  F014         	goto	u281
  1304   002886  EF47  F014         	goto	u280
  1305   00288A                     u281:
  1306   00288A  EF4B  F014         	goto	l1200
  1307   00288E                     u280:
  1308   00288E  5003               	movf	___awmod@divisor^(0+1280),w,c
  1309   002890  5E01               	subwf	___awmod@dividend^(0+1280),f,c
  1310   002892  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  1311   002894  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  1312   002896                     l1200:
  1313   002896  90D8               	bcf	status,0,c
  1314   002898  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  1315   00289A  3203               	rrcf	___awmod@divisor^(0+1280),f,c
  1316   00289C  2E05               	decfsz	___awmod@counter^(0+1280),f,c
  1317   00289E  EF3C  F014         	goto	l1196
  1318   0028A2                     l1204:
  1319   0028A2  5006               	movf	___awmod@sign^(0+1280),w,c
  1320   0028A4  B4D8               	btfsc	status,2,c
  1321   0028A6  EF57  F014         	goto	u291
  1322   0028AA  EF59  F014         	goto	u290
  1323   0028AE                     u291:
  1324   0028AE  EF5D  F014         	goto	l1208
  1325   0028B2                     u290:
  1326   0028B2  6C01               	negf	___awmod@dividend^(0+1280),c
  1327   0028B4  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  1328   0028B6  B0D8               	btfsc	status,0,c
  1329   0028B8  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  1330   0028BA                     l1208:
  1331   0028BA  C501  F501         	movff	___awmod@dividend,?___awmod
  1332   0028BE  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
  1333   0028C2  0012               	return		;funcret
  1334   0028C4                     __end_of___awmod:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function ___awdiv *****************
  1338 ;; Defined at:
  1339 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  dividend        2    6[COMRAM] int 
  1342 ;;  divisor         2    8[COMRAM] int 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  quotient        2   12[COMRAM] int 
  1345 ;;  sign            1   11[COMRAM] unsigned char 
  1346 ;;  counter         1   10[COMRAM] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  2    6[COMRAM] int 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1357 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1359 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1360 ;;Total ram usage:        8 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_FM_Lcd_Send_Uint8
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text9
  1370   002750                     __ptext9:
  1371                           	callstack 0
  1372   002750                     ___awdiv:
  1373                           	callstack 125
  1374   002750  0E00               	movlw	0
  1375   002752  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1376   002754  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
  1377   002756  EFB1  F013         	goto	u180
  1378   00275A  EFAF  F013         	goto	u181
  1379   00275E                     u181:
  1380   00275E  EFB7  F013         	goto	l1140
  1381   002762                     u180:
  1382   002762  6C09               	negf	___awdiv@divisor^(0+1280),c
  1383   002764  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
  1384   002766  B0D8               	btfsc	status,0,c
  1385   002768  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
  1386   00276A  0E01               	movlw	1
  1387   00276C  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1388   00276E                     l1140:
  1389   00276E  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
  1390   002770  EFBE  F013         	goto	u190
  1391   002774  EFBC  F013         	goto	u191
  1392   002778                     u191:
  1393   002778  EFC4  F013         	goto	l1146
  1394   00277C                     u190:
  1395   00277C  6C07               	negf	___awdiv@dividend^(0+1280),c
  1396   00277E  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
  1397   002780  B0D8               	btfsc	status,0,c
  1398   002782  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
  1399   002784  0E01               	movlw	1
  1400   002786  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
  1401   002788                     l1146:
  1402   002788  0E00               	movlw	0
  1403   00278A  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
  1404   00278C  0E00               	movlw	0
  1405   00278E  6E0D               	movwf	___awdiv@quotient^(0+1280),c
  1406   002790  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1407   002792  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
  1408   002794  B4D8               	btfsc	status,2,c
  1409   002796  EFCF  F013         	goto	u201
  1410   00279A  EFD1  F013         	goto	u200
  1411   00279E                     u201:
  1412   00279E  EFF9  F013         	goto	l1168
  1413   0027A2                     u200:
  1414   0027A2  0E01               	movlw	1
  1415   0027A4  6E0B               	movwf	___awdiv@counter^(0+1280),c
  1416   0027A6  EFD9  F013         	goto	l1154
  1417   0027AA                     l1152:
  1418   0027AA  90D8               	bcf	status,0,c
  1419   0027AC  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
  1420   0027AE  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
  1421   0027B0  2A0B               	incf	___awdiv@counter^(0+1280),f,c
  1422   0027B2                     l1154:
  1423   0027B2  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  1424   0027B4  EFDE  F013         	goto	u211
  1425   0027B8  EFE0  F013         	goto	u210
  1426   0027BC                     u211:
  1427   0027BC  EFD5  F013         	goto	l1152
  1428   0027C0                     u210:
  1429   0027C0                     l1156:
  1430   0027C0  90D8               	bcf	status,0,c
  1431   0027C2  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
  1432   0027C4  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  1433   0027C6  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1434   0027C8  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
  1435   0027CA  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1436   0027CC  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  1437   0027CE  A0D8               	btfss	status,0,c
  1438   0027D0  EFEC  F013         	goto	u221
  1439   0027D4  EFEE  F013         	goto	u220
  1440   0027D8                     u221:
  1441   0027D8  EFF3  F013         	goto	l1164
  1442   0027DC                     u220:
  1443   0027DC  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1444   0027DE  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
  1445   0027E0  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1446   0027E2  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  1447   0027E4  800D               	bsf	___awdiv@quotient^(0+1280),0,c
  1448   0027E6                     l1164:
  1449   0027E6  90D8               	bcf	status,0,c
  1450   0027E8  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  1451   0027EA  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
  1452   0027EC  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
  1453   0027EE  EFE0  F013         	goto	l1156
  1454   0027F2                     l1168:
  1455   0027F2  500C               	movf	___awdiv@sign^(0+1280),w,c
  1456   0027F4  B4D8               	btfsc	status,2,c
  1457   0027F6  EFFF  F013         	goto	u231
  1458   0027FA  EF01  F014         	goto	u230
  1459   0027FE                     u231:
  1460   0027FE  EF05  F014         	goto	l1172
  1461   002802                     u230:
  1462   002802  6C0D               	negf	___awdiv@quotient^(0+1280),c
  1463   002804  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  1464   002806  B0D8               	btfsc	status,0,c
  1465   002808  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  1466   00280A                     l1172:
  1467   00280A  C50D  F507         	movff	___awdiv@quotient,?___awdiv
  1468   00280E  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
  1469   002812  0012               	return		;funcret
  1470   002814                     __end_of___awdiv:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _FM_Lcd_Send_String *****************
  1474 ;; Defined at:
  1475 ;;		line 77 in file "FM_Lcd_Easy.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  cadena          2    5[COMRAM] PTR unsigned char 
  1478 ;;		 -> STR_3(8), STR_2(6), STR_1(17), 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  index           1    9[COMRAM] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1493 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1494 ;;Total ram usage:        5 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 2
  1497 ;; This function calls:
  1498 ;;		_FM_Lcd_Send_Character
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text10
  1505   002AB2                     __ptext10:
  1506                           	callstack 0
  1507   002AB2                     _FM_Lcd_Send_String:
  1508                           	callstack 124
  1509   002AB2                     
  1510                           ;FM_Lcd_Easy.c: 77: void FM_Lcd_Send_String (char *cadena);FM_Lcd_Easy.c: 78: {;FM_Lcd_E
      +                          asy.c: 79:     uint8_t index = 0;
  1511   002AB2  0E00               	movlw	0
  1512   002AB4  6E0A               	movwf	FM_Lcd_Send_String@index^(0+1280),c
  1513                           
  1514                           ;FM_Lcd_Easy.c: 80:     while(cadena[index] != '\0')
  1515   002AB6  EF6E  F015         	goto	l1240
  1516   002ABA                     l1236:
  1517                           
  1518                           ;FM_Lcd_Easy.c: 81:     {;FM_Lcd_Easy.c: 82:         FM_Lcd_Send_Character(cadena[index]
      +                          );
  1519   002ABA  500A               	movf	FM_Lcd_Send_String@index^(0+1280),w,c
  1520   002ABC  2406               	addwf	FM_Lcd_Send_String@cadena^(0+1280),w,c
  1521   002ABE  6E08               	movwf	??_FM_Lcd_Send_String^(0+1280),c
  1522   002AC0  0E00               	movlw	0
  1523   002AC2  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^(0+1280),w,c
  1524   002AC4  6E09               	movwf	(??_FM_Lcd_Send_String+1)^(0+1280),c
  1525   002AC6  C508  F4F6         	movff	??_FM_Lcd_Send_String,tblptrl
  1526   002ACA  C509  F4F7         	movff	??_FM_Lcd_Send_String+1,tblptrh
  1527   002ACE                     	if	0	;tblptru may be non-zero
  1528   002ACE                     	endif
  1529   002ACE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1530   002ACE  0E00               	movlw	low (__mediumconst shr (0+16))
  1531   002AD0  6EF8               	movwf	tblptru,c
  1532   002AD2                     	endif
  1533   002AD2  0008               	tblrd		*
  1534   002AD4  50F5               	movf	tablat,w,c
  1535   002AD6  EC00  F016         	call	_FM_Lcd_Send_Character
  1536   002ADA                     
  1537                           ;FM_Lcd_Easy.c: 83:         index++;
  1538   002ADA  2A0A               	incf	FM_Lcd_Send_String@index^(0+1280),f,c
  1539   002ADC                     l1240:
  1540                           
  1541                           ;FM_Lcd_Easy.c: 80:     while(cadena[index] != '\0')
  1542   002ADC  500A               	movf	FM_Lcd_Send_String@index^(0+1280),w,c
  1543   002ADE  2406               	addwf	FM_Lcd_Send_String@cadena^(0+1280),w,c
  1544   002AE0  6E08               	movwf	??_FM_Lcd_Send_String^(0+1280),c
  1545   002AE2  0E00               	movlw	0
  1546   002AE4  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^(0+1280),w,c
  1547   002AE6  6E09               	movwf	(??_FM_Lcd_Send_String+1)^(0+1280),c
  1548   002AE8  C508  F4F6         	movff	??_FM_Lcd_Send_String,tblptrl
  1549   002AEC  C509  F4F7         	movff	??_FM_Lcd_Send_String+1,tblptrh
  1550   002AF0                     	if	0	;tblptru may be non-zero
  1551   002AF0                     	endif
  1552   002AF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1553   002AF0  0E00               	movlw	low (__mediumconst shr (0+16))
  1554   002AF2  6EF8               	movwf	tblptru,c
  1555   002AF4                     	endif
  1556   002AF4  0008               	tblrd		*
  1557   002AF6  50F5               	movf	tablat,w,c
  1558   002AF8  0900               	iorlw	0
  1559   002AFA  A4D8               	btfss	status,2,c
  1560   002AFC  EF82  F015         	goto	u321
  1561   002B00  EF84  F015         	goto	u320
  1562   002B04                     u321:
  1563   002B04  EF5D  F015         	goto	l1236
  1564   002B08                     u320:
  1565   002B08  0012               	return		;funcret
  1566   002B0A                     __end_of_FM_Lcd_Send_String:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _FM_Lcd_Send_Character *****************
  1570 ;; Defined at:
  1571 ;;		line 49 in file "FM_Lcd_Easy.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  character_to    1    wreg     unsigned char 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  character_to    1    4[COMRAM] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1589 ;;Total ram usage:        1 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 1
  1592 ;; This function calls:
  1593 ;;		_FM_Lcd_Send_Nibble
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;;		_FM_Lcd_Send_String
  1597 ;;		_FM_Lcd_Send_Uint8
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text11
  1602   002C00                     __ptext11:
  1603                           	callstack 0
  1604   002C00                     _FM_Lcd_Send_Character:
  1605                           	callstack 124
  1606                           
  1607                           ;incstack = 0
  1608                           ;FM_Lcd_Send_Character@character_to_send stored from wreg
  1609   002C00  6E05               	movwf	FM_Lcd_Send_Character@character_to_send^(0+1280),c
  1610   002C02                     
  1611                           ;FM_Lcd_Easy.c: 49: void FM_Lcd_Send_Character (char character_to_send);FM_Lcd_Easy.c: 5
      +                          0: {;FM_Lcd_Easy.c: 51:     LATF |= (1 << 0);;
  1612   002C02  80C3               	bsf	195,0,c	;volatile
  1613   002C04                     
  1614                           ;FM_Lcd_Easy.c: 52:     FM_Lcd_Send_Nibble(character_to_send);
  1615   002C04  5005               	movf	FM_Lcd_Send_Character@character_to_send^(0+1280),w,c
  1616   002C06  ECF0  F014         	call	_FM_Lcd_Send_Nibble
  1617   002C0A  0012               	return		;funcret
  1618   002C0C                     __end_of_FM_Lcd_Send_Character:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function _FM_Lcd_Easy_Init *****************
  1622 ;; Defined at:
  1623 ;;		line 98 in file "FM_Lcd_Easy.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 2
  1644 ;; This function calls:
  1645 ;;		_FM_Lcd_Easy_Gpio_Init
  1646 ;;		_FM_Lcd_Send_Command
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text12
  1653   002B8A                     __ptext12:
  1654                           	callstack 0
  1655   002B8A                     _FM_Lcd_Easy_Init:
  1656                           	callstack 124
  1657   002B8A                     
  1658                           ;FM_Lcd_Easy.c: 100:     FM_Lcd_Easy_Gpio_Init();
  1659   002B8A  EC11  F016         	call	_FM_Lcd_Easy_Gpio_Init	;wreg free
  1660                           
  1661                           ;FM_Lcd_Easy.c: 102:     FM_Lcd_Send_Command(0x01);
  1662   002B8E  0E01               	movlw	1
  1663   002B90  EC06  F016         	call	_FM_Lcd_Send_Command
  1664                           
  1665                           ;FM_Lcd_Easy.c: 103:     FM_Lcd_Send_Command(0x02);
  1666   002B94  0E02               	movlw	2
  1667   002B96  EC06  F016         	call	_FM_Lcd_Send_Command
  1668                           
  1669                           ;FM_Lcd_Easy.c: 104:     FM_Lcd_Send_Command(0x06);
  1670   002B9A  0E06               	movlw	6
  1671   002B9C  EC06  F016         	call	_FM_Lcd_Send_Command
  1672                           
  1673                           ;FM_Lcd_Easy.c: 105:     FM_Lcd_Send_Command(0x0C);
  1674   002BA0  0E0C               	movlw	12
  1675   002BA2  EC06  F016         	call	_FM_Lcd_Send_Command
  1676                           
  1677                           ;FM_Lcd_Easy.c: 106:     FM_Lcd_Send_Command(0x10);
  1678   002BA6  0E10               	movlw	16
  1679   002BA8  EC06  F016         	call	_FM_Lcd_Send_Command
  1680                           
  1681                           ;FM_Lcd_Easy.c: 107:     FM_Lcd_Send_Command(0x2C);
  1682   002BAC  0E2C               	movlw	44
  1683   002BAE  EC06  F016         	call	_FM_Lcd_Send_Command
  1684   002BB2  0012               	return		;funcret
  1685   002BB4                     __end_of_FM_Lcd_Easy_Init:
  1686                           	callstack 0
  1687                           
  1688 ;; *************** function _FM_Lcd_Send_Command *****************
  1689 ;; Defined at:
  1690 ;;		line 43 in file "FM_Lcd_Easy.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  command_to_s    1    wreg     unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  command_to_s    1    4[COMRAM] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1708 ;;Total ram usage:        1 bytes
  1709 ;; Hardware stack levels used: 1
  1710 ;; Hardware stack levels required when called: 1
  1711 ;; This function calls:
  1712 ;;		_FM_Lcd_Send_Nibble
  1713 ;; This function is called by:
  1714 ;;		_FM_Lcd_Set_Cursor
  1715 ;;		_FM_Lcd_Easy_Init
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text13
  1720   002C0C                     __ptext13:
  1721                           	callstack 0
  1722   002C0C                     _FM_Lcd_Send_Command:
  1723                           	callstack 124
  1724                           
  1725                           ;incstack = 0
  1726                           ;FM_Lcd_Send_Command@command_to_send stored from wreg
  1727   002C0C  6E05               	movwf	FM_Lcd_Send_Command@command_to_send^(0+1280),c
  1728   002C0E                     
  1729                           ;FM_Lcd_Easy.c: 43: void FM_Lcd_Send_Command (char command_to_send);FM_Lcd_Easy.c: 44: {
      +                          ;FM_Lcd_Easy.c: 45:     LATF &= ~(1 << 0);;
  1730   002C0E  90C3               	bcf	195,0,c	;volatile
  1731   002C10                     
  1732                           ;FM_Lcd_Easy.c: 46:     FM_Lcd_Send_Nibble(command_to_send);
  1733   002C10  5005               	movf	FM_Lcd_Send_Command@command_to_send^(0+1280),w,c
  1734   002C12  ECF0  F014         	call	_FM_Lcd_Send_Nibble
  1735   002C16  0012               	return		;funcret
  1736   002C18                     __end_of_FM_Lcd_Send_Command:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _FM_Lcd_Send_Nibble *****************
  1740 ;; Defined at:
  1741 ;;		line 23 in file "FM_Lcd_Easy.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  byte_to_send    1    wreg     unsigned char 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  byte_to_send    1    1[COMRAM] unsigned char 
  1746 ;;  lower_bits      1    3[COMRAM] unsigned char 
  1747 ;;  upper_bits      1    2[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1758 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;Total ram usage:        4 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_FM_Lcd_Send_Command
  1767 ;;		_FM_Lcd_Send_Character
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text14
  1772   0029E0                     __ptext14:
  1773                           	callstack 0
  1774   0029E0                     _FM_Lcd_Send_Nibble:
  1775                           	callstack 124
  1776                           
  1777                           ;incstack = 0
  1778                           ;FM_Lcd_Send_Nibble@byte_to_send stored from wreg
  1779   0029E0  6E02               	movwf	FM_Lcd_Send_Nibble@byte_to_send^(0+1280),c
  1780   0029E2                     
  1781                           ;FM_Lcd_Easy.c: 23: void FM_Lcd_Send_Nibble (char byte_to_send);FM_Lcd_Easy.c: 24: {;FM_
      +                          Lcd_Easy.c: 25:     uint8_t upper_bits, lower_bits;;FM_Lcd_Easy.c: 27:     upper_bits = 
      +                          (byte_to_send & 0xF0);
  1782   0029E2  5002               	movf	FM_Lcd_Send_Nibble@byte_to_send^(0+1280),w,c
  1783   0029E4  0BF0               	andlw	240
  1784   0029E6  6E03               	movwf	FM_Lcd_Send_Nibble@upper_bits^(0+1280),c
  1785                           
  1786                           ;FM_Lcd_Easy.c: 28:     lower_bits = (byte_to_send & 0x0F) << 4;
  1787   0029E8  C502  F501         	movff	FM_Lcd_Send_Nibble@byte_to_send,??_FM_Lcd_Send_Nibble
  1788   0029EC  0E0F               	movlw	15
  1789   0029EE  1601               	andwf	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1790   0029F0  3801               	swapf	??_FM_Lcd_Send_Nibble^(0+1280),w,c
  1791   0029F2  0BF0               	andlw	240
  1792   0029F4  6E04               	movwf	FM_Lcd_Send_Nibble@lower_bits^(0+1280),c
  1793                           
  1794                           ;FM_Lcd_Easy.c: 34:     LATF |= upper_bits;
  1795   0029F6  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^(0+1280),w,c	;volatile
  1796   0029F8  12C3               	iorwf	195,f,c	;volatile
  1797   0029FA                     
  1798                           ;FM_Lcd_Easy.c: 35:     LATF |= (1 << 2);; _delay((unsigned long)((1)*(16000000UL/4000.0
      +                          ))); LATF &= ~(1 << 2);_delay((unsigned long)((1)*(16000000UL/4000.0)));;
  1799   0029FA  84C3               	bsf	195,2,c	;volatile
  1800   0029FC  0E06               	movlw	6
  1801   0029FE  6E01               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1802   002A00  0E30               	movlw	48
  1803   002A02                     u347:
  1804   002A02  2EE8               	decfsz	wreg,f,c
  1805   002A04  D7FE               	bra	u347
  1806   002A06  2E01               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1807   002A08  D7FC               	bra	u347
  1808   002A0A  D000               	nop2	
  1809   002A0C  94C3               	bcf	195,2,c	;volatile
  1810   002A0E  0E06               	movlw	6
  1811   002A10  6E01               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1812   002A12  0E30               	movlw	48
  1813   002A14                     u357:
  1814   002A14  2EE8               	decfsz	wreg,f,c
  1815   002A16  D7FE               	bra	u357
  1816   002A18  2E01               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1817   002A1A  D7FC               	bra	u357
  1818   002A1C  D000               	nop2	
  1819   002A1E                     
  1820                           ;FM_Lcd_Easy.c: 36:     LATF &= ~upper_bits;
  1821   002A1E  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^(0+1280),w,c	;volatile
  1822   002A20  0AFF               	xorlw	255
  1823   002A22  16C3               	andwf	195,f,c	;volatile
  1824   002A24                     
  1825                           ;FM_Lcd_Easy.c: 37:     LATF |= lower_bits;
  1826   002A24  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^(0+1280),w,c	;volatile
  1827   002A26  12C3               	iorwf	195,f,c	;volatile
  1828                           
  1829                           ;FM_Lcd_Easy.c: 38:     LATF |= (1 << 2);; _delay((unsigned long)((1)*(16000000UL/4000.0
      +                          ))); LATF &= ~(1 << 2);_delay((unsigned long)((1)*(16000000UL/4000.0)));;
  1830   002A28  84C3               	bsf	195,2,c	;volatile
  1831   002A2A  0E06               	movlw	6
  1832   002A2C  6E01               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1833   002A2E  0E30               	movlw	48
  1834   002A30                     u367:
  1835   002A30  2EE8               	decfsz	wreg,f,c
  1836   002A32  D7FE               	bra	u367
  1837   002A34  2E01               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1838   002A36  D7FC               	bra	u367
  1839   002A38  D000               	nop2	
  1840   002A3A  94C3               	bcf	195,2,c	;volatile
  1841   002A3C  0E06               	movlw	6
  1842   002A3E  6E01               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1843   002A40  0E30               	movlw	48
  1844   002A42                     u377:
  1845   002A42  2EE8               	decfsz	wreg,f,c
  1846   002A44  D7FE               	bra	u377
  1847   002A46  2E01               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1848   002A48  D7FC               	bra	u377
  1849   002A4A  D000               	nop2	
  1850   002A4C                     
  1851                           ;FM_Lcd_Easy.c: 39:     LATF &= ~lower_bits;
  1852   002A4C  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^(0+1280),w,c	;volatile
  1853   002A4E  0AFF               	xorlw	255
  1854   002A50  16C3               	andwf	195,f,c	;volatile
  1855   002A52  0012               	return		;funcret
  1856   002A54                     __end_of_FM_Lcd_Send_Nibble:
  1857                           	callstack 0
  1858                           
  1859 ;; *************** function _FM_Lcd_Easy_Gpio_Init *****************
  1860 ;; Defined at:
  1861 ;;		line 11 in file "FM_Lcd_Easy.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  bits_data       1    0        unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1879 ;;Total ram usage:        0 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_FM_Lcd_Easy_Init
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text15
  1889   002C22                     __ptext15:
  1890                           	callstack 0
  1891   002C22                     _FM_Lcd_Easy_Gpio_Init:
  1892                           	callstack 125
  1893   002C22                     
  1894                           ;FM_Lcd_Easy.c: 19:     TRISF = 0x00;
  1895   002C22  0E00               	movlw	0
  1896   002C24  6ECB               	movwf	203,c	;volatile
  1897   002C26                     
  1898                           ;FM_Lcd_Easy.c: 20:     LATF &= ~(1 << 1);
  1899   002C26  92C3               	bcf	195,1,c	;volatile
  1900   002C28  0012               	return		;funcret
  1901   002C2A                     __end_of_FM_Lcd_Easy_Gpio_Init:
  1902                           	callstack 0
  1903                           
  1904                           	psect	rparam
  1905   000000                     
  1906                           	psect	idloc
  1907                           
  1908                           ;Config register IDLOC0 @ 0x200000
  1909                           ;	unspecified, using default values
  1910   200000                     	org	2097152
  1911   200000  0FFF               	dw	4095
  1912                           
  1913                           ;Config register IDLOC1 @ 0x200002
  1914                           ;	unspecified, using default values
  1915   200002                     	org	2097154
  1916   200002  0FFF               	dw	4095
  1917                           
  1918                           ;Config register IDLOC2 @ 0x200004
  1919                           ;	unspecified, using default values
  1920   200004                     	org	2097156
  1921   200004  0FFF               	dw	4095
  1922                           
  1923                           ;Config register IDLOC3 @ 0x200006
  1924                           ;	unspecified, using default values
  1925   200006                     	org	2097158
  1926   200006  0FFF               	dw	4095
  1927                           
  1928                           ;Config register IDLOC4 @ 0x200008
  1929                           ;	unspecified, using default values
  1930   200008                     	org	2097160
  1931   200008  0FFF               	dw	4095
  1932                           
  1933                           ;Config register IDLOC5 @ 0x20000A
  1934                           ;	unspecified, using default values
  1935   20000A                     	org	2097162
  1936   20000A  0FFF               	dw	4095
  1937                           
  1938                           ;Config register IDLOC6 @ 0x20000C
  1939                           ;	unspecified, using default values
  1940   20000C                     	org	2097164
  1941   20000C  0FFF               	dw	4095
  1942                           
  1943                           ;Config register IDLOC7 @ 0x20000E
  1944                           ;	unspecified, using default values
  1945   20000E                     	org	2097166
  1946   20000E  0FFF               	dw	4095
  1947                           
  1948                           ;Config register IDLOC8 @ 0x200010
  1949                           ;	unspecified, using default values
  1950   200010                     	org	2097168
  1951   200010  0FFF               	dw	4095
  1952                           
  1953                           ;Config register IDLOC9 @ 0x200012
  1954                           ;	unspecified, using default values
  1955   200012                     	org	2097170
  1956   200012  0FFF               	dw	4095
  1957                           
  1958                           ;Config register IDLOC10 @ 0x200014
  1959                           ;	unspecified, using default values
  1960   200014                     	org	2097172
  1961   200014  0FFF               	dw	4095
  1962                           
  1963                           ;Config register IDLOC11 @ 0x200016
  1964                           ;	unspecified, using default values
  1965   200016                     	org	2097174
  1966   200016  0FFF               	dw	4095
  1967                           
  1968                           ;Config register IDLOC12 @ 0x200018
  1969                           ;	unspecified, using default values
  1970   200018                     	org	2097176
  1971   200018  0FFF               	dw	4095
  1972                           
  1973                           ;Config register IDLOC13 @ 0x20001A
  1974                           ;	unspecified, using default values
  1975   20001A                     	org	2097178
  1976   20001A  0FFF               	dw	4095
  1977                           
  1978                           ;Config register IDLOC14 @ 0x20001C
  1979                           ;	unspecified, using default values
  1980   20001C                     	org	2097180
  1981   20001C  0FFF               	dw	4095
  1982                           
  1983                           ;Config register IDLOC15 @ 0x20001E
  1984                           ;	unspecified, using default values
  1985   20001E                     	org	2097182
  1986   20001E  0FFF               	dw	4095
  1987                           
  1988                           ;Config register IDLOC16 @ 0x200020
  1989                           ;	unspecified, using default values
  1990   200020                     	org	2097184
  1991   200020  0FFF               	dw	4095
  1992                           
  1993                           ;Config register IDLOC17 @ 0x200022
  1994                           ;	unspecified, using default values
  1995   200022                     	org	2097186
  1996   200022  0FFF               	dw	4095
  1997                           
  1998                           ;Config register IDLOC18 @ 0x200024
  1999                           ;	unspecified, using default values
  2000   200024                     	org	2097188
  2001   200024  0FFF               	dw	4095
  2002                           
  2003                           ;Config register IDLOC19 @ 0x200026
  2004                           ;	unspecified, using default values
  2005   200026                     	org	2097190
  2006   200026  0FFF               	dw	4095
  2007                           
  2008                           ;Config register IDLOC20 @ 0x200028
  2009                           ;	unspecified, using default values
  2010   200028                     	org	2097192
  2011   200028  0FFF               	dw	4095
  2012                           
  2013                           ;Config register IDLOC21 @ 0x20002A
  2014                           ;	unspecified, using default values
  2015   20002A                     	org	2097194
  2016   20002A  0FFF               	dw	4095
  2017                           
  2018                           ;Config register IDLOC22 @ 0x20002C
  2019                           ;	unspecified, using default values
  2020   20002C                     	org	2097196
  2021   20002C  0FFF               	dw	4095
  2022                           
  2023                           ;Config register IDLOC23 @ 0x20002E
  2024                           ;	unspecified, using default values
  2025   20002E                     	org	2097198
  2026   20002E  0FFF               	dw	4095
  2027                           
  2028                           ;Config register IDLOC24 @ 0x200030
  2029                           ;	unspecified, using default values
  2030   200030                     	org	2097200
  2031   200030  0FFF               	dw	4095
  2032                           
  2033                           ;Config register IDLOC25 @ 0x200032
  2034                           ;	unspecified, using default values
  2035   200032                     	org	2097202
  2036   200032  0FFF               	dw	4095
  2037                           
  2038                           ;Config register IDLOC26 @ 0x200034
  2039                           ;	unspecified, using default values
  2040   200034                     	org	2097204
  2041   200034  0FFF               	dw	4095
  2042                           
  2043                           ;Config register IDLOC27 @ 0x200036
  2044                           ;	unspecified, using default values
  2045   200036                     	org	2097206
  2046   200036  0FFF               	dw	4095
  2047                           
  2048                           ;Config register IDLOC28 @ 0x200038
  2049                           ;	unspecified, using default values
  2050   200038                     	org	2097208
  2051   200038  0FFF               	dw	4095
  2052                           
  2053                           ;Config register IDLOC29 @ 0x20003A
  2054                           ;	unspecified, using default values
  2055   20003A                     	org	2097210
  2056   20003A  0FFF               	dw	4095
  2057                           
  2058                           ;Config register IDLOC30 @ 0x20003C
  2059                           ;	unspecified, using default values
  2060   20003C                     	org	2097212
  2061   20003C  0FFF               	dw	4095
  2062                           
  2063                           ;Config register IDLOC31 @ 0x20003E
  2064                           ;	unspecified, using default values
  2065   20003E                     	org	2097214
  2066   20003E  0FFF               	dw	4095
  2067                           
  2068                           	psect	config
  2069                           
  2070                           ;Config register CONFIG1 @ 0x300000
  2071                           ;	External Oscillator Selection
  2072                           ;	FEXTOSC = OFF, Oscillator not enabled
  2073                           ;	Reset Oscillator Selection
  2074                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  2075   300000                     	org	3145728
  2076   300000  8C                 	db	140
  2077                           
  2078                           ;Config register CONFIG2 @ 0x300001
  2079                           ;	Clock out Enable bit
  2080                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2081                           ;	PRLOCKED One-Way Set Enable bit
  2082                           ;	PR1WAY = OFF, PRLOCKED bit can be set and cleared repeatedly
  2083                           ;	Clock Switch Enable bit
  2084                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  2085                           ;	Fail-Safe Clock Monitor Enable bit
  2086                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2087   300001                     	org	3145729
  2088   300001  D5                 	db	213
  2089                           
  2090                           ;Config register CONFIG3 @ 0x300002
  2091                           ;	MCLR Enable bit
  2092                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2093                           ;	Power-up timer selection bits
  2094                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2095                           ;	Multi-vector enable bit
  2096                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  2097                           ;	IVTLOCK bit One-way set enable bit
  2098                           ;	IVT1WAY = OFF, IVTLOCKED bit can be cleared and set repeatedly
  2099                           ;	Low Power BOR Enable bit
  2100                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2101                           ;	Brown-out Reset Enable bits
  2102                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2103   300002                     	org	3145730
  2104   300002  E7                 	db	231
  2105                           
  2106                           ;Config register CONFIG4 @ 0x300003
  2107                           ;	Brown-out Reset Voltage Selection bits
  2108                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2109                           ;	ZCD Disable bit
  2110                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2111                           ;	PPSLOCK bit One-Way Set Enable bit
  2112                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
  2113                           ;	Stack Full/Underflow Reset Enable bit
  2114                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2115                           ;	Low Voltage Programming Enable bit
  2116                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2117                           ;	Extended Instruction Set Enable bit
  2118                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2119   300003                     	org	3145731
  2120   300003  C7                 	db	199
  2121                           
  2122                           ;Config register CONFIG5 @ 0x300004
  2123                           ;	WDT Period selection bits
  2124                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2125                           ;	WDT operating mode
  2126                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2127   300004                     	org	3145732
  2128   300004  9F                 	db	159
  2129                           
  2130                           ;Config register CONFIG6 @ 0x300005
  2131                           ;	WDT Window Select bits
  2132                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2133                           ;	WDT input clock selector
  2134                           ;	WDTCCS = SC, Software Control
  2135   300005                     	org	3145733
  2136   300005  FF                 	db	255
  2137                           
  2138                           ;Config register CONFIG7 @ 0x300006
  2139                           ;	Boot Block Size selection bits
  2140                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2141                           ;	Boot Block enable bit
  2142                           ;	BBEN = OFF, Boot block disabled
  2143                           ;	Storage Area Flash enable bit
  2144                           ;	SAFEN = OFF, SAF disabled
  2145                           ;	Background Debugger
  2146                           ;	DEBUG = OFF, Background Debugger disabled
  2147   300006                     	org	3145734
  2148   300006  FF                 	db	255
  2149                           
  2150                           ;Config register CONFIG8 @ 0x300007
  2151                           ;	Boot Block Write Protection bit
  2152                           ;	WRTB = OFF, Boot Block not Write protected
  2153                           ;	Configuration Register Write Protection bit
  2154                           ;	WRTC = OFF, Configuration registers not Write protected
  2155                           ;	Data EEPROM Write Protection bit
  2156                           ;	WRTD = OFF, Data EEPROM not Write protected
  2157                           ;	SAF Write protection bit
  2158                           ;	WRTSAF = OFF, SAF not Write Protected
  2159                           ;	Application Block write protection bit
  2160                           ;	WRTAPP = OFF, Application Block not write protected
  2161   300007                     	org	3145735
  2162   300007  FF                 	db	255
  2163                           
  2164                           ; Padding undefined space
  2165   300008                     	org	3145736
  2166   300008  FF                 	db	255
  2167                           
  2168                           ;Config register CONFIG10 @ 0x300009
  2169                           ;	PFM and Data EEPROM Code Protection bit
  2170                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2171   300009                     	org	3145737
  2172   300009  FF                 	db	255
  2173                           tosu	equ	0x4FF
  2174                           tosh	equ	0x4FE
  2175                           tosl	equ	0x4FD
  2176                           stkptr	equ	0x4FC
  2177                           pclatu	equ	0x4FB
  2178                           pclath	equ	0x4FA
  2179                           pcl	equ	0x4F9
  2180                           tblptru	equ	0x4F8
  2181                           tblptrh	equ	0x4F7
  2182                           tblptrl	equ	0x4F6
  2183                           tablat	equ	0x4F5
  2184                           prodh	equ	0x4F4
  2185                           prodl	equ	0x4F3
  2186                           indf0	equ	0x4EF
  2187                           postinc0	equ	0x4EE
  2188                           postdec0	equ	0x4ED
  2189                           preinc0	equ	0x4EC
  2190                           plusw0	equ	0x4EB
  2191                           fsr0h	equ	0x4EA
  2192                           fsr0l	equ	0x4E9
  2193                           wreg	equ	0x4E8
  2194                           indf1	equ	0x4E7
  2195                           postinc1	equ	0x4E6
  2196                           postdec1	equ	0x4E5
  2197                           preinc1	equ	0x4E4
  2198                           plusw1	equ	0x4E3
  2199                           fsr1h	equ	0x4E2
  2200                           fsr1l	equ	0x4E1
  2201                           bsr	equ	0x4E0
  2202                           indf2	equ	0x4DF
  2203                           postinc2	equ	0x4DE
  2204                           postdec2	equ	0x4DD
  2205                           preinc2	equ	0x4DC
  2206                           plusw2	equ	0x4DB
  2207                           fsr2h	equ	0x4DA
  2208                           fsr2l	equ	0x4D9
  2209                           status	equ	0x4D8

Data Sizes:
    Strings     31
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      39
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    FM_Lcd_Send_String@cadena	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[8]), STR_2(CODE[6]), STR_1(CODE[17]), 

    FM_Hfintosc_Init@clock_params	PTR struct . size(2) Largest target is 2
		 -> Internal_Clock_Init@my_clock_params(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_FM_Lcd_Send_Uint8
    _Internal_Clock_Init->_FM_Hfintosc_Init
    _FM_Lcd_Set_Cursor->_FM_Lcd_Send_Command
    _FM_Lcd_Send_Uint8->___awdiv
    ___awdiv->___awmod
    _FM_Lcd_Send_String->_FM_Lcd_Send_Character
    _FM_Lcd_Send_Character->_FM_Lcd_Send_Nibble
    _FM_Lcd_Easy_Init->_FM_Lcd_Send_Command
    _FM_Lcd_Send_Command->_FM_Lcd_Send_Nibble

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3223
                                             20 COMRAM     3     3      0
                   _FM_Lcd_Easy_Init
              _FM_Lcd_Send_Character
                 _FM_Lcd_Send_String
                  _FM_Lcd_Send_Uint8
                  _FM_Lcd_Set_Cursor
                _Internal_Clock_Init
           _User_Matrix_Buttons_Init
           _User_Matrix_Buttons_Read
      _User_Matrix_Decode_Raw_Readed
 ---------------------------------------------------------------------------------
 (1) _User_Matrix_Decode_Raw_Readed                        4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _User_Matrix_Buttons_Read                             3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _User_Matrix_Buttons_Init                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Internal_Clock_Init                                  2     2      0     169
                                              3 COMRAM     2     2      0
                   _FM_Hfintosc_Init
 ---------------------------------------------------------------------------------
 (2) _FM_Hfintosc_Init                                     3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Set_Cursor                                    3     2      1     477
                                              5 COMRAM     3     2      1
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Send_Uint8                                    6     6      0    1671
                                             14 COMRAM     6     6      0
              _FM_Lcd_Send_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Send_String                                   5     3      2     474
                                              5 COMRAM     5     3      2
              _FM_Lcd_Send_Character
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Character                                1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Easy_Init                                     0     0      0     156
              _FM_Lcd_Easy_Gpio_Init
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Command                                  1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (3) _FM_Lcd_Send_Nibble                                   4     4      0     134
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Easy_Gpio_Init                                1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FM_Lcd_Easy_Init
     _FM_Lcd_Easy_Gpio_Init
     _FM_Lcd_Send_Command
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Send_Character
     _FM_Lcd_Send_Nibble
   _FM_Lcd_Send_String
     _FM_Lcd_Send_Character
   _FM_Lcd_Send_Uint8
     _FM_Lcd_Send_Character
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _FM_Lcd_Set_Cursor
     _FM_Lcd_Send_Command
   _Internal_Clock_Init
     _FM_Hfintosc_Init
   _User_Matrix_Buttons_Init
   _User_Matrix_Buttons_Read
   _User_Matrix_Decode_Raw_Readed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhh      366      0       0      77        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlll        AD      0       0      79        0.0%
BITBIGSFRlhl        A7      0       0      76        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      27       1       41.1%
BITBIGSFRhhh        2E      0       0      71        0.0%
BITBIGSFRhhlh        5      0       0      72        0.0%
BITBIGSFRhl          5      0       0      74        0.0%
BITBIGSFRllhl        3      0       0      78        0.0%
BITBIGSFRlhh         1      0       0      75        0.0%
BITBIGSFRhhll        1      0       0      73        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      58        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Apr 25 18:40:14 2023

                                     l70 274E                                       l82 2C20  
                                     l69 26AC                                       l95 2B88  
                                     l79 2AB0                                       l88 2BEE  
                           ___awdiv@sign 050C                ?_User_Matrix_Buttons_Init 0501  
              ?_User_Matrix_Buttons_Read 0501                                      l112 2C16  
                                    l120 2B40                                      l106 2C28  
                                    l122 2B4C                                      l115 2C0A  
                                    l131 29DE                                      l109 2A52  
                                    l134 2BB2                                      l128 2B08  
                                    l381 28C2                                      l368 2812  
                                    l840 2C26                                      l932 2C18  
                                    l838 2C22                                      l934 2C1E  
                                    l980 2A64                                      l990 2A88  
                                    l982 2A76                                      l992 2A9A  
                                    l984 2A7C                                      l976 2A54  
                                    l994 2AA0                                      l986 2A80  
                                    l978 2A58                                      l996 2AA4  
                                    l988 2A84                                      l998 2AAE  
                                    u200 27A2                                      u201 279E  
                                    u210 27C0                                      u211 27BC  
                                    u220 27DC                                      u300 2B20  
                                    u221 27D8                                      u301 2B1C  
                                    u230 2802                                      u310 2B38  
                                    u231 27FE                                      u311 2B34  
                                    u320 2B08                                      u240 2826  
                                    u160 2A76                                      u321 2B04  
                                    u241 2822                                      u161 2A72  
                                    u250 2840                                      u170 2A9A  
                                    u251 283C                                      u171 2A96  
                                    u180 2762                                      u260 285A  
                                    u181 275E                                      u261 2856  
                                    u190 277C                                      u270 2878  
                                    u191 2778                                      u271 2874  
                                    u280 288E                                      u281 288A  
                                    u337 293C                                      u290 28B2  
                                    u347 2A02                                      u291 28AE  
                                    u357 2A14                                      u367 2A30  
                                    u377 2A42                             ___awmod@sign 0506  
                                    wreg 04E8                                     l1010 2644  
                                   l1002 2624                                     l1100 29E2  
                                   l1020 266C                                     l1012 264C  
                                   l1004 262C                                     l1110 2A24  
                                   l1102 29FA                                     l1030 2694  
                                   l1022 2674                                     l1014 2654  
                                   l1006 2634                                     l1112 2A2A  
                                   l1104 2A0C                                     l1120 2C04  
                                   l1200 2896                                     l1032 269C  
                                   l1024 267C                                     l1016 265C  
                                   l1008 263C                                     l1040 274C  
                                   l1114 2A3A                                     l1106 2A0E  
                                   l1130 2C10                                     l1202 289C  
                                   l1122 2B4E                                     l1034 26A4  
                                   l1026 2684                                     l1018 2664  
                                   l1116 2A4C                                     l1108 2A1E  
                                   l1140 276E                                     l1132 2750  
                                   l1204 28A2                                     l1220 2B10  
                                   l1124 2B58                                     l1212 2BDA  
                                   l1028 268C                                     l1118 2C02  
                                   l1150 27A2                                     l1142 277C  
                                   l1134 2754                                     l1206 28B2  
                                   l1230 2B46                                     l1222 2B20  
                                   l1126 2B6E                                     l1214 2BE2  
                                   l1038 26B2                                     l1128 2C0E  
                                   l1216 2B8A                                     l1240 2ADC  
                                   l1160 27DC                                     l1152 27AA  
                                   l1144 2784                                     l1136 2762  
                                   l1208 28BA                                     l1232 2B4C  
                                   l1224 2B28                                     l1234 2AB2  
                                   l1170 2802                                     l1162 27E4  
                                   l1154 27B2                                     l1146 2788  
                                   l1138 276A                                     l1250 29AE  
                                   l1242 2954                                     l1226 2B38  
                                   l1218 2B0C                                     l1236 2ABA  
                                   l1172 280A                                     l1164 27E6  
                                   l1156 27C0                                     l1148 2790  
                                   l1180 2826                                     l1252 29C6  
                                   l1244 2954                                     l1228 2B42  
                                   l1308 26C6                                     l1260 28C8  
                                   l1238 2ADA                                     l1166 27EC  
                                   l1158 27C6                                     l1190 285A  
                                   l1182 282E                                     l1254 29CE  
                                   l1246 296A                                     l1270 28F0  
                                   l1262 28CC                                     l1168 27F2  
                                   l1192 2862                                     l1184 2832  
                                   l1176 2814                                     l1256 29D6  
                                   l1248 2994                                     l1280 2918  
                                   l1272 28F6                                     l1264 28D0  
                                   l1194 286A                                     l1186 2840  
                                   l1178 2818                                     l1282 2924  
                                   l1274 2900                                     l1266 28DA  
                                   l1258 28C4                                     l1196 2878  
                                   l1188 2848                                     l1284 292E  
                                   l1276 290C                                     l1268 28E6  
                                   l1198 288E                                     l1286 2932  
                                   l1278 2912                                     STR_1 2601  
                                   STR_2 261A                                     STR_3 2612  
                                   _LATD 04C1                                     _LATF 04C3  
             __end_of_FM_Lcd_Send_Nibble 2A54                        ?_FM_Hfintosc_Init 0501  
                                   _WPUD 0419                                     _main 28C4  
           FM_Lcd_Send_Nibble@upper_bits 0503                                     fsr2h 04DA  
                                   indf2 04DF                                     fsr1l 04E1  
                                   fsr2l 04D9                       ??_FM_Hfintosc_Init 0503  
             __end_of_FM_Lcd_Send_String 2B0A                  ??_FM_Lcd_Send_Character 0505  
                                   start FFFC   FM_Lcd_Send_Character@character_to_send 0505  
                  _FM_Lcd_Easy_Gpio_Init 2C22                             ___param_bank 0000  
                                  ?_main 0501                          __end_of___awdiv 2814  
                        __end_of___awmod 28C4              __end_of_FM_Lcd_Send_Command 2C18  
                        ___awdiv@divisor 0509                          ___awdiv@counter 050B  
                                  _PORTD 04D1                                    _TRISD 04C9  
                                  _TRISF 04CB                             main@raw_data 0517  
               FM_Lcd_Send_Uint8@decenas 0512                                    tablat 04F5  
                                  status 04D8                          __initialization 2BB4  
                           __end_of_main 2952                                   ??_main 0515  
                          __activetblptr 0003                         ___awdiv@dividend 0507  
                                 _ANSELD 0418                   ?_FM_Lcd_Easy_Gpio_Init 0501  
                              ??___awdiv 050B                                ??___awmod 0505  
 User_Matrix_Decode_Raw_Readed@raw_value 0503                         ___awdiv@quotient 050D  
                        ___awmod@divisor 0503                                   isa$std 0001  
                        ___awmod@counter 0505                             __pdataCOMRAM 0518  
                           __mediumconst 0000                                   tblptrh 04F7  
                                 tblptrl 04F6                                   tblptru 04F8  
                             __accesstop 0560                  __end_of__initialization 2BD4  
                          ___rparam_used 0001         __end_of_User_Matrix_Buttons_Init 2C22  
       __end_of_User_Matrix_Buttons_Read 2AB2                           __pcstackCOMRAM 0501  
                       _FM_Lcd_Easy_Init 2B8A             FM_Hfintosc_Init@clock_params 0501  
          __end_of_FM_Lcd_Send_Character 2C0C                       _FM_Lcd_Send_Nibble 29E0  
                     _FM_Lcd_Send_String 2AB2                      ?_FM_Lcd_Send_Nibble 0501  
                    ?_FM_Lcd_Send_String 0506                     ??_FM_Lcd_Send_Nibble 0501  
                   ??_FM_Lcd_Send_String 0508                                  __Hparam 0000  
                                __Lparam 0000                                  ___awdiv 2750  
                                ___awmod 2814                 _User_Matrix_Buttons_Init 2C18  
               _User_Matrix_Buttons_Read 2A54                             __psmallconst 2600  
                                __pcinit 2BB4                                  __ramtop 2600  
                                __ptext0 28C4                                  __ptext1 2622  
                                __ptext2 2A54                                  __ptext3 2C18  
                                __ptext4 2BDA                                  __ptext5 2B4E  
                                __ptext6 2B0A                                  __ptext7 2952  
                                __ptext8 2814                                  __ptext9 2750  
                       ___awmod@dividend 0501    __end_of_User_Matrix_Decode_Raw_Readed 2750  
          _User_Matrix_Decode_Raw_Readed 2622                     end_of_initialization 2BD4  
                ??_FM_Lcd_Easy_Gpio_Init 0501                                  postdec1 04E5  
                                postinc0 04EE                   FM_Lcd_Set_Cursor@filas 0507  
               _character_matrix_buttons 0518                      _Internal_Clock_Init 2BDA  
               __end_of_FM_Lcd_Easy_Init 2BB4                FM_Lcd_Set_Cursor@base_pos 0508  
                   ?_Internal_Clock_Init 0501                         _FM_Hfintosc_Init 2B4E  
                          __pidataCOMRAM 2BF0                  FM_Lcd_Send_Uint8@numero 0514  
                    start_initialization 2BB4           ?_User_Matrix_Decode_Raw_Readed 0501  
               FM_Lcd_Send_String@cadena 0506                    ??_Internal_Clock_Init 0504  
             ??_User_Matrix_Buttons_Init 0501               ??_User_Matrix_Buttons_Read 0501  
                      _FM_Lcd_Send_Uint8 2952                    _FM_Lcd_Send_Character 2C00  
                               ?___awdiv 0507                                 ?___awmod 0501  
                    _FM_Lcd_Send_Command 2C0C                        _FM_Lcd_Set_Cursor 2B0A  
                     ?_FM_Lcd_Send_Uint8 0501                       ?_FM_Lcd_Set_Cursor 0506  
     FM_Lcd_Send_Command@command_to_send 0505                              __smallconst 2600  
                    ??_FM_Lcd_Send_Uint8 050F                      ??_FM_Lcd_Set_Cursor 0507  
                   ?_FM_Lcd_Send_Command 0501            __end_of_FM_Lcd_Easy_Gpio_Init 2C2A  
              __end_of_FM_Lcd_Send_Uint8 29E0                __end_of_FM_Lcd_Set_Cursor 2B4E  
                  _FM_Lcd_Send_Uint8$894 050F                    ??_FM_Lcd_Send_Command 0505  
                              copy_data0 2BC8                 __end_of_FM_Hfintosc_Init 2B8A  
                      ?_FM_Lcd_Easy_Init 0501      User_Matrix_Buttons_Read@push_button 0503  
                     ??_FM_Lcd_Easy_Init 0506                  FM_Lcd_Send_String@index 050A  
                               __Hrparam 0000                   ?_FM_Lcd_Send_Character 0501  
                               __Lrparam 0000                FM_Lcd_Send_Uint8@centenas 0511  
                               __ptext10 2AB2                                 __ptext11 2C00  
                               __ptext12 2B8A                                 __ptext13 2C0C  
                               __ptext14 29E0                                 __ptext15 2C22  
              FM_Lcd_Send_Uint8@unidades 0513                              _OSCCON1bits 00AD  
                               isa$xinst 0000          ??_User_Matrix_Decode_Raw_Readed 0501  
     Internal_Clock_Init@my_clock_params 0504        User_Matrix_Buttons_Read@read_cols 0502  
      User_Matrix_Buttons_Read@read_rows 0501              __end_of_Internal_Clock_Init 2BF0  
         FM_Lcd_Send_Nibble@byte_to_send 0502                               _OSCFRQbits 00B1  
User_Matrix_Decode_Raw_Readed@hexa_value 0504                 FM_Lcd_Set_Cursor@columna 0506  
           FM_Lcd_Send_Nibble@lower_bits 0504  
