

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Apr 25 20:44:32 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 17/06/2022 GMT
    31                           ; 
    32                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F57Q43 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     
    65                           	psect	idataCOMRAM
    66   002A6C                     __pidataCOMRAM:
    67                           	callstack 0
    68                           
    69                           ;initializer for _character_matrix_buttons
    70   002A6C  31                 	db	49
    71   002A6D  37                 	db	55
    72   002A6E  34                 	db	52
    73   002A6F  2A                 	db	42
    74   002A70  33                 	db	51
    75   002A71  39                 	db	57
    76   002A72  36                 	db	54
    77   002A73  23                 	db	35
    78   002A74  41                 	db	65
    79   002A75  43                 	db	67
    80   002A76  42                 	db	66
    81   002A77  44                 	db	68
    82   002A78  32                 	db	50
    83   002A79  38                 	db	56
    84   002A7A  35                 	db	53
    85   002A7B  30                 	db	48
    86   000000                     _OSCCON1bits	set	173
    87   000000                     _ANSELD	set	1048
    88   000000                     _LATF	set	1219
    89   000000                     _TRISD	set	1225
    90   000000                     _PORTD	set	1233
    91   000000                     _TRISF	set	1227
    92   000000                     _OSCFRQbits	set	177
    93                           
    94                           	psect	smallconst
    95   002600                     __psmallconst:
    96                           	callstack 0
    97   002600  00                 	db	0
    98   002601                     STR_1:
    99   002601  4C                 	db	76	;'L'
   100   002602  65                 	db	101	;'e'
   101   002603  63                 	db	99	;'c'
   102   002604  74                 	db	116	;'t'
   103   002605  2E                 	db	46
   104   002606  20                 	db	32
   105   002607  4D                 	db	77	;'M'
   106   002608  61                 	db	97	;'a'
   107   002609  74                 	db	116	;'t'
   108   00260A  72                 	db	114	;'r'
   109   00260B  69                 	db	105	;'i'
   110   00260C  78                 	db	120	;'x'
   111   00260D  20                 	db	32
   112   00260E  34                 	db	52	;'4'
   113   00260F  78                 	db	120	;'x'
   114   002610  34                 	db	52	;'4'
   115   002611  00                 	db	0
   116   002612                     STR_2:
   117   002612  42                 	db	66	;'B'
   118   002613  54                 	db	84	;'T'
   119   002614  4E                 	db	78	;'N'
   120   002615  3A                 	db	58	;':'
   121   002616  20                 	db	32
   122   002617  00                 	db	0
   123   002618                     STR_3:
   124   002618  20                 	db	32
   125   002619  3A                 	db	58	;':'
   126   00261A  20                 	db	32
   127   00261B  00                 	db	0
   128   00261C  00                 	db	0	; dummy byte at the end
   129   000000                     
   130                           ; #config settings
   131                           
   132                           	psect	cinit
   133   0029FE                     __pcinit:
   134                           	callstack 0
   135   0029FE                     start_initialization:
   136                           	callstack 0
   137   0029FE                     __initialization:
   138                           	callstack 0
   139                           
   140                           ; Initialize objects allocated to COMRAM (16 bytes)
   141                           ; load TBLPTR registers with __pidataCOMRAM
   142   0029FE  0E6C               	movlw	low __pidataCOMRAM
   143   002A00  6EF6               	movwf	tblptrl,c
   144   002A02  0E2A               	movlw	high __pidataCOMRAM
   145   002A04  6EF7               	movwf	tblptrh,c
   146   002A06  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   147   002A08  6EF8               	movwf	tblptru,c
   148   002A0A  EE01  F118         	lfsr	0,__pdataCOMRAM
   149   002A0E  EE10 F010          	lfsr	1,16
   150   002A12                     copy_data0:
   151   002A12  0009               	tblrd		*+
   152   002A14  C4F5 F4EE          	movff	tablat,postinc0
   153   002A18  50E5               	movf	postdec1,w,c
   154   002A1A  50E1               	movf	fsr1l,w,c
   155   002A1C  E1FA               	bnz	copy_data0
   156   002A1E                     end_of_initialization:
   157                           	callstack 0
   158   002A1E                     __end_of__initialization:
   159                           	callstack 0
   160   002A1E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   161   002A20  6EF8               	movwf	tblptru,c
   162   002A22  0E26               	movlw	high __Lsmallconst
   163   002A24  6EF7               	movwf	tblptrh,c
   164   002A26  0100               	movlb	0
   165   002A28  EF4A  F014         	goto	_main	;jump to C main() function
   166                           
   167                           	psect	dataCOMRAM
   168   000518                     __pdataCOMRAM:
   169                           	callstack 0
   170   000518                     _character_matrix_buttons:
   171                           	callstack 0
   172   000518                     	ds	16
   173                           
   174                           	psect	cstackCOMRAM
   175   000501                     __pcstackCOMRAM:
   176                           	callstack 0
   177   000501                     ??_FM_Lcd_Send_Nibble:
   178   000501                     ?___awmod:
   179                           	callstack 0
   180   000501                     FM_Hfintosc_Init@clock_params:
   181                           	callstack 0
   182   000501                     ___awmod@dividend:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x0
   186   000501                     	ds	1
   187   000502                     FM_Lcd_Send_Nibble@byte_to_send:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x1
   191   000502                     	ds	1
   192   000503                     ??_FM_Hfintosc_Init:
   193   000503                     FM_Lcd_Send_Nibble@upper_bits:
   194                           	callstack 0
   195   000503                     ___awmod@divisor:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x2
   199   000503                     	ds	1
   200   000504                     FM_Lcd_Send_Nibble@lower_bits:
   201                           	callstack 0
   202   000504                     Internal_Oscillator_Init@my_clock_params:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x3
   206   000504                     	ds	1
   207   000505                     FM_Lcd_Send_Command@command_to_send:
   208                           	callstack 0
   209   000505                     FM_Lcd_Send_Character@character_to_send:
   210                           	callstack 0
   211   000505                     ___awmod@counter:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x4
   215   000505                     	ds	1
   216   000506                     FM_Lcd_Set_Cursor@columna:
   217                           	callstack 0
   218   000506                     ___awmod@sign:
   219                           	callstack 0
   220   000506                     FM_Lcd_Send_String@cadena:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x5
   224   000506                     	ds	1
   225   000507                     ?___awdiv:
   226                           	callstack 0
   227   000507                     FM_Lcd_Set_Cursor@filas:
   228                           	callstack 0
   229   000507                     ___awdiv@dividend:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x6
   233   000507                     	ds	1
   234   000508                     ??_FM_Lcd_Send_String:
   235   000508                     FM_Lcd_Set_Cursor@base_pos:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x7
   239   000508                     	ds	1
   240   000509                     ___awdiv@divisor:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x8
   244   000509                     	ds	1
   245   00050A                     FM_Lcd_Send_String@index:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x9
   249   00050A                     	ds	1
   250   00050B                     ___awdiv@counter:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0xA
   254   00050B                     	ds	1
   255   00050C                     ___awdiv@sign:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0xB
   259   00050C                     	ds	1
   260   00050D                     ___awdiv@quotient:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0xC
   264   00050D                     	ds	2
   265   00050F                     _FM_Lcd_Send_Uint8$880:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0xE
   269   00050F                     	ds	2
   270   000511                     FM_Lcd_Send_Uint8@centenas:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x10
   274   000511                     	ds	1
   275   000512                     FM_Lcd_Send_Uint8@decenas:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x11
   279   000512                     	ds	1
   280   000513                     FM_Lcd_Send_Uint8@unidades:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x12
   284   000513                     	ds	1
   285   000514                     FM_Lcd_Send_Uint8@numero:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x13
   289   000514                     	ds	1
   290   000515                     Read_Matrix_74LS922_Push@data_readed:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x14
   294   000515                     	ds	1
   295   000516                     ??_main:
   296                           
   297                           ; 1 bytes @ 0x15
   298   000516                     	ds	2
   299                           
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 63 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  2   36[None  ] int 
   312 ;; Registers used:
   313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   323 ;;Total ram usage:        2 bytes
   324 ;; Hardware stack levels required when called: 4
   325 ;; This function calls:
   326 ;;		_FM_Lcd_Easy_Init
   327 ;;		_FM_Lcd_Send_String
   328 ;;		_FM_Lcd_Set_Cursor
   329 ;;		_Internal_Oscillator_Init
   330 ;;		_Matrix_74LS922_Init
   331 ;;		_Read_Matrix_74LS922_Push
   332 ;; This function is called by:
   333 ;;		Startup code after reset
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text0
   338   002894                     __ptext0:
   339                           	callstack 0
   340   002894                     _main:
   341                           	callstack 123
   342   002894                     
   343                           ;main.c: 65:     Internal_Oscillator_Init();
   344   002894  EC2B  F015         	call	_Internal_Oscillator_Init	;wreg free
   345   002898                     
   346                           ;main.c: 66:     FM_Lcd_Easy_Init();
   347   002898  EC16  F015         	call	_FM_Lcd_Easy_Init	;wreg free
   348   00289C                     
   349                           ;main.c: 67:     Matrix_74LS922_Init();
   350   00289C  EC44  F015         	call	_Matrix_74LS922_Init	;wreg free
   351   0028A0                     
   352                           ;main.c: 68:     FM_Lcd_Set_Cursor(ROW_1, COL_1);
   353   0028A0  0E00               	movlw	0
   354   0028A2  6E06               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   355   0028A4  0E00               	movlw	0
   356   0028A6  ECA2  F014         	call	_FM_Lcd_Set_Cursor
   357   0028AA                     
   358                           ;main.c: 69:     FM_Lcd_Send_String("Lect. Matrix 4x4");
   359   0028AA  0E01               	movlw	low STR_1
   360   0028AC  6E06               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   361   0028AE  0E26               	movlw	high STR_1
   362   0028B0  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   363   0028B2  EC7A  F014         	call	_FM_Lcd_Send_String	;wreg free
   364   0028B6                     l1149:
   365                           
   366                           ;main.c: 71:     {;main.c: 72:         FM_Lcd_Set_Cursor(ROW_2, COL_1);
   367   0028B6  0E00               	movlw	0
   368   0028B8  6E06               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   369   0028BA  0E01               	movlw	1
   370   0028BC  ECA2  F014         	call	_FM_Lcd_Set_Cursor
   371   0028C0                     
   372                           ;main.c: 73:         FM_Lcd_Send_String("BTN: ");
   373   0028C0  0E12               	movlw	low STR_2
   374   0028C2  6E06               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   375   0028C4  0E26               	movlw	high STR_2
   376   0028C6  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   377   0028C8  EC7A  F014         	call	_FM_Lcd_Send_String	;wreg free
   378   0028CC                     
   379                           ;main.c: 74:         Read_Matrix_74LS922_Push();
   380   0028CC  ECE2  F014         	call	_Read_Matrix_74LS922_Push	;wreg free
   381   0028D0                     
   382                           ;main.c: 75:         LATF ^= (1 << 3);;
   383   0028D0  0E08               	movlw	8
   384   0028D2  1AC3               	xorwf	195,f,c	;volatile
   385   0028D4                     
   386                           ;main.c: 76:         _delay((unsigned long)((100)*(16000000UL/4000.0)));
   387   0028D4  0E03               	movlw	3
   388   0028D6  6E17               	movwf	(??_main+1)^(0+1280),c
   389   0028D8  0E08               	movlw	8
   390   0028DA  6E16               	movwf	??_main^(0+1280),c
   391   0028DC  0E77               	movlw	119
   392   0028DE                     u337:
   393   0028DE  2EE8               	decfsz	wreg,f,c
   394   0028E0  D7FE               	bra	u337
   395   0028E2  2E16               	decfsz	??_main^(0+1280),f,c
   396   0028E4  D7FC               	bra	u337
   397   0028E6  2E17               	decfsz	(??_main+1)^(0+1280),f,c
   398   0028E8  D7FA               	bra	u337
   399   0028EA  F000               	nop	
   400   0028EC  EF5B  F014         	goto	l1149
   401   0028F0  EFFE  F0FF         	goto	start
   402   0028F4                     __end_of_main:
   403                           	callstack 0
   404                           
   405 ;; *************** function _Read_Matrix_74LS922_Push *****************
   406 ;; Defined at:
   407 ;;		line 85 in file "main.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  data_readed     1   20[COMRAM] unsigned char 
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   425 ;;Total ram usage:        1 bytes
   426 ;; Hardware stack levels used: 1
   427 ;; Hardware stack levels required when called: 3
   428 ;; This function calls:
   429 ;;		_FM_Lcd_Send_Character
   430 ;;		_FM_Lcd_Send_String
   431 ;;		_FM_Lcd_Send_Uint8
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text1
   438   0029C4                     __ptext1:
   439                           	callstack 0
   440   0029C4                     _Read_Matrix_74LS922_Push:
   441                           	callstack 123
   442   0029C4                     
   443                           ;main.c: 87:     uint8_t data_readed;;main.c: 88:     if(PORTD & (1 << 4))
   444   0029C4  A8D1               	btfss	209,4,c	;volatile
   445   0029C6  EFE7  F014         	goto	u321
   446   0029CA  EFE9  F014         	goto	u320
   447   0029CE                     u321:
   448   0029CE  EFFE  F014         	goto	l44
   449   0029D2                     u320:
   450   0029D2                     
   451                           ;main.c: 89:     {;main.c: 90:         data_readed = PORTD & 0x0F;
   452   0029D2  50D1               	movf	209,w,c	;volatile
   453   0029D4  0B0F               	andlw	15
   454   0029D6  6E15               	movwf	Read_Matrix_74LS922_Push@data_readed^(0+1280),c
   455   0029D8                     
   456                           ;main.c: 91:         FM_Lcd_Send_Uint8(data_readed);
   457   0029D8  5015               	movf	Read_Matrix_74LS922_Push@data_readed^(0+1280),w,c
   458   0029DA  ECC9  F013         	call	_FM_Lcd_Send_Uint8
   459   0029DE                     
   460                           ;main.c: 92:         FM_Lcd_Send_String(" : ");
   461   0029DE  0E18               	movlw	low STR_3
   462   0029E0  6E06               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   463   0029E2  0E26               	movlw	high STR_3
   464   0029E4  6E07               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   465   0029E6  EC7A  F014         	call	_FM_Lcd_Send_String	;wreg free
   466   0029EA                     
   467                           ;main.c: 93:         FM_Lcd_Send_Character(character_matrix_buttons[data_readed]);
   468   0029EA  0E18               	movlw	low _character_matrix_buttons
   469   0029EC  2415               	addwf	Read_Matrix_74LS922_Push@data_readed^(0+1280),w,c
   470   0029EE  6ED9               	movwf	fsr2l,c
   471   0029F0  6ADA               	clrf	fsr2h,c
   472   0029F2  0E05               	movlw	high _character_matrix_buttons
   473   0029F4  22DA               	addwfc	fsr2h,f,c
   474   0029F6  50DF               	movf	indf2,w,c
   475   0029F8  EC3E  F015         	call	_FM_Lcd_Send_Character
   476   0029FC                     l44:
   477   0029FC  0012               	return		;funcret
   478   0029FE                     __end_of_Read_Matrix_74LS922_Push:
   479                           	callstack 0
   480                           
   481 ;; *************** function _FM_Lcd_Send_Uint8 *****************
   482 ;; Defined at:
   483 ;;		line 87 in file "FM_Lcd_Easy.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  numero          1    wreg     unsigned char 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  numero          1   19[COMRAM] unsigned char 
   488 ;;  unidades        1   18[COMRAM] unsigned char 
   489 ;;  decenas         1   17[COMRAM] unsigned char 
   490 ;;  centenas        1   16[COMRAM] unsigned char 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   501 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   503 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   504 ;;Total ram usage:        6 bytes
   505 ;; Hardware stack levels used: 1
   506 ;; Hardware stack levels required when called: 2
   507 ;; This function calls:
   508 ;;		_FM_Lcd_Send_Character
   509 ;;		___awdiv
   510 ;;		___awmod
   511 ;; This function is called by:
   512 ;;		_Read_Matrix_74LS922_Push
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text2
   517   002792                     __ptext2:
   518                           	callstack 0
   519   002792                     _FM_Lcd_Send_Uint8:
   520                           	callstack 123
   521                           
   522                           ;incstack = 0
   523                           ;FM_Lcd_Send_Uint8@numero stored from wreg
   524   002792  6E14               	movwf	FM_Lcd_Send_Uint8@numero^(0+1280),c
   525   002794                     
   526                           ;FM_Lcd_Easy.c: 90:     centenas = numero / 100;
   527   002794  C514  F507         	movff	FM_Lcd_Send_Uint8@numero,___awdiv@dividend
   528   002798  6A08               	clrf	(___awdiv@dividend+1)^(0+1280),c
   529   00279A  0E00               	movlw	0
   530   00279C  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   531   00279E  0E64               	movlw	100
   532   0027A0  6E09               	movwf	___awdiv@divisor^(0+1280),c
   533   0027A2  EC0F  F013         	call	___awdiv	;wreg free
   534   0027A6  5007               	movf	?___awdiv^(0+1280),w,c
   535   0027A8  6E11               	movwf	FM_Lcd_Send_Uint8@centenas^(0+1280),c
   536   0027AA                     
   537                           ;FM_Lcd_Easy.c: 91:     decenas = (numero % 100) / 10;
   538   0027AA  0E00               	movlw	0
   539   0027AC  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   540   0027AE  0E64               	movlw	100
   541   0027B0  6E03               	movwf	___awmod@divisor^(0+1280),c
   542   0027B2  C514  F501         	movff	FM_Lcd_Send_Uint8@numero,___awmod@dividend
   543   0027B6  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   544   0027B8  EC71  F013         	call	___awmod	;wreg free
   545   0027BC  C501  F507         	movff	?___awmod,___awdiv@dividend
   546   0027C0  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
   547   0027C4  0E00               	movlw	0
   548   0027C6  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   549   0027C8  0E0A               	movlw	10
   550   0027CA  6E09               	movwf	___awdiv@divisor^(0+1280),c
   551   0027CC  EC0F  F013         	call	___awdiv	;wreg free
   552   0027D0  5007               	movf	?___awdiv^(0+1280),w,c
   553   0027D2  6E12               	movwf	FM_Lcd_Send_Uint8@decenas^(0+1280),c
   554   0027D4                     
   555                           ;FM_Lcd_Easy.c: 92:     unidades = (numero % 100) % 10;
   556   0027D4  0E00               	movlw	0
   557   0027D6  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   558   0027D8  0E64               	movlw	100
   559   0027DA  6E03               	movwf	___awmod@divisor^(0+1280),c
   560   0027DC  C514  F501         	movff	FM_Lcd_Send_Uint8@numero,___awmod@dividend
   561   0027E0  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   562   0027E2  EC71  F013         	call	___awmod	;wreg free
   563   0027E6  C501  F50F         	movff	?___awmod,_FM_Lcd_Send_Uint8$880
   564   0027EA  C502  F510         	movff	?___awmod+1,_FM_Lcd_Send_Uint8$880+1
   565   0027EE                     
   566                           ;FM_Lcd_Easy.c: 92:     unidades = (numero % 100) % 10;
   567   0027EE  C50F  F501         	movff	_FM_Lcd_Send_Uint8$880,___awmod@dividend
   568   0027F2  C510  F502         	movff	_FM_Lcd_Send_Uint8$880+1,___awmod@dividend+1
   569   0027F6  0E00               	movlw	0
   570   0027F8  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   571   0027FA  0E0A               	movlw	10
   572   0027FC  6E03               	movwf	___awmod@divisor^(0+1280),c
   573   0027FE  EC71  F013         	call	___awmod	;wreg free
   574   002802  5001               	movf	?___awmod^(0+1280),w,c
   575   002804  6E13               	movwf	FM_Lcd_Send_Uint8@unidades^(0+1280),c
   576   002806                     
   577                           ;FM_Lcd_Easy.c: 93:     FM_Lcd_Send_Character(centenas + 0x30);
   578   002806  5011               	movf	FM_Lcd_Send_Uint8@centenas^(0+1280),w,c
   579   002808  0F30               	addlw	48
   580   00280A  EC3E  F015         	call	_FM_Lcd_Send_Character
   581   00280E                     
   582                           ;FM_Lcd_Easy.c: 94:     FM_Lcd_Send_Character(decenas + 0x30);
   583   00280E  5012               	movf	FM_Lcd_Send_Uint8@decenas^(0+1280),w,c
   584   002810  0F30               	addlw	48
   585   002812  EC3E  F015         	call	_FM_Lcd_Send_Character
   586   002816                     
   587                           ;FM_Lcd_Easy.c: 95:     FM_Lcd_Send_Character(unidades + 0x30);
   588   002816  5013               	movf	FM_Lcd_Send_Uint8@unidades^(0+1280),w,c
   589   002818  0F30               	addlw	48
   590   00281A  EC3E  F015         	call	_FM_Lcd_Send_Character
   591   00281E  0012               	return		;funcret
   592   002820                     __end_of_FM_Lcd_Send_Uint8:
   593                           	callstack 0
   594                           
   595 ;; *************** function ___awmod *****************
   596 ;; Defined at:
   597 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  dividend        2    0[COMRAM] int 
   600 ;;  divisor         2    2[COMRAM] int 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  sign            1    5[COMRAM] unsigned char 
   603 ;;  counter         1    4[COMRAM] unsigned char 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  2    0[COMRAM] int 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   617 ;;Total ram usage:        6 bytes
   618 ;; Hardware stack levels used: 1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_FM_Lcd_Send_Uint8
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text3
   627   0026E2                     __ptext3:
   628                           	callstack 0
   629   0026E2                     ___awmod:
   630                           	callstack 124
   631   0026E2  0E00               	movlw	0
   632   0026E4  6E06               	movwf	___awmod@sign^(0+1280),c
   633   0026E6  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
   634   0026E8  EF7A  F013         	goto	u230
   635   0026EC  EF78  F013         	goto	u231
   636   0026F0                     u231:
   637   0026F0  EF80  F013         	goto	l1045
   638   0026F4                     u230:
   639   0026F4  6C01               	negf	___awmod@dividend^(0+1280),c
   640   0026F6  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   641   0026F8  B0D8               	btfsc	status,0,c
   642   0026FA  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   643   0026FC  0E01               	movlw	1
   644   0026FE  6E06               	movwf	___awmod@sign^(0+1280),c
   645   002700                     l1045:
   646   002700  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
   647   002702  EF87  F013         	goto	u240
   648   002706  EF85  F013         	goto	u241
   649   00270A                     u241:
   650   00270A  EF8B  F013         	goto	l1049
   651   00270E                     u240:
   652   00270E  6C03               	negf	___awmod@divisor^(0+1280),c
   653   002710  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
   654   002712  B0D8               	btfsc	status,0,c
   655   002714  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
   656   002716                     l1049:
   657   002716  5003               	movf	___awmod@divisor^(0+1280),w,c
   658   002718  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
   659   00271A  B4D8               	btfsc	status,2,c
   660   00271C  EF92  F013         	goto	u251
   661   002720  EF94  F013         	goto	u250
   662   002724                     u251:
   663   002724  EFB8  F013         	goto	l1065
   664   002728                     u250:
   665   002728  0E01               	movlw	1
   666   00272A  6E05               	movwf	___awmod@counter^(0+1280),c
   667   00272C  EF9C  F013         	goto	l1055
   668   002730                     l1053:
   669   002730  90D8               	bcf	status,0,c
   670   002732  3603               	rlcf	___awmod@divisor^(0+1280),f,c
   671   002734  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
   672   002736  2A05               	incf	___awmod@counter^(0+1280),f,c
   673   002738                     l1055:
   674   002738  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
   675   00273A  EFA1  F013         	goto	u261
   676   00273E  EFA3  F013         	goto	u260
   677   002742                     u261:
   678   002742  EF98  F013         	goto	l1053
   679   002746                     u260:
   680   002746                     l1057:
   681   002746  5003               	movf	___awmod@divisor^(0+1280),w,c
   682   002748  5C01               	subwf	___awmod@dividend^(0+1280),w,c
   683   00274A  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   684   00274C  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
   685   00274E  A0D8               	btfss	status,0,c
   686   002750  EFAC  F013         	goto	u271
   687   002754  EFAE  F013         	goto	u270
   688   002758                     u271:
   689   002758  EFB2  F013         	goto	l1061
   690   00275C                     u270:
   691   00275C  5003               	movf	___awmod@divisor^(0+1280),w,c
   692   00275E  5E01               	subwf	___awmod@dividend^(0+1280),f,c
   693   002760  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   694   002762  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
   695   002764                     l1061:
   696   002764  90D8               	bcf	status,0,c
   697   002766  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
   698   002768  3203               	rrcf	___awmod@divisor^(0+1280),f,c
   699   00276A  2E05               	decfsz	___awmod@counter^(0+1280),f,c
   700   00276C  EFA3  F013         	goto	l1057
   701   002770                     l1065:
   702   002770  5006               	movf	___awmod@sign^(0+1280),w,c
   703   002772  B4D8               	btfsc	status,2,c
   704   002774  EFBE  F013         	goto	u281
   705   002778  EFC0  F013         	goto	u280
   706   00277C                     u281:
   707   00277C  EFC4  F013         	goto	l1069
   708   002780                     u280:
   709   002780  6C01               	negf	___awmod@dividend^(0+1280),c
   710   002782  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   711   002784  B0D8               	btfsc	status,0,c
   712   002786  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   713   002788                     l1069:
   714   002788  C501  F501         	movff	___awmod@dividend,?___awmod
   715   00278C  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
   716   002790  0012               	return		;funcret
   717   002792                     __end_of___awmod:
   718                           	callstack 0
   719                           
   720 ;; *************** function ___awdiv *****************
   721 ;; Defined at:
   722 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  dividend        2    6[COMRAM] int 
   725 ;;  divisor         2    8[COMRAM] int 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  quotient        2   12[COMRAM] int 
   728 ;;  sign            1   11[COMRAM] unsigned char 
   729 ;;  counter         1   10[COMRAM] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  2    6[COMRAM] int 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   740 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   742 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   743 ;;Total ram usage:        8 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_FM_Lcd_Send_Uint8
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text4
   753   00261E                     __ptext4:
   754                           	callstack 0
   755   00261E                     ___awdiv:
   756                           	callstack 124
   757   00261E  0E00               	movlw	0
   758   002620  6E0C               	movwf	___awdiv@sign^(0+1280),c
   759   002622  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
   760   002624  EF18  F013         	goto	u170
   761   002628  EF16  F013         	goto	u171
   762   00262C                     u171:
   763   00262C  EF1E  F013         	goto	l1001
   764   002630                     u170:
   765   002630  6C09               	negf	___awdiv@divisor^(0+1280),c
   766   002632  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
   767   002634  B0D8               	btfsc	status,0,c
   768   002636  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
   769   002638  0E01               	movlw	1
   770   00263A  6E0C               	movwf	___awdiv@sign^(0+1280),c
   771   00263C                     l1001:
   772   00263C  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
   773   00263E  EF25  F013         	goto	u180
   774   002642  EF23  F013         	goto	u181
   775   002646                     u181:
   776   002646  EF2B  F013         	goto	l1007
   777   00264A                     u180:
   778   00264A  6C07               	negf	___awdiv@dividend^(0+1280),c
   779   00264C  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
   780   00264E  B0D8               	btfsc	status,0,c
   781   002650  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
   782   002652  0E01               	movlw	1
   783   002654  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
   784   002656                     l1007:
   785   002656  0E00               	movlw	0
   786   002658  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
   787   00265A  0E00               	movlw	0
   788   00265C  6E0D               	movwf	___awdiv@quotient^(0+1280),c
   789   00265E  5009               	movf	___awdiv@divisor^(0+1280),w,c
   790   002660  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
   791   002662  B4D8               	btfsc	status,2,c
   792   002664  EF36  F013         	goto	u191
   793   002668  EF38  F013         	goto	u190
   794   00266C                     u191:
   795   00266C  EF60  F013         	goto	l1029
   796   002670                     u190:
   797   002670  0E01               	movlw	1
   798   002672  6E0B               	movwf	___awdiv@counter^(0+1280),c
   799   002674  EF40  F013         	goto	l1015
   800   002678                     l1013:
   801   002678  90D8               	bcf	status,0,c
   802   00267A  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
   803   00267C  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
   804   00267E  2A0B               	incf	___awdiv@counter^(0+1280),f,c
   805   002680                     l1015:
   806   002680  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
   807   002682  EF45  F013         	goto	u201
   808   002686  EF47  F013         	goto	u200
   809   00268A                     u201:
   810   00268A  EF3C  F013         	goto	l1013
   811   00268E                     u200:
   812   00268E                     l1017:
   813   00268E  90D8               	bcf	status,0,c
   814   002690  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
   815   002692  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
   816   002694  5009               	movf	___awdiv@divisor^(0+1280),w,c
   817   002696  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
   818   002698  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
   819   00269A  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
   820   00269C  A0D8               	btfss	status,0,c
   821   00269E  EF53  F013         	goto	u211
   822   0026A2  EF55  F013         	goto	u210
   823   0026A6                     u211:
   824   0026A6  EF5A  F013         	goto	l1025
   825   0026AA                     u210:
   826   0026AA  5009               	movf	___awdiv@divisor^(0+1280),w,c
   827   0026AC  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
   828   0026AE  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
   829   0026B0  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
   830   0026B2  800D               	bsf	___awdiv@quotient^(0+1280),0,c
   831   0026B4                     l1025:
   832   0026B4  90D8               	bcf	status,0,c
   833   0026B6  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
   834   0026B8  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
   835   0026BA  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
   836   0026BC  EF47  F013         	goto	l1017
   837   0026C0                     l1029:
   838   0026C0  500C               	movf	___awdiv@sign^(0+1280),w,c
   839   0026C2  B4D8               	btfsc	status,2,c
   840   0026C4  EF66  F013         	goto	u221
   841   0026C8  EF68  F013         	goto	u220
   842   0026CC                     u221:
   843   0026CC  EF6C  F013         	goto	l1033
   844   0026D0                     u220:
   845   0026D0  6C0D               	negf	___awdiv@quotient^(0+1280),c
   846   0026D2  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
   847   0026D4  B0D8               	btfsc	status,0,c
   848   0026D6  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
   849   0026D8                     l1033:
   850   0026D8  C50D  F507         	movff	___awdiv@quotient,?___awdiv
   851   0026DC  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
   852   0026E0  0012               	return		;funcret
   853   0026E2                     __end_of___awdiv:
   854                           	callstack 0
   855                           
   856 ;; *************** function _FM_Lcd_Send_String *****************
   857 ;; Defined at:
   858 ;;		line 77 in file "FM_Lcd_Easy.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  cadena          2    5[COMRAM] PTR unsigned char 
   861 ;;		 -> STR_3(4), STR_2(6), STR_1(17), 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  index           1    9[COMRAM] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   876 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   877 ;;Total ram usage:        5 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 2
   880 ;; This function calls:
   881 ;;		_FM_Lcd_Send_Character
   882 ;; This function is called by:
   883 ;;		_main
   884 ;;		_Read_Matrix_74LS922_Push
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text5
   889   0028F4                     __ptext5:
   890                           	callstack 0
   891   0028F4                     _FM_Lcd_Send_String:
   892                           	callstack 123
   893   0028F4                     
   894                           ;FM_Lcd_Easy.c: 77: void FM_Lcd_Send_String (char *cadena);FM_Lcd_Easy.c: 78: {;FM_Lcd_E
      +                          asy.c: 79:     uint8_t index = 0;
   895   0028F4  0E00               	movlw	0
   896   0028F6  6E0A               	movwf	FM_Lcd_Send_String@index^(0+1280),c
   897                           
   898                           ;FM_Lcd_Easy.c: 80:     while(cadena[index] != '\0')
   899   0028F8  EF8D  F014         	goto	l1079
   900   0028FC                     l1075:
   901                           
   902                           ;FM_Lcd_Easy.c: 81:     {;FM_Lcd_Easy.c: 82:         FM_Lcd_Send_Character(cadena[index]
      +                          );
   903   0028FC  500A               	movf	FM_Lcd_Send_String@index^(0+1280),w,c
   904   0028FE  2406               	addwf	FM_Lcd_Send_String@cadena^(0+1280),w,c
   905   002900  6E08               	movwf	??_FM_Lcd_Send_String^(0+1280),c
   906   002902  0E00               	movlw	0
   907   002904  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^(0+1280),w,c
   908   002906  6E09               	movwf	(??_FM_Lcd_Send_String+1)^(0+1280),c
   909   002908  C508  F4F6         	movff	??_FM_Lcd_Send_String,tblptrl
   910   00290C  C509  F4F7         	movff	??_FM_Lcd_Send_String+1,tblptrh
   911   002910                     	if	0	;tblptru may be non-zero
   912   002910                     	endif
   913   002910                     	if	0	;tblptru may be non-zero
   914   002910                     	endif
   915   002910  0008               	tblrd		*
   916   002912  50F5               	movf	tablat,w,c
   917   002914  EC3E  F015         	call	_FM_Lcd_Send_Character
   918   002918                     
   919                           ;FM_Lcd_Easy.c: 83:         index++;
   920   002918  2A0A               	incf	FM_Lcd_Send_String@index^(0+1280),f,c
   921   00291A                     l1079:
   922                           
   923                           ;FM_Lcd_Easy.c: 80:     while(cadena[index] != '\0')
   924   00291A  500A               	movf	FM_Lcd_Send_String@index^(0+1280),w,c
   925   00291C  2406               	addwf	FM_Lcd_Send_String@cadena^(0+1280),w,c
   926   00291E  6E08               	movwf	??_FM_Lcd_Send_String^(0+1280),c
   927   002920  0E00               	movlw	0
   928   002922  2007               	addwfc	(FM_Lcd_Send_String@cadena+1)^(0+1280),w,c
   929   002924  6E09               	movwf	(??_FM_Lcd_Send_String+1)^(0+1280),c
   930   002926  C508  F4F6         	movff	??_FM_Lcd_Send_String,tblptrl
   931   00292A  C509  F4F7         	movff	??_FM_Lcd_Send_String+1,tblptrh
   932   00292E                     	if	0	;tblptru may be non-zero
   933   00292E                     	endif
   934   00292E                     	if	0	;tblptru may be non-zero
   935   00292E                     	endif
   936   00292E  0008               	tblrd		*
   937   002930  50F5               	movf	tablat,w,c
   938   002932  0900               	iorlw	0
   939   002934  A4D8               	btfss	status,2,c
   940   002936  EF9F  F014         	goto	u291
   941   00293A  EFA1  F014         	goto	u290
   942   00293E                     u291:
   943   00293E  EF7E  F014         	goto	l1075
   944   002942                     u290:
   945   002942  0012               	return		;funcret
   946   002944                     __end_of_FM_Lcd_Send_String:
   947                           	callstack 0
   948                           
   949 ;; *************** function _FM_Lcd_Send_Character *****************
   950 ;; Defined at:
   951 ;;		line 49 in file "FM_Lcd_Easy.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  character_to    1    wreg     unsigned char 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  character_to    1    4[COMRAM] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   969 ;;Total ram usage:        1 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 1
   972 ;; This function calls:
   973 ;;		_FM_Lcd_Send_Nibble
   974 ;; This function is called by:
   975 ;;		_Read_Matrix_74LS922_Push
   976 ;;		_FM_Lcd_Send_String
   977 ;;		_FM_Lcd_Send_Uint8
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text6
   982   002A7C                     __ptext6:
   983                           	callstack 0
   984   002A7C                     _FM_Lcd_Send_Character:
   985                           	callstack 123
   986                           
   987                           ;incstack = 0
   988                           ;FM_Lcd_Send_Character@character_to_send stored from wreg
   989   002A7C  6E05               	movwf	FM_Lcd_Send_Character@character_to_send^(0+1280),c
   990   002A7E                     
   991                           ;FM_Lcd_Easy.c: 49: void FM_Lcd_Send_Character (char character_to_send);FM_Lcd_Easy.c: 5
      +                          0: {;FM_Lcd_Easy.c: 51:     LATF |= (1 << 0);;
   992   002A7E  80C3               	bsf	195,0,c	;volatile
   993   002A80                     
   994                           ;FM_Lcd_Easy.c: 52:     FM_Lcd_Send_Nibble(character_to_send);
   995   002A80  5005               	movf	FM_Lcd_Send_Character@character_to_send^(0+1280),w,c
   996   002A82  EC10  F014         	call	_FM_Lcd_Send_Nibble
   997   002A86  0012               	return		;funcret
   998   002A88                     __end_of_FM_Lcd_Send_Character:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _Matrix_74LS922_Init *****************
  1002 ;; Defined at:
  1003 ;;		line 97 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1021 ;;Total ram usage:        0 bytes
  1022 ;; Hardware stack levels used: 1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text7
  1031   002A88                     __ptext7:
  1032                           	callstack 0
  1033   002A88                     _Matrix_74LS922_Init:
  1034                           	callstack 126
  1035   002A88                     
  1036                           ;main.c: 99:     ANSELD = 0x00;
  1037   002A88  0E00               	movlw	0
  1038   002A8A  0104               	movlb	4	; () banked
  1039   002A8C  6F18               	movwf	24,b	;volatile
  1040                           
  1041                           ;main.c: 100:     TRISD = 0x1F;
  1042   002A8E  0E1F               	movlw	31
  1043   002A90  6EC9               	movwf	201,c	;volatile
  1044   002A92                     
  1045                           ; BSR set to: 4
  1046   002A92  0012               	return		;funcret
  1047   002A94                     __end_of_Matrix_74LS922_Init:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _Internal_Oscillator_Init *****************
  1051 ;; Defined at:
  1052 ;;		line 108 in file "main.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  my_clock_par    2    3[COMRAM] struct .
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 1
  1073 ;; This function calls:
  1074 ;;		_FM_Hfintosc_Init
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text8
  1081   002A56                     __ptext8:
  1082                           	callstack 0
  1083   002A56                     _Internal_Oscillator_Init:
  1084                           	callstack 125
  1085   002A56                     
  1086                           ;main.c: 110:     _clock_hfintosc_params_t my_clock_params;;main.c: 111:     my_clock_pa
      +                          rams.divisor_clock = clock_div_1;
  1087   002A56  0E00               	movlw	0
  1088   002A58  6E04               	movwf	Internal_Oscillator_Init@my_clock_params^(0+1280),c
  1089                           
  1090                           ;main.c: 112:     my_clock_params.frecuencia_clock = freq_clk_16MHZ;
  1091   002A5A  0E05               	movlw	5
  1092   002A5C  6E05               	movwf	(Internal_Oscillator_Init@my_clock_params+1)^(0+1280),c
  1093   002A5E                     
  1094                           ;main.c: 113:     FM_Hfintosc_Init(&my_clock_params);
  1095   002A5E  0E04               	movlw	low Internal_Oscillator_Init@my_clock_params
  1096   002A60  6E01               	movwf	FM_Hfintosc_Init@clock_params^(0+1280),c
  1097   002A62  0E05               	movlw	high Internal_Oscillator_Init@my_clock_params
  1098   002A64  6E02               	movwf	(FM_Hfintosc_Init@clock_params+1)^(0+1280),c
  1099   002A66  ECC4  F014         	call	_FM_Hfintosc_Init	;wreg free
  1100   002A6A  0012               	return		;funcret
  1101   002A6C                     __end_of_Internal_Oscillator_Init:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _FM_Hfintosc_Init *****************
  1105 ;; Defined at:
  1106 ;;		line 8 in file "system_config.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  clock_params    2    0[COMRAM] PTR struct .
  1109 ;;		 -> Internal_Oscillator_Init@my_clock_params(2), 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1124 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1125 ;;Total ram usage:        3 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_Internal_Oscillator_Init
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text9
  1135   002988                     __ptext9:
  1136                           	callstack 0
  1137   002988                     _FM_Hfintosc_Init:
  1138                           	callstack 125
  1139   002988                     
  1140                           ;system_config.c: 8: void FM_Hfintosc_Init (_clock_hfintosc_params_t *clock_params);syst
      +                          em_config.c: 9: {;system_config.c: 10:     OSCCON1bits.NOSC = 0b110;
  1141   002988  0100               	movlb	0	; () banked
  1142   00298A  51AD               	movf	173,w,b	;volatile
  1143   00298C  0B8F               	andlw	-113
  1144   00298E  0960               	iorlw	96
  1145   002990  6FAD               	movwf	173,b	;volatile
  1146   002992                     
  1147                           ; BSR set to: 0
  1148                           ;system_config.c: 11:     OSCCON1bits.NDIV = clock_params->divisor_clock;
  1149   002992  C501  F4D9         	movff	FM_Hfintosc_Init@clock_params,fsr2l
  1150   002996  C502  F4DA         	movff	FM_Hfintosc_Init@clock_params+1,fsr2h
  1151   00299A  50DF               	movf	indf2,w,c
  1152   00299C  6E03               	movwf	??_FM_Hfintosc_Init^(0+1280),c
  1153   00299E  51AD               	movf	173,w,b	;volatile
  1154   0029A0  1803               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
  1155   0029A2  0BF0               	andlw	-16
  1156   0029A4  1803               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
  1157   0029A6  6FAD               	movwf	173,b	;volatile
  1158   0029A8                     
  1159                           ; BSR set to: 0
  1160                           ;system_config.c: 12:     OSCFRQbits.HFFRQ = clock_params->frecuencia_clock;
  1161   0029A8  EE20 F001          	lfsr	2,1
  1162   0029AC  5001               	movf	FM_Hfintosc_Init@clock_params^(0+1280),w,c
  1163   0029AE  26D9               	addwf	fsr2l,f,c
  1164   0029B0  5002               	movf	(FM_Hfintosc_Init@clock_params+1)^(0+1280),w,c
  1165   0029B2  22DA               	addwfc	fsr2h,f,c
  1166   0029B4  50DF               	movf	indf2,w,c
  1167   0029B6  6E03               	movwf	??_FM_Hfintosc_Init^(0+1280),c
  1168   0029B8  51B1               	movf	177,w,b	;volatile
  1169   0029BA  1803               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
  1170   0029BC  0BF0               	andlw	-16
  1171   0029BE  1803               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
  1172   0029C0  6FB1               	movwf	177,b	;volatile
  1173   0029C2                     
  1174                           ; BSR set to: 0
  1175   0029C2  0012               	return		;funcret
  1176   0029C4                     __end_of_FM_Hfintosc_Init:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _FM_Lcd_Set_Cursor *****************
  1180 ;; Defined at:
  1181 ;;		line 55 in file "FM_Lcd_Easy.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  filas           1    wreg     enum E16718
  1184 ;;  columna         1    5[COMRAM] enum E16722
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  filas           1    6[COMRAM] enum E16718
  1187 ;;  base_pos        1    7[COMRAM] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1197 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1200 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1201 ;;Total ram usage:        3 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 2
  1204 ;; This function calls:
  1205 ;;		_FM_Lcd_Send_Command
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text10
  1212   002944                     __ptext10:
  1213                           	callstack 0
  1214   002944                     _FM_Lcd_Set_Cursor:
  1215                           	callstack 124
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;incstack = 0
  1219                           ;FM_Lcd_Set_Cursor@filas stored from wreg
  1220   002944  6E07               	movwf	FM_Lcd_Set_Cursor@filas^(0+1280),c
  1221   002946                     
  1222                           ;FM_Lcd_Easy.c: 55: void FM_Lcd_Set_Cursor (_row_lcd_t filas, _column_lcd_t columna);FM_
      +                          Lcd_Easy.c: 56: {;FM_Lcd_Easy.c: 57:     char base_pos = 0x00;
  1223   002946  0E00               	movlw	0
  1224   002948  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),c
  1225   00294A                     
  1226                           ;FM_Lcd_Easy.c: 58:     if(filas == ROW_1)
  1227   00294A  5007               	movf	FM_Lcd_Set_Cursor@filas^(0+1280),w,c
  1228   00294C  A4D8               	btfss	status,2,c
  1229   00294E  EFAB  F014         	goto	u301
  1230   002952  EFAD  F014         	goto	u300
  1231   002956                     u301:
  1232   002956  EFB1  F014         	goto	l1119
  1233   00295A                     u300:
  1234   00295A                     
  1235                           ;FM_Lcd_Easy.c: 59:     {;FM_Lcd_Easy.c: 60:         base_pos = 0x80;
  1236   00295A  0E80               	movlw	128
  1237   00295C  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),c
  1238                           
  1239                           ;FM_Lcd_Easy.c: 61:     }
  1240   00295E  EFBE  F014         	goto	l1123
  1241   002962                     l1119:
  1242   002962  0407               	decf	FM_Lcd_Set_Cursor@filas^(0+1280),w,c
  1243   002964  A4D8               	btfss	status,2,c
  1244   002966  EFB7  F014         	goto	u311
  1245   00296A  EFB9  F014         	goto	u310
  1246   00296E                     u311:
  1247   00296E  EFBD  F014         	goto	l78
  1248   002972                     u310:
  1249   002972                     
  1250                           ;FM_Lcd_Easy.c: 63:     {;FM_Lcd_Easy.c: 64:         base_pos = 0xC0;
  1251   002972  0EC0               	movlw	192
  1252   002974  6E08               	movwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),c
  1253                           
  1254                           ;FM_Lcd_Easy.c: 65:     }
  1255   002976  EFBE  F014         	goto	l1123
  1256   00297A                     l78:
  1257                           
  1258                           ;FM_Lcd_Easy.c: 67:     {;FM_Lcd_Easy.c: 68:         __nop();
  1259   00297A  F000               	nop	
  1260   00297C                     l1123:
  1261                           
  1262                           ;FM_Lcd_Easy.c: 72:     base_pos += columna;
  1263   00297C  5006               	movf	FM_Lcd_Set_Cursor@columna^(0+1280),w,c
  1264   00297E  2608               	addwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),f,c
  1265   002980                     
  1266                           ;FM_Lcd_Easy.c: 73:     FM_Lcd_Send_Command(base_pos);
  1267   002980  5008               	movf	FM_Lcd_Set_Cursor@base_pos^(0+1280),w,c
  1268   002982  EC4A  F015         	call	_FM_Lcd_Send_Command
  1269   002986  0012               	return		;funcret
  1270   002988                     __end_of_FM_Lcd_Set_Cursor:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _FM_Lcd_Easy_Init *****************
  1274 ;; Defined at:
  1275 ;;		line 98 in file "FM_Lcd_Easy.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 2
  1296 ;; This function calls:
  1297 ;;		_FM_Lcd_Easy_Gpio_Init
  1298 ;;		_FM_Lcd_Send_Command
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text11
  1305   002A2C                     __ptext11:
  1306                           	callstack 0
  1307   002A2C                     _FM_Lcd_Easy_Init:
  1308                           	callstack 124
  1309   002A2C                     
  1310                           ;FM_Lcd_Easy.c: 100:     FM_Lcd_Easy_Gpio_Init();
  1311   002A2C  EC50  F015         	call	_FM_Lcd_Easy_Gpio_Init	;wreg free
  1312                           
  1313                           ;FM_Lcd_Easy.c: 102:     FM_Lcd_Send_Command(0x01);
  1314   002A30  0E01               	movlw	1
  1315   002A32  EC4A  F015         	call	_FM_Lcd_Send_Command
  1316                           
  1317                           ;FM_Lcd_Easy.c: 103:     FM_Lcd_Send_Command(0x02);
  1318   002A36  0E02               	movlw	2
  1319   002A38  EC4A  F015         	call	_FM_Lcd_Send_Command
  1320                           
  1321                           ;FM_Lcd_Easy.c: 104:     FM_Lcd_Send_Command(0x06);
  1322   002A3C  0E06               	movlw	6
  1323   002A3E  EC4A  F015         	call	_FM_Lcd_Send_Command
  1324                           
  1325                           ;FM_Lcd_Easy.c: 105:     FM_Lcd_Send_Command(0x0C);
  1326   002A42  0E0C               	movlw	12
  1327   002A44  EC4A  F015         	call	_FM_Lcd_Send_Command
  1328                           
  1329                           ;FM_Lcd_Easy.c: 106:     FM_Lcd_Send_Command(0x10);
  1330   002A48  0E10               	movlw	16
  1331   002A4A  EC4A  F015         	call	_FM_Lcd_Send_Command
  1332                           
  1333                           ;FM_Lcd_Easy.c: 107:     FM_Lcd_Send_Command(0x2C);
  1334   002A4E  0E2C               	movlw	44
  1335   002A50  EC4A  F015         	call	_FM_Lcd_Send_Command
  1336   002A54  0012               	return		;funcret
  1337   002A56                     __end_of_FM_Lcd_Easy_Init:
  1338                           	callstack 0
  1339                           
  1340 ;; *************** function _FM_Lcd_Send_Command *****************
  1341 ;; Defined at:
  1342 ;;		line 43 in file "FM_Lcd_Easy.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  command_to_s    1    wreg     unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  command_to_s    1    4[COMRAM] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1360 ;;Total ram usage:        1 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 1
  1363 ;; This function calls:
  1364 ;;		_FM_Lcd_Send_Nibble
  1365 ;; This function is called by:
  1366 ;;		_FM_Lcd_Set_Cursor
  1367 ;;		_FM_Lcd_Easy_Init
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text12
  1372   002A94                     __ptext12:
  1373                           	callstack 0
  1374   002A94                     _FM_Lcd_Send_Command:
  1375                           	callstack 124
  1376                           
  1377                           ;incstack = 0
  1378                           ;FM_Lcd_Send_Command@command_to_send stored from wreg
  1379   002A94  6E05               	movwf	FM_Lcd_Send_Command@command_to_send^(0+1280),c
  1380   002A96                     
  1381                           ;FM_Lcd_Easy.c: 43: void FM_Lcd_Send_Command (char command_to_send);FM_Lcd_Easy.c: 44: {
      +                          ;FM_Lcd_Easy.c: 45:     LATF &= ~(1 << 0);;
  1382   002A96  90C3               	bcf	195,0,c	;volatile
  1383   002A98                     
  1384                           ;FM_Lcd_Easy.c: 46:     FM_Lcd_Send_Nibble(command_to_send);
  1385   002A98  5005               	movf	FM_Lcd_Send_Command@command_to_send^(0+1280),w,c
  1386   002A9A  EC10  F014         	call	_FM_Lcd_Send_Nibble
  1387   002A9E  0012               	return		;funcret
  1388   002AA0                     __end_of_FM_Lcd_Send_Command:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _FM_Lcd_Send_Nibble *****************
  1392 ;; Defined at:
  1393 ;;		line 23 in file "FM_Lcd_Easy.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  byte_to_send    1    wreg     unsigned char 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  byte_to_send    1    1[COMRAM] unsigned char 
  1398 ;;  lower_bits      1    3[COMRAM] unsigned char 
  1399 ;;  upper_bits      1    2[COMRAM] unsigned char 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1410 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1412 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1413 ;;Total ram usage:        4 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_FM_Lcd_Send_Command
  1419 ;;		_FM_Lcd_Send_Character
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text13
  1424   002820                     __ptext13:
  1425                           	callstack 0
  1426   002820                     _FM_Lcd_Send_Nibble:
  1427                           	callstack 123
  1428                           
  1429                           ;incstack = 0
  1430                           ;FM_Lcd_Send_Nibble@byte_to_send stored from wreg
  1431   002820  6E02               	movwf	FM_Lcd_Send_Nibble@byte_to_send^(0+1280),c
  1432   002822                     
  1433                           ;FM_Lcd_Easy.c: 23: void FM_Lcd_Send_Nibble (char byte_to_send);FM_Lcd_Easy.c: 24: {;FM_
      +                          Lcd_Easy.c: 25:     uint8_t upper_bits, lower_bits;;FM_Lcd_Easy.c: 27:     upper_bits = 
      +                          (byte_to_send & 0xF0);
  1434   002822  5002               	movf	FM_Lcd_Send_Nibble@byte_to_send^(0+1280),w,c
  1435   002824  0BF0               	andlw	240
  1436   002826  6E03               	movwf	FM_Lcd_Send_Nibble@upper_bits^(0+1280),c
  1437                           
  1438                           ;FM_Lcd_Easy.c: 28:     lower_bits = (byte_to_send & 0x0F) << 4;
  1439   002828  C502  F501         	movff	FM_Lcd_Send_Nibble@byte_to_send,??_FM_Lcd_Send_Nibble
  1440   00282C  0E0F               	movlw	15
  1441   00282E  1601               	andwf	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1442   002830  3801               	swapf	??_FM_Lcd_Send_Nibble^(0+1280),w,c
  1443   002832  0BF0               	andlw	240
  1444   002834  6E04               	movwf	FM_Lcd_Send_Nibble@lower_bits^(0+1280),c
  1445                           
  1446                           ;FM_Lcd_Easy.c: 34:     LATF |= upper_bits;
  1447   002836  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^(0+1280),w,c	;volatile
  1448   002838  12C3               	iorwf	195,f,c	;volatile
  1449   00283A                     
  1450                           ;FM_Lcd_Easy.c: 35:     LATF |= (1 << 2);; _delay((unsigned long)((1)*(16000000UL/4000.0
      +                          ))); LATF &= ~(1 << 2);_delay((unsigned long)((1)*(16000000UL/4000.0)));;
  1451   00283A  84C3               	bsf	195,2,c	;volatile
  1452   00283C  0E06               	movlw	6
  1453   00283E  6E01               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1454   002840  0E30               	movlw	48
  1455   002842                     u347:
  1456   002842  2EE8               	decfsz	wreg,f,c
  1457   002844  D7FE               	bra	u347
  1458   002846  2E01               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1459   002848  D7FC               	bra	u347
  1460   00284A  D000               	nop2	
  1461   00284C  94C3               	bcf	195,2,c	;volatile
  1462   00284E  0E06               	movlw	6
  1463   002850  6E01               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1464   002852  0E30               	movlw	48
  1465   002854                     u357:
  1466   002854  2EE8               	decfsz	wreg,f,c
  1467   002856  D7FE               	bra	u357
  1468   002858  2E01               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1469   00285A  D7FC               	bra	u357
  1470   00285C  D000               	nop2	
  1471   00285E                     
  1472                           ;FM_Lcd_Easy.c: 36:     LATF &= ~upper_bits;
  1473   00285E  5003               	movf	FM_Lcd_Send_Nibble@upper_bits^(0+1280),w,c	;volatile
  1474   002860  0AFF               	xorlw	255
  1475   002862  16C3               	andwf	195,f,c	;volatile
  1476   002864                     
  1477                           ;FM_Lcd_Easy.c: 37:     LATF |= lower_bits;
  1478   002864  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^(0+1280),w,c	;volatile
  1479   002866  12C3               	iorwf	195,f,c	;volatile
  1480                           
  1481                           ;FM_Lcd_Easy.c: 38:     LATF |= (1 << 2);; _delay((unsigned long)((1)*(16000000UL/4000.0
      +                          ))); LATF &= ~(1 << 2);_delay((unsigned long)((1)*(16000000UL/4000.0)));;
  1482   002868  84C3               	bsf	195,2,c	;volatile
  1483   00286A  0E06               	movlw	6
  1484   00286C  6E01               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1485   00286E  0E30               	movlw	48
  1486   002870                     u367:
  1487   002870  2EE8               	decfsz	wreg,f,c
  1488   002872  D7FE               	bra	u367
  1489   002874  2E01               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1490   002876  D7FC               	bra	u367
  1491   002878  D000               	nop2	
  1492   00287A  94C3               	bcf	195,2,c	;volatile
  1493   00287C  0E06               	movlw	6
  1494   00287E  6E01               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1495   002880  0E30               	movlw	48
  1496   002882                     u377:
  1497   002882  2EE8               	decfsz	wreg,f,c
  1498   002884  D7FE               	bra	u377
  1499   002886  2E01               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1500   002888  D7FC               	bra	u377
  1501   00288A  D000               	nop2	
  1502   00288C                     
  1503                           ;FM_Lcd_Easy.c: 39:     LATF &= ~lower_bits;
  1504   00288C  5004               	movf	FM_Lcd_Send_Nibble@lower_bits^(0+1280),w,c	;volatile
  1505   00288E  0AFF               	xorlw	255
  1506   002890  16C3               	andwf	195,f,c	;volatile
  1507   002892  0012               	return		;funcret
  1508   002894                     __end_of_FM_Lcd_Send_Nibble:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _FM_Lcd_Easy_Gpio_Init *****************
  1512 ;; Defined at:
  1513 ;;		line 11 in file "FM_Lcd_Easy.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  bits_data       1    0        unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1531 ;;Total ram usage:        0 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_FM_Lcd_Easy_Init
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text14
  1541   002AA0                     __ptext14:
  1542                           	callstack 0
  1543   002AA0                     _FM_Lcd_Easy_Gpio_Init:
  1544                           	callstack 125
  1545   002AA0                     
  1546                           ;FM_Lcd_Easy.c: 19:     TRISF = 0x00;
  1547   002AA0  0E00               	movlw	0
  1548   002AA2  6ECB               	movwf	203,c	;volatile
  1549   002AA4                     
  1550                           ;FM_Lcd_Easy.c: 20:     LATF &= ~(1 << 1);
  1551   002AA4  92C3               	bcf	195,1,c	;volatile
  1552   002AA6  0012               	return		;funcret
  1553   002AA8                     __end_of_FM_Lcd_Easy_Gpio_Init:
  1554                           	callstack 0
  1555                           
  1556                           	psect	rparam
  1557   000000                     
  1558                           	psect	idloc
  1559                           
  1560                           ;Config register IDLOC0 @ 0x200000
  1561                           ;	unspecified, using default values
  1562   200000                     	org	2097152
  1563   200000  0FFF               	dw	4095
  1564                           
  1565                           ;Config register IDLOC1 @ 0x200002
  1566                           ;	unspecified, using default values
  1567   200002                     	org	2097154
  1568   200002  0FFF               	dw	4095
  1569                           
  1570                           ;Config register IDLOC2 @ 0x200004
  1571                           ;	unspecified, using default values
  1572   200004                     	org	2097156
  1573   200004  0FFF               	dw	4095
  1574                           
  1575                           ;Config register IDLOC3 @ 0x200006
  1576                           ;	unspecified, using default values
  1577   200006                     	org	2097158
  1578   200006  0FFF               	dw	4095
  1579                           
  1580                           ;Config register IDLOC4 @ 0x200008
  1581                           ;	unspecified, using default values
  1582   200008                     	org	2097160
  1583   200008  0FFF               	dw	4095
  1584                           
  1585                           ;Config register IDLOC5 @ 0x20000A
  1586                           ;	unspecified, using default values
  1587   20000A                     	org	2097162
  1588   20000A  0FFF               	dw	4095
  1589                           
  1590                           ;Config register IDLOC6 @ 0x20000C
  1591                           ;	unspecified, using default values
  1592   20000C                     	org	2097164
  1593   20000C  0FFF               	dw	4095
  1594                           
  1595                           ;Config register IDLOC7 @ 0x20000E
  1596                           ;	unspecified, using default values
  1597   20000E                     	org	2097166
  1598   20000E  0FFF               	dw	4095
  1599                           
  1600                           ;Config register IDLOC8 @ 0x200010
  1601                           ;	unspecified, using default values
  1602   200010                     	org	2097168
  1603   200010  0FFF               	dw	4095
  1604                           
  1605                           ;Config register IDLOC9 @ 0x200012
  1606                           ;	unspecified, using default values
  1607   200012                     	org	2097170
  1608   200012  0FFF               	dw	4095
  1609                           
  1610                           ;Config register IDLOC10 @ 0x200014
  1611                           ;	unspecified, using default values
  1612   200014                     	org	2097172
  1613   200014  0FFF               	dw	4095
  1614                           
  1615                           ;Config register IDLOC11 @ 0x200016
  1616                           ;	unspecified, using default values
  1617   200016                     	org	2097174
  1618   200016  0FFF               	dw	4095
  1619                           
  1620                           ;Config register IDLOC12 @ 0x200018
  1621                           ;	unspecified, using default values
  1622   200018                     	org	2097176
  1623   200018  0FFF               	dw	4095
  1624                           
  1625                           ;Config register IDLOC13 @ 0x20001A
  1626                           ;	unspecified, using default values
  1627   20001A                     	org	2097178
  1628   20001A  0FFF               	dw	4095
  1629                           
  1630                           ;Config register IDLOC14 @ 0x20001C
  1631                           ;	unspecified, using default values
  1632   20001C                     	org	2097180
  1633   20001C  0FFF               	dw	4095
  1634                           
  1635                           ;Config register IDLOC15 @ 0x20001E
  1636                           ;	unspecified, using default values
  1637   20001E                     	org	2097182
  1638   20001E  0FFF               	dw	4095
  1639                           
  1640                           ;Config register IDLOC16 @ 0x200020
  1641                           ;	unspecified, using default values
  1642   200020                     	org	2097184
  1643   200020  0FFF               	dw	4095
  1644                           
  1645                           ;Config register IDLOC17 @ 0x200022
  1646                           ;	unspecified, using default values
  1647   200022                     	org	2097186
  1648   200022  0FFF               	dw	4095
  1649                           
  1650                           ;Config register IDLOC18 @ 0x200024
  1651                           ;	unspecified, using default values
  1652   200024                     	org	2097188
  1653   200024  0FFF               	dw	4095
  1654                           
  1655                           ;Config register IDLOC19 @ 0x200026
  1656                           ;	unspecified, using default values
  1657   200026                     	org	2097190
  1658   200026  0FFF               	dw	4095
  1659                           
  1660                           ;Config register IDLOC20 @ 0x200028
  1661                           ;	unspecified, using default values
  1662   200028                     	org	2097192
  1663   200028  0FFF               	dw	4095
  1664                           
  1665                           ;Config register IDLOC21 @ 0x20002A
  1666                           ;	unspecified, using default values
  1667   20002A                     	org	2097194
  1668   20002A  0FFF               	dw	4095
  1669                           
  1670                           ;Config register IDLOC22 @ 0x20002C
  1671                           ;	unspecified, using default values
  1672   20002C                     	org	2097196
  1673   20002C  0FFF               	dw	4095
  1674                           
  1675                           ;Config register IDLOC23 @ 0x20002E
  1676                           ;	unspecified, using default values
  1677   20002E                     	org	2097198
  1678   20002E  0FFF               	dw	4095
  1679                           
  1680                           ;Config register IDLOC24 @ 0x200030
  1681                           ;	unspecified, using default values
  1682   200030                     	org	2097200
  1683   200030  0FFF               	dw	4095
  1684                           
  1685                           ;Config register IDLOC25 @ 0x200032
  1686                           ;	unspecified, using default values
  1687   200032                     	org	2097202
  1688   200032  0FFF               	dw	4095
  1689                           
  1690                           ;Config register IDLOC26 @ 0x200034
  1691                           ;	unspecified, using default values
  1692   200034                     	org	2097204
  1693   200034  0FFF               	dw	4095
  1694                           
  1695                           ;Config register IDLOC27 @ 0x200036
  1696                           ;	unspecified, using default values
  1697   200036                     	org	2097206
  1698   200036  0FFF               	dw	4095
  1699                           
  1700                           ;Config register IDLOC28 @ 0x200038
  1701                           ;	unspecified, using default values
  1702   200038                     	org	2097208
  1703   200038  0FFF               	dw	4095
  1704                           
  1705                           ;Config register IDLOC29 @ 0x20003A
  1706                           ;	unspecified, using default values
  1707   20003A                     	org	2097210
  1708   20003A  0FFF               	dw	4095
  1709                           
  1710                           ;Config register IDLOC30 @ 0x20003C
  1711                           ;	unspecified, using default values
  1712   20003C                     	org	2097212
  1713   20003C  0FFF               	dw	4095
  1714                           
  1715                           ;Config register IDLOC31 @ 0x20003E
  1716                           ;	unspecified, using default values
  1717   20003E                     	org	2097214
  1718   20003E  0FFF               	dw	4095
  1719                           
  1720                           	psect	config
  1721                           
  1722                           ;Config register CONFIG1 @ 0x300000
  1723                           ;	External Oscillator Selection
  1724                           ;	FEXTOSC = OFF, Oscillator not enabled
  1725                           ;	Reset Oscillator Selection
  1726                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  1727   300000                     	org	3145728
  1728   300000  8C                 	db	140
  1729                           
  1730                           ;Config register CONFIG2 @ 0x300001
  1731                           ;	Clock out Enable bit
  1732                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1733                           ;	PRLOCKED One-Way Set Enable bit
  1734                           ;	PR1WAY = OFF, PRLOCKED bit can be set and cleared repeatedly
  1735                           ;	Clock Switch Enable bit
  1736                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  1737                           ;	Fail-Safe Clock Monitor Enable bit
  1738                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1739   300001                     	org	3145729
  1740   300001  D5                 	db	213
  1741                           
  1742                           ;Config register CONFIG3 @ 0x300002
  1743                           ;	MCLR Enable bit
  1744                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1745                           ;	Power-up timer selection bits
  1746                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1747                           ;	Multi-vector enable bit
  1748                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  1749                           ;	IVTLOCK bit One-way set enable bit
  1750                           ;	IVT1WAY = OFF, IVTLOCKED bit can be cleared and set repeatedly
  1751                           ;	Low Power BOR Enable bit
  1752                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1753                           ;	Brown-out Reset Enable bits
  1754                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1755   300002                     	org	3145730
  1756   300002  E7                 	db	231
  1757                           
  1758                           ;Config register CONFIG4 @ 0x300003
  1759                           ;	Brown-out Reset Voltage Selection bits
  1760                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1761                           ;	ZCD Disable bit
  1762                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1763                           ;	PPSLOCK bit One-Way Set Enable bit
  1764                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
  1765                           ;	Stack Full/Underflow Reset Enable bit
  1766                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1767                           ;	Low Voltage Programming Enable bit
  1768                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1769                           ;	Extended Instruction Set Enable bit
  1770                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1771   300003                     	org	3145731
  1772   300003  C7                 	db	199
  1773                           
  1774                           ;Config register CONFIG5 @ 0x300004
  1775                           ;	WDT Period selection bits
  1776                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1777                           ;	WDT operating mode
  1778                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1779   300004                     	org	3145732
  1780   300004  9F                 	db	159
  1781                           
  1782                           ;Config register CONFIG6 @ 0x300005
  1783                           ;	WDT Window Select bits
  1784                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1785                           ;	WDT input clock selector
  1786                           ;	WDTCCS = SC, Software Control
  1787   300005                     	org	3145733
  1788   300005  FF                 	db	255
  1789                           
  1790                           ;Config register CONFIG7 @ 0x300006
  1791                           ;	Boot Block Size selection bits
  1792                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1793                           ;	Boot Block enable bit
  1794                           ;	BBEN = OFF, Boot block disabled
  1795                           ;	Storage Area Flash enable bit
  1796                           ;	SAFEN = OFF, SAF disabled
  1797                           ;	Background Debugger
  1798                           ;	DEBUG = OFF, Background Debugger disabled
  1799   300006                     	org	3145734
  1800   300006  FF                 	db	255
  1801                           
  1802                           ;Config register CONFIG8 @ 0x300007
  1803                           ;	Boot Block Write Protection bit
  1804                           ;	WRTB = OFF, Boot Block not Write protected
  1805                           ;	Configuration Register Write Protection bit
  1806                           ;	WRTC = OFF, Configuration registers not Write protected
  1807                           ;	Data EEPROM Write Protection bit
  1808                           ;	WRTD = OFF, Data EEPROM not Write protected
  1809                           ;	SAF Write protection bit
  1810                           ;	WRTSAF = OFF, SAF not Write Protected
  1811                           ;	Application Block write protection bit
  1812                           ;	WRTAPP = OFF, Application Block not write protected
  1813   300007                     	org	3145735
  1814   300007  FF                 	db	255
  1815                           
  1816                           ; Padding undefined space
  1817   300008                     	org	3145736
  1818   300008  FF                 	db	255
  1819                           
  1820                           ;Config register CONFIG10 @ 0x300009
  1821                           ;	PFM and Data EEPROM Code Protection bit
  1822                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1823   300009                     	org	3145737
  1824   300009  FF                 	db	255
  1825                           tosu	equ	0x4FF
  1826                           tosh	equ	0x4FE
  1827                           tosl	equ	0x4FD
  1828                           stkptr	equ	0x4FC
  1829                           pclatu	equ	0x4FB
  1830                           pclath	equ	0x4FA
  1831                           pcl	equ	0x4F9
  1832                           tblptru	equ	0x4F8
  1833                           tblptrh	equ	0x4F7
  1834                           tblptrl	equ	0x4F6
  1835                           tablat	equ	0x4F5
  1836                           prodh	equ	0x4F4
  1837                           prodl	equ	0x4F3
  1838                           indf0	equ	0x4EF
  1839                           postinc0	equ	0x4EE
  1840                           postdec0	equ	0x4ED
  1841                           preinc0	equ	0x4EC
  1842                           plusw0	equ	0x4EB
  1843                           fsr0h	equ	0x4EA
  1844                           fsr0l	equ	0x4E9
  1845                           wreg	equ	0x4E8
  1846                           indf1	equ	0x4E7
  1847                           postinc1	equ	0x4E6
  1848                           postdec1	equ	0x4E5
  1849                           preinc1	equ	0x4E4
  1850                           plusw1	equ	0x4E3
  1851                           fsr1h	equ	0x4E2
  1852                           fsr1l	equ	0x4E1
  1853                           bsr	equ	0x4E0
  1854                           indf2	equ	0x4DF
  1855                           postinc2	equ	0x4DE
  1856                           postdec2	equ	0x4DD
  1857                           preinc2	equ	0x4DC
  1858                           plusw2	equ	0x4DB
  1859                           fsr2h	equ	0x4DA
  1860                           fsr2l	equ	0x4D9
  1861                           status	equ	0x4D8

Data Sizes:
    Strings     27
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      39
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    FM_Hfintosc_Init@clock_params	PTR struct . size(2) Largest target is 2
		 -> Internal_Oscillator_Init@my_clock_params(COMRAM[2]), 

    FM_Lcd_Send_String@cadena	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[4]), STR_2(CODE[6]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Read_Matrix_74LS922_Push
    _Read_Matrix_74LS922_Push->_FM_Lcd_Send_Uint8
    _FM_Lcd_Send_Uint8->___awdiv
    ___awdiv->___awmod
    _FM_Lcd_Send_String->_FM_Lcd_Send_Character
    _FM_Lcd_Send_Character->_FM_Lcd_Send_Nibble
    _Internal_Oscillator_Init->_FM_Hfintosc_Init
    _FM_Lcd_Set_Cursor->_FM_Lcd_Send_Command
    _FM_Lcd_Easy_Init->_FM_Lcd_Send_Command
    _FM_Lcd_Send_Command->_FM_Lcd_Send_Nibble

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3546
                                             21 COMRAM     2     2      0
                   _FM_Lcd_Easy_Init
                 _FM_Lcd_Send_String
                  _FM_Lcd_Set_Cursor
           _Internal_Oscillator_Init
                _Matrix_74LS922_Init
           _Read_Matrix_74LS922_Push
 ---------------------------------------------------------------------------------
 (1) _Read_Matrix_74LS922_Push                             1     1      0    2346
                                             20 COMRAM     1     1      0
              _FM_Lcd_Send_Character
                 _FM_Lcd_Send_String
                  _FM_Lcd_Send_Uint8
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Uint8                                    6     6      0    1671
                                             14 COMRAM     6     6      0
              _FM_Lcd_Send_Character
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_String                                   5     3      2     474
                                              5 COMRAM     5     3      2
              _FM_Lcd_Send_Character
 ---------------------------------------------------------------------------------
 (3) _FM_Lcd_Send_Character                                1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (1) _Matrix_74LS922_Init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Internal_Oscillator_Init                             2     2      0     169
                                              3 COMRAM     2     2      0
                   _FM_Hfintosc_Init
 ---------------------------------------------------------------------------------
 (2) _FM_Hfintosc_Init                                     3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Set_Cursor                                    3     2      1     401
                                              5 COMRAM     3     2      1
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Easy_Init                                     0     0      0     156
              _FM_Lcd_Easy_Gpio_Init
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Command                                  1     1      0     156
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (4) _FM_Lcd_Send_Nibble                                   4     4      0     134
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Easy_Gpio_Init                                1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FM_Lcd_Easy_Init
     _FM_Lcd_Easy_Gpio_Init
     _FM_Lcd_Send_Command
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Send_String
     _FM_Lcd_Send_Character
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Set_Cursor
     _FM_Lcd_Send_Command
   _Internal_Oscillator_Init
     _FM_Hfintosc_Init
   _Matrix_74LS922_Init
   _Read_Matrix_74LS922_Push
     _FM_Lcd_Send_Character
     _FM_Lcd_Send_String
     _FM_Lcd_Send_Uint8
       _FM_Lcd_Send_Character
       ___awdiv
         ___awmod (ARG)
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhh      366      0       0      75        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlll        AD      0       0      77        0.0%
BITBIGSFRlh         AA      0       0      74        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      27       1       41.1%
BITBIGSFRhh         2E      0       0      70        0.0%
BITBIGSFRhlhh        5      0       0      71        0.0%
BITBIGSFRhll         5      0       0      73        0.0%
BITBIGSFRllhl        3      0       0      76        0.0%
BITBIGSFRhlhl        1      0       0      72        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      78        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Apr 25 20:44:32 2023

                                     l44 29FC                                       l53 2A6A  
                                     l70 2A9E                                       l47 2A92  
                                     l64 2AA6                                       l80 2986  
                                     l73 2A86                                       l67 2892  
                                     l92 2A54                                       l78 297A  
                                     l86 2942                                       l89 281E  
                                     l99 29C2                             ___awdiv@sign 050C  
                                    l333 26E0                                      l346 2790  
                                    l921 2A88                                      l907 2AA0  
                                    l909 2AA4                                      l971 2822  
                                    l981 2864                                      l973 283A  
                                    l983 286A                                      l975 284C  
                                    l991 2A80                                      l985 287A  
                                    l977 284E                                      l993 261E  
                                    l987 288C                                      l979 285E  
                                    l995 2622                                      l989 2A7E  
                                    l997 2630                                      l999 2638  
                                    u200 268E                                      u201 268A  
                                    u210 26AA                                      u211 26A6  
                                    u300 295A                                      u220 26D0  
                                    u301 2956                                      u221 26CC  
                                    u310 2972                                      u230 26F4  
                                    u311 296E                                      u231 26F0  
                                    u240 270E                                      u320 29D2  
                                    u241 270A                                      u321 29CE  
                                    u170 2630                                      u250 2728  
                                    u171 262C                                      u251 2724  
                                    u180 264A                                      u260 2746  
                                    u181 2646                                      u261 2742  
                                    u190 2670                                      u270 275C  
                                    u191 266C                                      u271 2758  
                                    u280 2780                                      u281 277C  
                                    u337 28DE                                      u290 2942  
                                    u347 2842                                      u291 293E  
                                    u357 2854                                      u367 2870  
                                    u377 2882                             ___awmod@sign 0506  
                                    wreg 04E8                                     l1001 263C  
                                   l1011 2670                                     l1003 264A  
                                   l1101 29A8                                     l1021 26AA  
                                   l1013 2678                                     l1005 2652  
                                   l1103 2A96                                     l1111 2A2C  
                                   l1031 26D0                                     l1023 26B2  
                                   l1015 2680                                     l1007 2656  
                                   l1105 2A98                                     l1121 2972  
                                   l1113 2946                                     l1033 26D8  
                                   l1025 26B4                                     l1017 268E  
                                   l1009 265E                                     l1041 26F4  
                                   l1123 297C                                     l1115 294A  
                                   l1107 2A56                                     l1027 26BA  
                                   l1019 2694                                     l1051 2728  
                                   l1043 26FC                                     l1131 29D2  
                                   l1125 2980                                     l1117 295A  
                                   l1109 2A5E                                     l1029 26C0  
                                   l1061 2764                                     l1053 2730  
                                   l1045 2700                                     l1037 26E2  
                                   l1133 29D8                                     l1141 2898  
                                   l1127 2986                                     l1119 2962  
                                   l1063 276A                                     l1055 2738  
                                   l1047 270E                                     l1039 26E6  
                                   l1135 29DE                                     l1151 28C0  
                                   l1143 289C                                     l1073 28F4  
                                   l1057 2746                                     l1065 2770  
                                   l1049 2716                                     l1081 2794  
                                   l1137 29EA                                     l1129 29C4  
                                   l1153 28CC                                     l1145 28A0  
                                   l1075 28FC                                     l1067 2780  
                                   l1059 275C                                     l1091 2806  
                                   l1083 2794                                     l1155 28D0  
                                   l1147 28AA                                     l1139 2894  
                                   l1077 2918                                     l1069 2788  
                                   l1093 280E                                     l1085 27AA  
                                   l1157 28D4                                     l1149 28B6  
                                   l1079 291A                                     l1095 2816  
                                   l1087 27D4                                     l1097 2988  
                                   l1089 27EE                                     l1099 2992  
                                   STR_1 2601                                     STR_2 2612  
                                   STR_3 2618                                     _LATF 04C3  
             __end_of_FM_Lcd_Send_Nibble 2894         __end_of_Read_Matrix_74LS922_Push 29FE  
                      ?_FM_Hfintosc_Init 0501                                     _main 2894  
           FM_Lcd_Send_Nibble@upper_bits 0503                                     fsr2h 04DA  
                                   indf2 04DF                                     fsr1l 04E1  
                                   fsr2l 04D9                       ??_FM_Hfintosc_Init 0503  
             __end_of_FM_Lcd_Send_String 2944                  ??_FM_Lcd_Send_Character 0505  
                                   start FFFC   FM_Lcd_Send_Character@character_to_send 0505  
                  _FM_Lcd_Easy_Gpio_Init 2AA0                             ___param_bank 0000  
                                  ?_main 0501                          __end_of___awdiv 26E2  
                        __end_of___awmod 2792              __end_of_FM_Lcd_Send_Command 2AA0  
                        ___awdiv@divisor 0509                          ___awdiv@counter 050B  
                                  _PORTD 04D1                                    _TRISD 04C9  
                                  _TRISF 04CB                 FM_Lcd_Send_Uint8@decenas 0512  
                                  tablat 04F5                                    status 04D8  
                        __initialization 29FE                             __end_of_main 28F4  
            __end_of_Matrix_74LS922_Init 2A94                                   ??_main 0516  
                          __activetblptr 0001                         ___awdiv@dividend 0507  
                                 _ANSELD 0418                 _Read_Matrix_74LS922_Push 29C4  
                 ?_FM_Lcd_Easy_Gpio_Init 0501                                ??___awdiv 050B  
                              ??___awmod 0505                         ___awdiv@quotient 050D  
                        ___awmod@divisor 0503                                   isa$std 0001  
                        ___awmod@counter 0505                             __pdataCOMRAM 0518  
                           __mediumconst 0000                                   tblptrh 04F7  
                                 tblptrl 04F6                                   tblptru 04F8  
                             __accesstop 0560                  __end_of__initialization 2A1E  
                          ___rparam_used 0001                           __pcstackCOMRAM 0501  
              ?_Internal_Oscillator_Init 0501                         _FM_Lcd_Easy_Init 2A2C  
           FM_Hfintosc_Init@clock_params 0501            __end_of_FM_Lcd_Send_Character 2A88  
                     _FM_Lcd_Send_Nibble 2820                       _FM_Lcd_Send_String 28F4  
                    ?_FM_Lcd_Send_Nibble 0501                      ?_FM_Lcd_Send_String 0506  
                   ??_FM_Lcd_Send_Nibble 0501                     ??_FM_Lcd_Send_String 0508  
                                __Hparam 0000                                  __Lparam 0000  
                                ___awdiv 261E                                  ___awmod 26E2  
                           __psmallconst 2600                                  __pcinit 29FE  
                                __ramtop 2600                                  __ptext0 2894  
                                __ptext1 29C4                                  __ptext2 2792  
                                __ptext3 26E2                                  __ptext4 261E  
                                __ptext5 28F4                                  __ptext6 2A7C  
                                __ptext7 2A88                                  __ptext8 2A56  
                                __ptext9 2988                         ___awmod@dividend 0501  
             ??_Read_Matrix_74LS922_Push 0515                     end_of_initialization 2A1E  
                ??_FM_Lcd_Easy_Gpio_Init 0501                                  postdec1 04E5  
                                postinc0 04EE                   FM_Lcd_Set_Cursor@filas 0507  
               _character_matrix_buttons 0518         __end_of_Internal_Oscillator_Init 2A6C  
               __end_of_FM_Lcd_Easy_Init 2A56                FM_Lcd_Set_Cursor@base_pos 0508  
                       _FM_Hfintosc_Init 2988                            __pidataCOMRAM 2A6C  
                FM_Lcd_Send_Uint8@numero 0514                      start_initialization 29FE  
               FM_Lcd_Send_String@cadena 0506      Read_Matrix_74LS922_Push@data_readed 0515  
               _Internal_Oscillator_Init 2A56                        _FM_Lcd_Send_Uint8 2792  
                  _FM_Lcd_Send_Character 2A7C                                 ?___awdiv 0507  
                               ?___awmod 0501                      _FM_Lcd_Send_Command 2A94  
                      _FM_Lcd_Set_Cursor 2944                       ?_FM_Lcd_Send_Uint8 0501  
                     ?_FM_Lcd_Set_Cursor 0506       FM_Lcd_Send_Command@command_to_send 0505  
                            __smallconst 2600                      ??_FM_Lcd_Send_Uint8 050F  
                    ??_FM_Lcd_Set_Cursor 0507                     ?_FM_Lcd_Send_Command 0501  
          __end_of_FM_Lcd_Easy_Gpio_Init 2AA8  Internal_Oscillator_Init@my_clock_params 0504  
              __end_of_FM_Lcd_Send_Uint8 2820                __end_of_FM_Lcd_Set_Cursor 2988  
                    _Matrix_74LS922_Init 2A88                    _FM_Lcd_Send_Uint8$880 050F  
                   ?_Matrix_74LS922_Init 0501                    ??_FM_Lcd_Send_Command 0505  
                              copy_data0 2A12                 __end_of_FM_Hfintosc_Init 29C4  
                      ?_FM_Lcd_Easy_Init 0501                       ??_FM_Lcd_Easy_Init 0506  
                FM_Lcd_Send_String@index 050A                                 __Hrparam 0000  
                 ?_FM_Lcd_Send_Character 0501                                 __Lrparam 0000  
                           __Lsmallconst 2600                FM_Lcd_Send_Uint8@centenas 0511  
              ?_Read_Matrix_74LS922_Push 0501                    ??_Matrix_74LS922_Init 0501  
                               __ptext10 2944                                 __ptext11 2A2C  
                               __ptext12 2A94                                 __ptext13 2820  
                               __ptext14 2AA0                FM_Lcd_Send_Uint8@unidades 0513  
                            _OSCCON1bits 00AD                                 isa$xinst 0000  
             ??_Internal_Oscillator_Init 0504           FM_Lcd_Send_Nibble@byte_to_send 0502  
                             _OSCFRQbits 00B1                 FM_Lcd_Set_Cursor@columna 0506  
           FM_Lcd_Send_Nibble@lower_bits 0504  
