

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 26 12:06:05 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Generated 17/06/2022 GMT
    28                           ; 
    29                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F57Q43 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  002894                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _character_matrix_buttons
    67  002894  31                 	db	49
    68  002895  37                 	db	55
    69  002896  34                 	db	52
    70  002897  2A                 	db	42
    71  002898  33                 	db	51
    72  002899  39                 	db	57
    73  00289A  36                 	db	54
    74  00289B  23                 	db	35
    75  00289C  41                 	db	65
    76  00289D  43                 	db	67
    77  00289E  42                 	db	66
    78  00289F  44                 	db	68
    79  0028A0  32                 	db	50
    80  0028A1  38                 	db	56
    81  0028A2  35                 	db	53
    82  0028A3  30                 	db	48
    83                           
    84                           ;initializer for _clave_guardada
    85  0028A4  31                 	db	49
    86  0028A5  32                 	db	50
    87  0028A6  33                 	db	51
    88  0028A7  34                 	db	52
    89  0028A8  35                 	db	53
    90  0028A9  36                 	db	54
    91                           
    92                           ;initializer for _clave_ingresada
    93  0028AA  2A                 	db	42
    94  0028AB  2A                 	db	42
    95  0028AC  2A                 	db	42
    96  0028AD  2A                 	db	42
    97  0028AE  2A                 	db	42
    98  0028AF  2A                 	db	42
    99  0000                     _OSCFRQbits	set	177
   100  0000                     _OSCCON1bits	set	173
   101  0000                     _ANSELD	set	1048
   102  0000                     _TRISF	set	1227
   103  0000                     _TRISD	set	1225
   104  0000                     _LATF	set	1219
   105  0000                     _PORTD	set	1233
   106                           
   107                           	psect	smallconst
   108  002500                     __psmallconst:
   109                           	callstack 0
   110  002500  00                 	db	0
   111  002501                     STR_1:
   112  002501  4C                 	db	76	;'L'
   113  002502  6F                 	db	111	;'o'
   114  002503  63                 	db	99	;'c'
   115  002504  6B                 	db	107	;'k'
   116  002505  65                 	db	101	;'e'
   117  002506  72                 	db	114	;'r'
   118  002507  20                 	db	32
   119  002508  50                 	db	80	;'P'
   120  002509  69                 	db	105	;'i'
   121  00250A  63                 	db	99	;'c'
   122  00250B  3A                 	db	58	;':'
   123  00250C  20                 	db	32
   124  00250D  00                 	db	0
   125  00250E                     STR_4:
   126  00250E  43                 	db	67	;'C'
   127  00250F  4C                 	db	76	;'L'
   128  002510  41                 	db	65	;'A'
   129  002511  56                 	db	86	;'V'
   130  002512  45                 	db	69	;'E'
   131  002513  20                 	db	32
   132  002514  45                 	db	69	;'E'
   133  002515  52                 	db	82	;'R'
   134  002516  52                 	db	82	;'R'
   135  002517  4F                 	db	79	;'O'
   136  002518  52                 	db	82	;'R'
   137  002519  00                 	db	0
   138  00251A                     STR_5:
   139  00251A  43                 	db	67	;'C'
   140  00251B  4C                 	db	76	;'L'
   141  00251C  41                 	db	65	;'A'
   142  00251D  56                 	db	86	;'V'
   143  00251E  45                 	db	69	;'E'
   144  00251F  20                 	db	32
   145  002520  42                 	db	66	;'B'
   146  002521  49                 	db	73	;'I'
   147  002522  45                 	db	69	;'E'
   148  002523  4E                 	db	78	;'N'
   149  002524  00                 	db	0
   150  002525                     STR_2:
   151  002525  70                 	db	112	;'p'
   152  002526  61                 	db	97	;'a'
   153  002527  73                 	db	115	;'s'
   154  002528  73                 	db	115	;'s'
   155  002529  3A                 	db	58	;':'
   156  00252A  20                 	db	32
   157  00252B  20                 	db	32
   158  00252C  00                 	db	0
   159  00252D  00                 	db	0	; dummy byte at the end
   160  0000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164  00283C                     __pcinit:
   165                           	callstack 0
   166  00283C                     start_initialization:
   167                           	callstack 0
   168  00283C                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Initialize objects allocated to COMRAM (28 bytes)
   172                           ; load TBLPTR registers with __pidataCOMRAM
   173  00283C  0E94               	movlw	low __pidataCOMRAM
   174  00283E  6EF6               	movwf	tblptrl,c
   175  002840  0E28               	movlw	high __pidataCOMRAM
   176  002842  6EF7               	movwf	tblptrh,c
   177  002844  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   178  002846  6EF8               	movwf	tblptru,c
   179  002848  EE01  F101         	lfsr	0,__pdataCOMRAM
   180  00284C  EE10 F01C          	lfsr	1,28
   181  002850                     copy_data0:
   182  002850  0009               	tblrd		*+
   183  002852  C4F5 F4EE          	movff	tablat,postinc0
   184  002856  50E5               	movf	postdec1,w,c
   185  002858  50E1               	movf	fsr1l,w,c
   186  00285A  E1FA               	bnz	copy_data0
   187                           
   188                           ; Clear objects allocated to COMRAM (2 bytes)
   189  00285C  6A2D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   190  00285E  6A2C               	clrf	__pbssCOMRAM& (0+255),c
   191  002860                     end_of_initialization:
   192                           	callstack 0
   193  002860                     __end_of__initialization:
   194                           	callstack 0
   195  002860  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196  002862  6EF8               	movwf	tblptru,c
   197  002864  0100               	movlb	0
   198  002866  EF97  F012         	goto	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMRAM
   201  00052C                     __pbssCOMRAM:
   202                           	callstack 0
   203  00052C                     _safe_lock:
   204                           	callstack 0
   205  00052C                     	ds	1
   206  00052D                     _claves_index:
   207                           	callstack 0
   208  00052D                     	ds	1
   209                           
   210                           	psect	dataCOMRAM
   211  000501                     __pdataCOMRAM:
   212                           	callstack 0
   213  000501                     _character_matrix_buttons:
   214                           	callstack 0
   215  000501                     	ds	16
   216  000511                     _clave_guardada:
   217                           	callstack 0
   218  000511                     	ds	6
   219  000517                     _clave_ingresada:
   220                           	callstack 0
   221  000517                     	ds	6
   222                           
   223                           	psect	cstackCOMRAM
   224  00051D                     __pcstackCOMRAM:
   225                           	callstack 0
   226  00051D                     ??_FM_Lcd_Send_Nibble:
   227  00051D                     FM_Hfintosc_Init@clock_params:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x0
   231  00051D                     	ds	1
   232  00051E                     FM_Lcd_Send_Nibble@byte_to_send:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x1
   236  00051E                     	ds	1
   237  00051F                     ??_FM_Hfintosc_Init:
   238  00051F                     FM_Lcd_Send_Nibble@upper_bits:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x2
   242  00051F                     	ds	1
   243  000520                     FM_Lcd_Send_Nibble@lower_bits:
   244                           	callstack 0
   245  000520                     Internal_Oscillator_Init@my_clock_params:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x3
   249  000520                     	ds	1
   250  000521                     FM_Lcd_Send_Command@command_to_send:
   251                           	callstack 0
   252  000521                     FM_Lcd_Send_Character@character_to_send:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x4
   256  000521                     	ds	1
   257  000522                     FM_Lcd_Set_Cursor@columna:
   258                           	callstack 0
   259  000522                     FM_Lcd_Send_String@cadena:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x5
   263  000522                     	ds	1
   264  000523                     FM_Lcd_Set_Cursor@filas:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x6
   268  000523                     	ds	1
   269  000524                     ??_FM_Lcd_Send_String:
   270  000524                     FM_Lcd_Set_Cursor@base_pos:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x7
   274  000524                     	ds	2
   275  000526                     FM_Lcd_Send_String@index:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x9
   279  000526                     	ds	1
   280  000527                     ??_main:
   281                           
   282                           ; 1 bytes @ 0xA
   283  000527                     	ds	2
   284  000529                     main@data_readed:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0xC
   288  000529                     	ds	1
   289  00052A                     main@pass_ok:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0xD
   293  00052A                     	ds	1
   294  00052B                     main@compare_index:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0xE
   298  00052B                     	ds	1
   299                           
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 81 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  data_readed     1   12[COMRAM] unsigned char 
   310 ;;  compare_inde    1   14[COMRAM] unsigned char 
   311 ;;  pass_ok         1   13[COMRAM] _Bool 
   312 ;; Return value:  Size  Location     Type
   313 ;;                  2   40[None  ] int 
   314 ;; Registers used:
   315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   322 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   324 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   325 ;;Total ram usage:        5 bytes
   326 ;; Hardware stack levels required when called: 3
   327 ;; This function calls:
   328 ;;		_FM_Lcd_Easy_Init
   329 ;;		_FM_Lcd_Send_Command
   330 ;;		_FM_Lcd_Send_String
   331 ;;		_FM_Lcd_Set_Cursor
   332 ;;		_Internal_Oscillator_Init
   333 ;;		_Matrix_74LS922_Init
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text0
   340  00252E                     __ptext0:
   341                           	callstack 0
   342  00252E                     _main:
   343                           	callstack 124
   344  00252E                     
   345                           ;main.c: 83:     Internal_Oscillator_Init();
   346  00252E  EC58  F014         	call	_Internal_Oscillator_Init	;wreg free
   347  002532                     
   348                           ;main.c: 84:     FM_Lcd_Easy_Init();
   349  002532  EC35  F014         	call	_FM_Lcd_Easy_Init	;wreg free
   350  002536                     
   351                           ;main.c: 85:     Matrix_74LS922_Init();
   352  002536  EC63  F014         	call	_Matrix_74LS922_Init	;wreg free
   353  00253A                     
   354                           ;main.c: 86:     FM_Lcd_Send_Command(0x01);
   355  00253A  0E01               	movlw	1
   356  00253C  EC6F  F014         	call	_FM_Lcd_Send_Command
   357  002540                     
   358                           ;main.c: 87:     FM_Lcd_Set_Cursor(ROW_1, COL_3);
   359  002540  0E02               	movlw	2
   360  002542  6E22               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   361  002544  0E00               	movlw	0
   362  002546  ECDC  F013         	call	_FM_Lcd_Set_Cursor
   363  00254A                     
   364                           ;main.c: 88:     FM_Lcd_Send_String("Locker Pic: ");
   365  00254A  0E01               	movlw	low STR_1
   366  00254C  6E22               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   367  00254E  0E25               	movlw	high STR_1
   368  002550  6E23               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   369  002552  EC60  F013         	call	_FM_Lcd_Send_String	;wreg free
   370  002556                     
   371                           ;main.c: 89:     FM_Lcd_Set_Cursor(ROW_2, COL_2);
   372  002556  0E01               	movlw	1
   373  002558  6E22               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   374  00255A  0E01               	movlw	1
   375  00255C  ECDC  F013         	call	_FM_Lcd_Set_Cursor
   376  002560                     
   377                           ;main.c: 90:     FM_Lcd_Send_String("pass:  ");
   378  002560  0E25               	movlw	low STR_2
   379  002562  6E22               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   380  002564  0E25               	movlw	high STR_2
   381  002566  6E23               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   382  002568  EC60  F013         	call	_FM_Lcd_Send_String	;wreg free
   383  00256C                     
   384                           ;main.c: 91:     FM_Lcd_Set_Cursor(ROW_2, COL_9);
   385  00256C  0E08               	movlw	8
   386  00256E  6E22               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   387  002570  0E01               	movlw	1
   388  002572  ECDC  F013         	call	_FM_Lcd_Set_Cursor
   389  002576                     
   390                           ;main.c: 92:     FM_Lcd_Send_String(clave_ingresada);
   391  002576  0E17               	movlw	low _clave_ingresada
   392  002578  6E22               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   393  00257A  0E05               	movlw	high _clave_ingresada
   394  00257C  6E23               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   395  00257E  EC60  F013         	call	_FM_Lcd_Send_String	;wreg free
   396  002582  EF06  F013         	goto	l1041
   397  002586                     l43:
   398                           
   399                           ;main.c: 96:         {;main.c: 97:             if(PORTD & (1 << 4))
   400  002586  A8D1               	btfss	209,4,c	;volatile
   401  002588  EFC8  F012         	goto	u211
   402  00258C  EFCA  F012         	goto	u210
   403  002590                     u211:
   404  002590  EFF8  F012         	goto	l1037
   405  002594                     u210:
   406  002594                     
   407                           ;main.c: 98:             {;main.c: 99:                 uint8_t data_readed = PORTD & 0x0
      +                          F;
   408  002594  50D1               	movf	209,w,c	;volatile
   409  002596  0B0F               	andlw	15
   410  002598  6E29               	movwf	main@data_readed^(0+1280),c
   411  00259A                     l45:
   412  00259A  B8D1               	btfsc	209,4,c	;volatile
   413  00259C  EFD2  F012         	goto	u221
   414  0025A0  EFD4  F012         	goto	u220
   415  0025A4                     u221:
   416  0025A4  EFCD  F012         	goto	l45
   417  0025A8                     u220:
   418  0025A8                     
   419                           ;main.c: 101:                 clave_ingresada[claves_index] = character_matrix_buttons[d
      +                          ata_readed];
   420  0025A8  0E01               	movlw	low _character_matrix_buttons
   421  0025AA  2429               	addwf	main@data_readed^(0+1280),w,c
   422  0025AC  6ED9               	movwf	fsr2l,c
   423  0025AE  6ADA               	clrf	fsr2h,c
   424  0025B0  0E05               	movlw	high _character_matrix_buttons
   425  0025B2  22DA               	addwfc	fsr2h,f,c
   426  0025B4  0E17               	movlw	low _clave_ingresada
   427  0025B6  242D               	addwf	_claves_index^(0+1280),w,c
   428  0025B8  6EE1               	movwf	fsr1l,c
   429  0025BA  6AE2               	clrf	fsr1h,c
   430  0025BC  0E05               	movlw	high _clave_ingresada
   431  0025BE  22E2               	addwfc	fsr1h,f,c
   432  0025C0  C4DF F4E7          	movff	indf2,indf1
   433  0025C4                     
   434                           ;main.c: 102:                 claves_index++;
   435  0025C4  2A2D               	incf	_claves_index^(0+1280),f,c
   436  0025C6                     
   437                           ;main.c: 103:                 FM_Lcd_Set_Cursor(ROW_2, COL_9);
   438  0025C6  0E08               	movlw	8
   439  0025C8  6E22               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   440  0025CA  0E01               	movlw	1
   441  0025CC  ECDC  F013         	call	_FM_Lcd_Set_Cursor
   442  0025D0                     
   443                           ;main.c: 104:                 FM_Lcd_Send_String(clave_ingresada);
   444  0025D0  0E17               	movlw	low _clave_ingresada
   445  0025D2  6E22               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   446  0025D4  0E05               	movlw	high _clave_ingresada
   447  0025D6  6E23               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   448  0025D8  EC60  F013         	call	_FM_Lcd_Send_String	;wreg free
   449  0025DC                     
   450                           ;main.c: 105:                 if (claves_index > 5) safe_lock = 1;
   451  0025DC  0E05               	movlw	5
   452  0025DE  642D               	cpfsgt	_claves_index^(0+1280),c
   453  0025E0  EFF4  F012         	goto	u231
   454  0025E4  EFF6  F012         	goto	u230
   455  0025E8                     u231:
   456  0025E8  EFF8  F012         	goto	l1037
   457  0025EC                     u230:
   458  0025EC  0E01               	movlw	1
   459  0025EE  6E2C               	movwf	_safe_lock^(0+1280),c
   460  0025F0                     l1037:
   461                           
   462                           ;main.c: 107:             LATF ^= (1 << 3);;
   463  0025F0  0E08               	movlw	8
   464  0025F2  1AC3               	xorwf	195,f,c	;volatile
   465  0025F4                     
   466                           ;main.c: 108:             _delay((unsigned long)((100)*(16000000UL/4000.0)));
   467  0025F4  0E03               	movlw	3
   468  0025F6  6E28               	movwf	(??_main+1)^(0+1280),c
   469  0025F8  0E08               	movlw	8
   470  0025FA  6E27               	movwf	??_main^(0+1280),c
   471  0025FC  0E77               	movlw	119
   472  0025FE                     u287:
   473  0025FE  2EE8               	decfsz	wreg,f,c
   474  002600  D7FE               	bra	u287
   475  002602  2E27               	decfsz	??_main^(0+1280),f,c
   476  002604  D7FC               	bra	u287
   477  002606  2E28               	decfsz	(??_main+1)^(0+1280),f,c
   478  002608  D7FA               	bra	u287
   479  00260A  F000               	nop	
   480  00260C                     l1041:
   481                           
   482                           ;main.c: 95:         while(!safe_lock)
   483  00260C  502C               	movf	_safe_lock^(0+1280),w,c
   484  00260E  B4D8               	btfsc	status,2,c
   485  002610  EF0C  F013         	goto	u241
   486  002614  EF0E  F013         	goto	u240
   487  002618                     u241:
   488  002618  EFC3  F012         	goto	l43
   489  00261C                     u240:
   490  00261C                     
   491                           ;main.c: 110:         LATF |= (1 << 3);;
   492  00261C  86C3               	bsf	195,3,c	;volatile
   493  00261E                     
   494                           ;main.c: 111:         _Bool pass_ok = 0;
   495  00261E  0E00               	movlw	0
   496  002620  6E2A               	movwf	main@pass_ok^(0+1280),c
   497  002622                     
   498                           ;main.c: 112:         for(uint8_t compare_index = 0 ; compare_index < 6 ; compare_index+
      +                          +)
   499  002622  0E00               	movlw	0
   500  002624  6E2B               	movwf	main@compare_index^(0+1280),c
   501  002626                     l1053:
   502                           
   503                           ;main.c: 113:         {;main.c: 114:             if(clave_guardada[compare_index] != cla
      +                          ve_ingresada[compare_index])
   504  002626  0E17               	movlw	low _clave_ingresada
   505  002628  242B               	addwf	main@compare_index^(0+1280),w,c
   506  00262A  6ED9               	movwf	fsr2l,c
   507  00262C  6ADA               	clrf	fsr2h,c
   508  00262E  0E05               	movlw	high _clave_ingresada
   509  002630  22DA               	addwfc	fsr2h,f,c
   510  002632  0E11               	movlw	low _clave_guardada
   511  002634  242B               	addwf	main@compare_index^(0+1280),w,c
   512  002636  6EE1               	movwf	fsr1l,c
   513  002638  6AE2               	clrf	fsr1h,c
   514  00263A  0E05               	movlw	high _clave_guardada
   515  00263C  22E2               	addwfc	fsr1h,f,c
   516  00263E  50DE               	movf	postinc2,w,c
   517  002640  18E6               	xorwf	postinc1,w,c
   518  002642  B4D8               	btfsc	status,2,c
   519  002644  EF26  F013         	goto	u251
   520  002648  EF28  F013         	goto	u250
   521  00264C                     u251:
   522  00264C  EF2A  F013         	goto	l1057
   523  002650                     u250:
   524  002650                     
   525                           ;main.c: 115:             {;main.c: 116:                 pass_ok = 1;
   526  002650  0E01               	movlw	1
   527  002652  6E2A               	movwf	main@pass_ok^(0+1280),c
   528  002654                     l1057:
   529                           
   530                           ;main.c: 118:         }
   531  002654  2A2B               	incf	main@compare_index^(0+1280),f,c
   532  002656  0E05               	movlw	5
   533  002658  642B               	cpfsgt	main@compare_index^(0+1280),c
   534  00265A  EF31  F013         	goto	u261
   535  00265E  EF33  F013         	goto	u260
   536  002662                     u261:
   537  002662  EF13  F013         	goto	l1053
   538  002666                     u260:
   539  002666                     
   540                           ;main.c: 120:         FM_Lcd_Send_Command(0x01);
   541  002666  0E01               	movlw	1
   542  002668  EC6F  F014         	call	_FM_Lcd_Send_Command
   543                           
   544                           ;main.c: 121:         FM_Lcd_Set_Cursor(ROW_1, COL_3);
   545  00266C  0E02               	movlw	2
   546  00266E  6E22               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   547  002670  0E00               	movlw	0
   548  002672  ECDC  F013         	call	_FM_Lcd_Set_Cursor
   549  002676                     
   550                           ;main.c: 122:         FM_Lcd_Send_String("Locker Pic: ");
   551  002676  0E01               	movlw	low STR_1
   552  002678  6E22               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   553  00267A  0E25               	movlw	high STR_1
   554  00267C  6E23               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   555  00267E  EC60  F013         	call	_FM_Lcd_Send_String	;wreg free
   556  002682                     
   557                           ;main.c: 123:         FM_Lcd_Set_Cursor(ROW_2, COL_3);
   558  002682  0E02               	movlw	2
   559  002684  6E22               	movwf	FM_Lcd_Set_Cursor@columna^(0+1280),c
   560  002686  0E01               	movlw	1
   561  002688  ECDC  F013         	call	_FM_Lcd_Set_Cursor
   562  00268C                     
   563                           ;main.c: 124:         if(pass_ok)
   564  00268C  502A               	movf	main@pass_ok^(0+1280),w,c
   565  00268E  B4D8               	btfsc	status,2,c
   566  002690  EF4C  F013         	goto	u271
   567  002694  EF4E  F013         	goto	u270
   568  002698                     u271:
   569  002698  EF56  F013         	goto	l1071
   570  00269C                     u270:
   571  00269C                     
   572                           ;main.c: 125:         {;main.c: 126:             FM_Lcd_Send_String("CLAVE ERROR");
   573  00269C  0E0E               	movlw	low STR_4
   574  00269E  6E22               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   575  0026A0  0E25               	movlw	high STR_4
   576  0026A2  6E23               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   577  0026A4  EC60  F013         	call	_FM_Lcd_Send_String	;wreg free
   578                           
   579                           ;main.c: 127:         }
   580  0026A8  EF5C  F013         	goto	l55
   581  0026AC                     l1071:
   582                           
   583                           ;main.c: 129:         {;main.c: 130:             FM_Lcd_Send_String("CLAVE BIEN");
   584  0026AC  0E1A               	movlw	low STR_5
   585  0026AE  6E22               	movwf	FM_Lcd_Send_String@cadena^(0+1280),c
   586  0026B0  0E25               	movlw	high STR_5
   587  0026B2  6E23               	movwf	(FM_Lcd_Send_String@cadena+1)^(0+1280),c
   588  0026B4  EC60  F013         	call	_FM_Lcd_Send_String	;wreg free
   589  0026B8                     l55:
   590  0026B8  EF5C  F013         	goto	l55
   591  0026BC  EFFE  F0FF         	goto	start
   592  0026C0                     __end_of_main:
   593                           	callstack 0
   594                           
   595 ;; *************** function _Matrix_74LS922_Init *****************
   596 ;; Defined at:
   597 ;;		line 156 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text1
   625  0028C6                     __ptext1:
   626                           	callstack 0
   627  0028C6                     _Matrix_74LS922_Init:
   628                           	callstack 126
   629  0028C6                     
   630                           ;main.c: 158:     ANSELD = 0x00;
   631  0028C6  0E00               	movlw	0
   632  0028C8  0104               	movlb	4	; () banked
   633  0028CA  6F18               	movwf	24,b	;volatile
   634                           
   635                           ;main.c: 159:     TRISD = 0x1F;
   636  0028CC  0E1F               	movlw	31
   637  0028CE  6EC9               	movwf	201,c	;volatile
   638  0028D0                     
   639                           ; BSR set to: 4
   640  0028D0  0012               	return		;funcret
   641  0028D2                     __end_of_Matrix_74LS922_Init:
   642                           	callstack 0
   643                           
   644 ;; *************** function _Internal_Oscillator_Init *****************
   645 ;; Defined at:
   646 ;;		line 168 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  my_clock_par    2    3[COMRAM] struct .
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   664 ;;Total ram usage:        2 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 1
   667 ;; This function calls:
   668 ;;		_FM_Hfintosc_Init
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text2
   675  0028B0                     __ptext2:
   676                           	callstack 0
   677  0028B0                     _Internal_Oscillator_Init:
   678                           	callstack 125
   679  0028B0                     
   680                           ;main.c: 170:     _clock_hfintosc_params_t my_clock_params;;main.c: 171:     my_clock_pa
      +                          rams.divisor_clock = clock_div_1;
   681  0028B0  0E00               	movlw	0
   682  0028B2  6E20               	movwf	Internal_Oscillator_Init@my_clock_params^(0+1280),c
   683                           
   684                           ;main.c: 172:     my_clock_params.frecuencia_clock = freq_clk_16MHZ;
   685  0028B4  0E05               	movlw	5
   686  0028B6  6E21               	movwf	(Internal_Oscillator_Init@my_clock_params+1)^(0+1280),c
   687  0028B8                     
   688                           ;main.c: 173:     FM_Hfintosc_Init(&my_clock_params);
   689  0028B8  0E20               	movlw	low Internal_Oscillator_Init@my_clock_params
   690  0028BA  6E1D               	movwf	FM_Hfintosc_Init@clock_params^(0+1280),c
   691  0028BC  0E05               	movlw	high Internal_Oscillator_Init@my_clock_params
   692  0028BE  6E1E               	movwf	(FM_Hfintosc_Init@clock_params+1)^(0+1280),c
   693  0028C0  ECFE  F013         	call	_FM_Hfintosc_Init	;wreg free
   694  0028C4  0012               	return		;funcret
   695  0028C6                     __end_of_Internal_Oscillator_Init:
   696                           	callstack 0
   697                           
   698 ;; *************** function _FM_Hfintosc_Init *****************
   699 ;; Defined at:
   700 ;;		line 8 in file "system_config.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  clock_params    2    0[COMRAM] PTR struct .
   703 ;;		 -> Internal_Oscillator_Init@my_clock_params(2), 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   718 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   719 ;;Total ram usage:        3 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_Internal_Oscillator_Init
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text3
   729  0027FC                     __ptext3:
   730                           	callstack 0
   731  0027FC                     _FM_Hfintosc_Init:
   732                           	callstack 125
   733  0027FC                     
   734                           ;system_config.c: 8: void FM_Hfintosc_Init (_clock_hfintosc_params_t *clock_params);syst
      +                          em_config.c: 9: {;system_config.c: 10:     OSCCON1bits.NOSC = 0b110;
   735  0027FC  0100               	movlb	0	; () banked
   736  0027FE  51AD               	movf	173,w,b	;volatile
   737  002800  0B8F               	andlw	-113
   738  002802  0960               	iorlw	96
   739  002804  6FAD               	movwf	173,b	;volatile
   740  002806                     
   741                           ; BSR set to: 0
   742                           ;system_config.c: 11:     OSCCON1bits.NDIV = clock_params->divisor_clock;
   743  002806  0061  F474  F4D9   	movff	FM_Hfintosc_Init@clock_params,fsr2l
   744  00280C  0061  F478  F4DA   	movff	FM_Hfintosc_Init@clock_params+1,fsr2h
   745  002812  50DF               	movf	indf2,w,c
   746  002814  6E1F               	movwf	??_FM_Hfintosc_Init^(0+1280),c
   747  002816  51AD               	movf	173,w,b	;volatile
   748  002818  181F               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
   749  00281A  0BF0               	andlw	-16
   750  00281C  181F               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
   751  00281E  6FAD               	movwf	173,b	;volatile
   752  002820                     
   753                           ; BSR set to: 0
   754                           ;system_config.c: 12:     OSCFRQbits.HFFRQ = clock_params->frecuencia_clock;
   755  002820  EE20 F001          	lfsr	2,1
   756  002824  501D               	movf	FM_Hfintosc_Init@clock_params^(0+1280),w,c
   757  002826  26D9               	addwf	fsr2l,f,c
   758  002828  501E               	movf	(FM_Hfintosc_Init@clock_params+1)^(0+1280),w,c
   759  00282A  22DA               	addwfc	fsr2h,f,c
   760  00282C  50DF               	movf	indf2,w,c
   761  00282E  6E1F               	movwf	??_FM_Hfintosc_Init^(0+1280),c
   762  002830  51B1               	movf	177,w,b	;volatile
   763  002832  181F               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
   764  002834  0BF0               	andlw	-16
   765  002836  181F               	xorwf	??_FM_Hfintosc_Init^(0+1280),w,c
   766  002838  6FB1               	movwf	177,b	;volatile
   767  00283A                     
   768                           ; BSR set to: 0
   769  00283A  0012               	return		;funcret
   770  00283C                     __end_of_FM_Hfintosc_Init:
   771                           	callstack 0
   772                           
   773 ;; *************** function _FM_Lcd_Set_Cursor *****************
   774 ;; Defined at:
   775 ;;		line 55 in file "FM_Lcd_Easy.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  filas           1    wreg     enum E16709
   778 ;;  columna         1    5[COMRAM] enum E16713
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  filas           1    6[COMRAM] enum E16709
   781 ;;  base_pos        1    7[COMRAM] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   791 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   795 ;;Total ram usage:        3 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 2
   798 ;; This function calls:
   799 ;;		_FM_Lcd_Send_Command
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text4
   806  0027B8                     __ptext4:
   807                           	callstack 0
   808  0027B8                     _FM_Lcd_Set_Cursor:
   809                           	callstack 124
   810                           
   811                           ; BSR set to: 0
   812                           ;incstack = 0
   813                           ;FM_Lcd_Set_Cursor@filas stored from wreg
   814  0027B8  6E23               	movwf	FM_Lcd_Set_Cursor@filas^(0+1280),c
   815  0027BA                     
   816                           ;FM_Lcd_Easy.c: 55: void FM_Lcd_Set_Cursor (_row_lcd_t filas, _column_lcd_t columna);FM_
      +                          Lcd_Easy.c: 56: {;FM_Lcd_Easy.c: 57:     char base_pos = 0x00;
   817  0027BA  0E00               	movlw	0
   818  0027BC  6E24               	movwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),c
   819  0027BE                     
   820                           ;FM_Lcd_Easy.c: 58:     if(filas == ROW_1)
   821  0027BE  5023               	movf	FM_Lcd_Set_Cursor@filas^(0+1280),w,c
   822  0027C0  A4D8               	btfss	status,2,c
   823  0027C2  EFE5  F013         	goto	u161
   824  0027C6  EFE7  F013         	goto	u160
   825  0027CA                     u161:
   826  0027CA  EFEB  F013         	goto	l985
   827  0027CE                     u160:
   828  0027CE                     
   829                           ;FM_Lcd_Easy.c: 59:     {;FM_Lcd_Easy.c: 60:         base_pos = 0x80;
   830  0027CE  0E80               	movlw	128
   831  0027D0  6E24               	movwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),c
   832                           
   833                           ;FM_Lcd_Easy.c: 61:     }
   834  0027D2  EFF8  F013         	goto	l989
   835  0027D6                     l985:
   836  0027D6  0423               	decf	FM_Lcd_Set_Cursor@filas^(0+1280),w,c
   837  0027D8  A4D8               	btfss	status,2,c
   838  0027DA  EFF1  F013         	goto	u171
   839  0027DE  EFF3  F013         	goto	u170
   840  0027E2                     u171:
   841  0027E2  EFF7  F013         	goto	l109
   842  0027E6                     u170:
   843  0027E6                     
   844                           ;FM_Lcd_Easy.c: 63:     {;FM_Lcd_Easy.c: 64:         base_pos = 0xC0;
   845  0027E6  0EC0               	movlw	192
   846  0027E8  6E24               	movwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),c
   847                           
   848                           ;FM_Lcd_Easy.c: 65:     }
   849  0027EA  EFF8  F013         	goto	l989
   850  0027EE                     l109:
   851                           
   852                           ;FM_Lcd_Easy.c: 67:     {;FM_Lcd_Easy.c: 68:         __nop();
   853  0027EE  F000               	nop	
   854  0027F0                     l989:
   855                           
   856                           ;FM_Lcd_Easy.c: 72:     base_pos += columna;
   857  0027F0  5022               	movf	FM_Lcd_Set_Cursor@columna^(0+1280),w,c
   858  0027F2  2624               	addwf	FM_Lcd_Set_Cursor@base_pos^(0+1280),f,c
   859  0027F4                     
   860                           ;FM_Lcd_Easy.c: 73:     FM_Lcd_Send_Command(base_pos);
   861  0027F4  5024               	movf	FM_Lcd_Set_Cursor@base_pos^(0+1280),w,c
   862  0027F6  EC6F  F014         	call	_FM_Lcd_Send_Command
   863  0027FA  0012               	return		;funcret
   864  0027FC                     __end_of_FM_Lcd_Set_Cursor:
   865                           	callstack 0
   866                           
   867 ;; *************** function _FM_Lcd_Send_String *****************
   868 ;; Defined at:
   869 ;;		line 77 in file "FM_Lcd_Easy.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  cadena          2    5[COMRAM] PTR unsigned char 
   872 ;;		 -> STR_5(11), STR_4(12), STR_3(13), clave_ingresada(6), 
   873 ;;		 -> STR_2(8), STR_1(13), 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  index           1    9[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   888 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   889 ;;Total ram usage:        5 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 2
   892 ;; This function calls:
   893 ;;		_FM_Lcd_Send_Character
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text5
   900  0026C0                     __ptext5:
   901                           	callstack 0
   902  0026C0                     _FM_Lcd_Send_String:
   903                           	callstack 124
   904  0026C0                     
   905                           ;FM_Lcd_Easy.c: 77: void FM_Lcd_Send_String (char *cadena);FM_Lcd_Easy.c: 78: {;FM_Lcd_E
      +                          asy.c: 79:     uint8_t index = 0;
   906  0026C0  0E00               	movlw	0
   907  0026C2  6E26               	movwf	FM_Lcd_Send_String@index^(0+1280),c
   908                           
   909                           ;FM_Lcd_Easy.c: 80:     while(cadena[index] != '\0')
   910  0026C4  EF80  F013         	goto	l1001
   911  0026C8                     l997:
   912                           
   913                           ;FM_Lcd_Easy.c: 81:     {;FM_Lcd_Easy.c: 82:         FM_Lcd_Send_Character(cadena[index]
      +                          );
   914  0026C8  5026               	movf	FM_Lcd_Send_String@index^(0+1280),w,c
   915  0026CA  2422               	addwf	FM_Lcd_Send_String@cadena^(0+1280),w,c
   916  0026CC  6E24               	movwf	??_FM_Lcd_Send_String^(0+1280),c
   917  0026CE  0E00               	movlw	0
   918  0026D0  2023               	addwfc	(FM_Lcd_Send_String@cadena+1)^(0+1280),w,c
   919  0026D2  6E25               	movwf	(??_FM_Lcd_Send_String+1)^(0+1280),c
   920  0026D4  0061  F490  F4F6   	movff	??_FM_Lcd_Send_String,tblptrl
   921  0026DA  0061  F494  F4F7   	movff	??_FM_Lcd_Send_String+1,tblptrh
   922  0026E0  0E00               	movlw	low (__smallconst shr (0+16))
   923  0026E2  6EF8               	movwf	tblptru,c
   924  0026E4  0E24               	movlw	(high __ramtop+-1)
   925  0026E6  64F7               	cpfsgt	tblptrh,c
   926  0026E8  D003               	bra	u187
   927  0026EA  0008               	tblrd		*
   928  0026EC  50F5               	movf	tablat,w,c
   929  0026EE  D005               	bra	u180
   930  0026F0                     u187:
   931  0026F0  C4F6 F4E9          	movff	tblptrl,fsr0l
   932  0026F4  C4F7 F4EA          	movff	tblptrh,fsr0h
   933  0026F8  50EF               	movf	indf0,w,c
   934  0026FA                     u180:
   935  0026FA  EC69  F014         	call	_FM_Lcd_Send_Character
   936  0026FE                     
   937                           ;FM_Lcd_Easy.c: 83:         index++;
   938  0026FE  2A26               	incf	FM_Lcd_Send_String@index^(0+1280),f,c
   939  002700                     l1001:
   940                           
   941                           ;FM_Lcd_Easy.c: 80:     while(cadena[index] != '\0')
   942  002700  5026               	movf	FM_Lcd_Send_String@index^(0+1280),w,c
   943  002702  2422               	addwf	FM_Lcd_Send_String@cadena^(0+1280),w,c
   944  002704  6E24               	movwf	??_FM_Lcd_Send_String^(0+1280),c
   945  002706  0E00               	movlw	0
   946  002708  2023               	addwfc	(FM_Lcd_Send_String@cadena+1)^(0+1280),w,c
   947  00270A  6E25               	movwf	(??_FM_Lcd_Send_String+1)^(0+1280),c
   948  00270C  0061  F490  F4F6   	movff	??_FM_Lcd_Send_String,tblptrl
   949  002712  0061  F494  F4F7   	movff	??_FM_Lcd_Send_String+1,tblptrh
   950  002718  0E00               	movlw	low (__smallconst shr (0+16))
   951  00271A  6EF8               	movwf	tblptru,c
   952  00271C  0E24               	movlw	(high __ramtop+-1)
   953  00271E  64F7               	cpfsgt	tblptrh,c
   954  002720  D003               	bra	u197
   955  002722  0008               	tblrd		*
   956  002724  50F5               	movf	tablat,w,c
   957  002726  D005               	bra	u190
   958  002728                     u197:
   959  002728  C4F6 F4E9          	movff	tblptrl,fsr0l
   960  00272C  C4F7 F4EA          	movff	tblptrh,fsr0h
   961  002730  50EF               	movf	indf0,w,c
   962  002732                     u190:
   963  002732  0900               	iorlw	0
   964  002734  A4D8               	btfss	status,2,c
   965  002736  EF9F  F013         	goto	u201
   966  00273A  EFA1  F013         	goto	u200
   967  00273E                     u201:
   968  00273E  EF64  F013         	goto	l997
   969  002742                     u200:
   970  002742  0012               	return		;funcret
   971  002744                     __end_of_FM_Lcd_Send_String:
   972                           	callstack 0
   973                           
   974 ;; *************** function _FM_Lcd_Send_Character *****************
   975 ;; Defined at:
   976 ;;		line 49 in file "FM_Lcd_Easy.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  character_to    1    wreg     unsigned char 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  character_to    1    4[COMRAM] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   994 ;;Total ram usage:        1 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; Hardware stack levels required when called: 1
   997 ;; This function calls:
   998 ;;		_FM_Lcd_Send_Nibble
   999 ;; This function is called by:
  1000 ;;		_FM_Lcd_Send_String
  1001 ;;		_FM_Lcd_Send_Uint8
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text6
  1006  0028D2                     __ptext6:
  1007                           	callstack 0
  1008  0028D2                     _FM_Lcd_Send_Character:
  1009                           	callstack 124
  1010                           
  1011                           ;incstack = 0
  1012                           ;FM_Lcd_Send_Character@character_to_send stored from wreg
  1013  0028D2  6E21               	movwf	FM_Lcd_Send_Character@character_to_send^(0+1280),c
  1014  0028D4                     
  1015                           ;FM_Lcd_Easy.c: 49: void FM_Lcd_Send_Character (char character_to_send);FM_Lcd_Easy.c: 5
      +                          0: {;FM_Lcd_Easy.c: 51:     LATF |= (1 << 0);;
  1016  0028D4  80C3               	bsf	195,0,c	;volatile
  1017  0028D6                     
  1018                           ;FM_Lcd_Easy.c: 52:     FM_Lcd_Send_Nibble(character_to_send);
  1019  0028D6  5021               	movf	FM_Lcd_Send_Character@character_to_send^(0+1280),w,c
  1020  0028D8  ECA2  F013         	call	_FM_Lcd_Send_Nibble
  1021  0028DC  0012               	return		;funcret
  1022  0028DE                     __end_of_FM_Lcd_Send_Character:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _FM_Lcd_Easy_Init *****************
  1026 ;; Defined at:
  1027 ;;		line 98 in file "FM_Lcd_Easy.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 2
  1048 ;; This function calls:
  1049 ;;		_FM_Lcd_Easy_Gpio_Init
  1050 ;;		_FM_Lcd_Send_Command
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text7
  1057  00286A                     __ptext7:
  1058                           	callstack 0
  1059  00286A                     _FM_Lcd_Easy_Init:
  1060                           	callstack 124
  1061  00286A                     
  1062                           ;FM_Lcd_Easy.c: 100:     FM_Lcd_Easy_Gpio_Init();
  1063  00286A  EC75  F014         	call	_FM_Lcd_Easy_Gpio_Init	;wreg free
  1064                           
  1065                           ;FM_Lcd_Easy.c: 102:     FM_Lcd_Send_Command(0x01);
  1066  00286E  0E01               	movlw	1
  1067  002870  EC6F  F014         	call	_FM_Lcd_Send_Command
  1068                           
  1069                           ;FM_Lcd_Easy.c: 103:     FM_Lcd_Send_Command(0x02);
  1070  002874  0E02               	movlw	2
  1071  002876  EC6F  F014         	call	_FM_Lcd_Send_Command
  1072                           
  1073                           ;FM_Lcd_Easy.c: 104:     FM_Lcd_Send_Command(0x06);
  1074  00287A  0E06               	movlw	6
  1075  00287C  EC6F  F014         	call	_FM_Lcd_Send_Command
  1076                           
  1077                           ;FM_Lcd_Easy.c: 105:     FM_Lcd_Send_Command(0x0C);
  1078  002880  0E0C               	movlw	12
  1079  002882  EC6F  F014         	call	_FM_Lcd_Send_Command
  1080                           
  1081                           ;FM_Lcd_Easy.c: 106:     FM_Lcd_Send_Command(0x10);
  1082  002886  0E10               	movlw	16
  1083  002888  EC6F  F014         	call	_FM_Lcd_Send_Command
  1084                           
  1085                           ;FM_Lcd_Easy.c: 107:     FM_Lcd_Send_Command(0x2C);
  1086  00288C  0E2C               	movlw	44
  1087  00288E  EC6F  F014         	call	_FM_Lcd_Send_Command
  1088  002892  0012               	return		;funcret
  1089  002894                     __end_of_FM_Lcd_Easy_Init:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _FM_Lcd_Send_Command *****************
  1093 ;; Defined at:
  1094 ;;		line 43 in file "FM_Lcd_Easy.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  command_to_s    1    wreg     unsigned char 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  command_to_s    1    4[COMRAM] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1112 ;;Total ram usage:        1 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 1
  1115 ;; This function calls:
  1116 ;;		_FM_Lcd_Send_Nibble
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;;		_FM_Lcd_Set_Cursor
  1120 ;;		_FM_Lcd_Easy_Init
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text8
  1125  0028DE                     __ptext8:
  1126                           	callstack 0
  1127  0028DE                     _FM_Lcd_Send_Command:
  1128                           	callstack 124
  1129                           
  1130                           ;incstack = 0
  1131                           ;FM_Lcd_Send_Command@command_to_send stored from wreg
  1132  0028DE  6E21               	movwf	FM_Lcd_Send_Command@command_to_send^(0+1280),c
  1133  0028E0                     
  1134                           ;FM_Lcd_Easy.c: 43: void FM_Lcd_Send_Command (char command_to_send);FM_Lcd_Easy.c: 44: {
      +                          ;FM_Lcd_Easy.c: 45:     LATF &= ~(1 << 0);;
  1135  0028E0  90C3               	bcf	195,0,c	;volatile
  1136  0028E2                     
  1137                           ;FM_Lcd_Easy.c: 46:     FM_Lcd_Send_Nibble(command_to_send);
  1138  0028E2  5021               	movf	FM_Lcd_Send_Command@command_to_send^(0+1280),w,c
  1139  0028E4  ECA2  F013         	call	_FM_Lcd_Send_Nibble
  1140  0028E8  0012               	return		;funcret
  1141  0028EA                     __end_of_FM_Lcd_Send_Command:
  1142                           	callstack 0
  1143                           
  1144 ;; *************** function _FM_Lcd_Send_Nibble *****************
  1145 ;; Defined at:
  1146 ;;		line 23 in file "FM_Lcd_Easy.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  byte_to_send    1    wreg     unsigned char 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  byte_to_send    1    1[COMRAM] unsigned char 
  1151 ;;  lower_bits      1    3[COMRAM] unsigned char 
  1152 ;;  upper_bits      1    2[COMRAM] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1163 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1166 ;;Total ram usage:        4 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_FM_Lcd_Send_Command
  1172 ;;		_FM_Lcd_Send_Character
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text9
  1177  002744                     __ptext9:
  1178                           	callstack 0
  1179  002744                     _FM_Lcd_Send_Nibble:
  1180                           	callstack 124
  1181                           
  1182                           ;incstack = 0
  1183                           ;FM_Lcd_Send_Nibble@byte_to_send stored from wreg
  1184  002744  6E1E               	movwf	FM_Lcd_Send_Nibble@byte_to_send^(0+1280),c
  1185  002746                     
  1186                           ;FM_Lcd_Easy.c: 23: void FM_Lcd_Send_Nibble (char byte_to_send);FM_Lcd_Easy.c: 24: {;FM_
      +                          Lcd_Easy.c: 25:     uint8_t upper_bits, lower_bits;;FM_Lcd_Easy.c: 27:     upper_bits = 
      +                          (byte_to_send & 0xF0);
  1187  002746  501E               	movf	FM_Lcd_Send_Nibble@byte_to_send^(0+1280),w,c
  1188  002748  0BF0               	andlw	240
  1189  00274A  6E1F               	movwf	FM_Lcd_Send_Nibble@upper_bits^(0+1280),c
  1190                           
  1191                           ;FM_Lcd_Easy.c: 28:     lower_bits = (byte_to_send & 0x0F) << 4;
  1192  00274C  C51E  F51D         	movff	FM_Lcd_Send_Nibble@byte_to_send,??_FM_Lcd_Send_Nibble
  1193  002750  0E0F               	movlw	15
  1194  002752  161D               	andwf	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1195  002754  381D               	swapf	??_FM_Lcd_Send_Nibble^(0+1280),w,c
  1196  002756  0BF0               	andlw	240
  1197  002758  6E20               	movwf	FM_Lcd_Send_Nibble@lower_bits^(0+1280),c
  1198                           
  1199                           ;FM_Lcd_Easy.c: 34:     LATF |= upper_bits;
  1200  00275A  501F               	movf	FM_Lcd_Send_Nibble@upper_bits^(0+1280),w,c	;volatile
  1201  00275C  12C3               	iorwf	195,f,c	;volatile
  1202  00275E                     
  1203                           ;FM_Lcd_Easy.c: 35:     LATF |= (1 << 2);; _delay((unsigned long)((1)*(16000000UL/4000.0
      +                          ))); LATF &= ~(1 << 2);_delay((unsigned long)((1)*(16000000UL/4000.0)));;
  1204  00275E  84C3               	bsf	195,2,c	;volatile
  1205  002760  0E06               	movlw	6
  1206  002762  6E1D               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1207  002764  0E30               	movlw	48
  1208  002766                     u297:
  1209  002766  2EE8               	decfsz	wreg,f,c
  1210  002768  D7FE               	bra	u297
  1211  00276A  2E1D               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1212  00276C  D7FC               	bra	u297
  1213  00276E  D000               	nop2	
  1214  002770  94C3               	bcf	195,2,c	;volatile
  1215  002772  0E06               	movlw	6
  1216  002774  6E1D               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1217  002776  0E30               	movlw	48
  1218  002778                     u307:
  1219  002778  2EE8               	decfsz	wreg,f,c
  1220  00277A  D7FE               	bra	u307
  1221  00277C  2E1D               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1222  00277E  D7FC               	bra	u307
  1223  002780  D000               	nop2	
  1224  002782                     
  1225                           ;FM_Lcd_Easy.c: 36:     LATF &= ~upper_bits;
  1226  002782  501F               	movf	FM_Lcd_Send_Nibble@upper_bits^(0+1280),w,c	;volatile
  1227  002784  0AFF               	xorlw	255
  1228  002786  16C3               	andwf	195,f,c	;volatile
  1229  002788                     
  1230                           ;FM_Lcd_Easy.c: 37:     LATF |= lower_bits;
  1231  002788  5020               	movf	FM_Lcd_Send_Nibble@lower_bits^(0+1280),w,c	;volatile
  1232  00278A  12C3               	iorwf	195,f,c	;volatile
  1233                           
  1234                           ;FM_Lcd_Easy.c: 38:     LATF |= (1 << 2);; _delay((unsigned long)((1)*(16000000UL/4000.0
      +                          ))); LATF &= ~(1 << 2);_delay((unsigned long)((1)*(16000000UL/4000.0)));;
  1235  00278C  84C3               	bsf	195,2,c	;volatile
  1236  00278E  0E06               	movlw	6
  1237  002790  6E1D               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1238  002792  0E30               	movlw	48
  1239  002794                     u317:
  1240  002794  2EE8               	decfsz	wreg,f,c
  1241  002796  D7FE               	bra	u317
  1242  002798  2E1D               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1243  00279A  D7FC               	bra	u317
  1244  00279C  D000               	nop2	
  1245  00279E  94C3               	bcf	195,2,c	;volatile
  1246  0027A0  0E06               	movlw	6
  1247  0027A2  6E1D               	movwf	??_FM_Lcd_Send_Nibble^(0+1280),c
  1248  0027A4  0E30               	movlw	48
  1249  0027A6                     u327:
  1250  0027A6  2EE8               	decfsz	wreg,f,c
  1251  0027A8  D7FE               	bra	u327
  1252  0027AA  2E1D               	decfsz	??_FM_Lcd_Send_Nibble^(0+1280),f,c
  1253  0027AC  D7FC               	bra	u327
  1254  0027AE  D000               	nop2	
  1255  0027B0                     
  1256                           ;FM_Lcd_Easy.c: 39:     LATF &= ~lower_bits;
  1257  0027B0  5020               	movf	FM_Lcd_Send_Nibble@lower_bits^(0+1280),w,c	;volatile
  1258  0027B2  0AFF               	xorlw	255
  1259  0027B4  16C3               	andwf	195,f,c	;volatile
  1260  0027B6  0012               	return		;funcret
  1261  0027B8                     __end_of_FM_Lcd_Send_Nibble:
  1262                           	callstack 0
  1263                           
  1264 ;; *************** function _FM_Lcd_Easy_Gpio_Init *****************
  1265 ;; Defined at:
  1266 ;;		line 11 in file "FM_Lcd_Easy.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  bits_data       1    0        unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_FM_Lcd_Easy_Init
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text10
  1294  0028EA                     __ptext10:
  1295                           	callstack 0
  1296  0028EA                     _FM_Lcd_Easy_Gpio_Init:
  1297                           	callstack 125
  1298  0028EA                     
  1299                           ;FM_Lcd_Easy.c: 19:     TRISF = 0x00;
  1300  0028EA  0E00               	movlw	0
  1301  0028EC  6ECB               	movwf	203,c	;volatile
  1302  0028EE                     
  1303                           ;FM_Lcd_Easy.c: 20:     LATF &= ~(1 << 1);
  1304  0028EE  92C3               	bcf	195,1,c	;volatile
  1305  0028F0  0012               	return		;funcret
  1306  0028F2                     __end_of_FM_Lcd_Easy_Gpio_Init:
  1307                           	callstack 0
  1308                           
  1309                           	psect	rparam
  1310  0000                     
  1311                           	psect	idloc
  1312                           
  1313                           ;Config register IDLOC0 @ 0x200000
  1314                           ;	unspecified, using default values
  1315  200000                     	org	2097152
  1316  200000  0FFF               	dw	4095
  1317                           
  1318                           ;Config register IDLOC1 @ 0x200002
  1319                           ;	unspecified, using default values
  1320  200002                     	org	2097154
  1321  200002  0FFF               	dw	4095
  1322                           
  1323                           ;Config register IDLOC2 @ 0x200004
  1324                           ;	unspecified, using default values
  1325  200004                     	org	2097156
  1326  200004  0FFF               	dw	4095
  1327                           
  1328                           ;Config register IDLOC3 @ 0x200006
  1329                           ;	unspecified, using default values
  1330  200006                     	org	2097158
  1331  200006  0FFF               	dw	4095
  1332                           
  1333                           ;Config register IDLOC4 @ 0x200008
  1334                           ;	unspecified, using default values
  1335  200008                     	org	2097160
  1336  200008  0FFF               	dw	4095
  1337                           
  1338                           ;Config register IDLOC5 @ 0x20000A
  1339                           ;	unspecified, using default values
  1340  20000A                     	org	2097162
  1341  20000A  0FFF               	dw	4095
  1342                           
  1343                           ;Config register IDLOC6 @ 0x20000C
  1344                           ;	unspecified, using default values
  1345  20000C                     	org	2097164
  1346  20000C  0FFF               	dw	4095
  1347                           
  1348                           ;Config register IDLOC7 @ 0x20000E
  1349                           ;	unspecified, using default values
  1350  20000E                     	org	2097166
  1351  20000E  0FFF               	dw	4095
  1352                           
  1353                           ;Config register IDLOC8 @ 0x200010
  1354                           ;	unspecified, using default values
  1355  200010                     	org	2097168
  1356  200010  0FFF               	dw	4095
  1357                           
  1358                           ;Config register IDLOC9 @ 0x200012
  1359                           ;	unspecified, using default values
  1360  200012                     	org	2097170
  1361  200012  0FFF               	dw	4095
  1362                           
  1363                           ;Config register IDLOC10 @ 0x200014
  1364                           ;	unspecified, using default values
  1365  200014                     	org	2097172
  1366  200014  0FFF               	dw	4095
  1367                           
  1368                           ;Config register IDLOC11 @ 0x200016
  1369                           ;	unspecified, using default values
  1370  200016                     	org	2097174
  1371  200016  0FFF               	dw	4095
  1372                           
  1373                           ;Config register IDLOC12 @ 0x200018
  1374                           ;	unspecified, using default values
  1375  200018                     	org	2097176
  1376  200018  0FFF               	dw	4095
  1377                           
  1378                           ;Config register IDLOC13 @ 0x20001A
  1379                           ;	unspecified, using default values
  1380  20001A                     	org	2097178
  1381  20001A  0FFF               	dw	4095
  1382                           
  1383                           ;Config register IDLOC14 @ 0x20001C
  1384                           ;	unspecified, using default values
  1385  20001C                     	org	2097180
  1386  20001C  0FFF               	dw	4095
  1387                           
  1388                           ;Config register IDLOC15 @ 0x20001E
  1389                           ;	unspecified, using default values
  1390  20001E                     	org	2097182
  1391  20001E  0FFF               	dw	4095
  1392                           
  1393                           ;Config register IDLOC16 @ 0x200020
  1394                           ;	unspecified, using default values
  1395  200020                     	org	2097184
  1396  200020  0FFF               	dw	4095
  1397                           
  1398                           ;Config register IDLOC17 @ 0x200022
  1399                           ;	unspecified, using default values
  1400  200022                     	org	2097186
  1401  200022  0FFF               	dw	4095
  1402                           
  1403                           ;Config register IDLOC18 @ 0x200024
  1404                           ;	unspecified, using default values
  1405  200024                     	org	2097188
  1406  200024  0FFF               	dw	4095
  1407                           
  1408                           ;Config register IDLOC19 @ 0x200026
  1409                           ;	unspecified, using default values
  1410  200026                     	org	2097190
  1411  200026  0FFF               	dw	4095
  1412                           
  1413                           ;Config register IDLOC20 @ 0x200028
  1414                           ;	unspecified, using default values
  1415  200028                     	org	2097192
  1416  200028  0FFF               	dw	4095
  1417                           
  1418                           ;Config register IDLOC21 @ 0x20002A
  1419                           ;	unspecified, using default values
  1420  20002A                     	org	2097194
  1421  20002A  0FFF               	dw	4095
  1422                           
  1423                           ;Config register IDLOC22 @ 0x20002C
  1424                           ;	unspecified, using default values
  1425  20002C                     	org	2097196
  1426  20002C  0FFF               	dw	4095
  1427                           
  1428                           ;Config register IDLOC23 @ 0x20002E
  1429                           ;	unspecified, using default values
  1430  20002E                     	org	2097198
  1431  20002E  0FFF               	dw	4095
  1432                           
  1433                           ;Config register IDLOC24 @ 0x200030
  1434                           ;	unspecified, using default values
  1435  200030                     	org	2097200
  1436  200030  0FFF               	dw	4095
  1437                           
  1438                           ;Config register IDLOC25 @ 0x200032
  1439                           ;	unspecified, using default values
  1440  200032                     	org	2097202
  1441  200032  0FFF               	dw	4095
  1442                           
  1443                           ;Config register IDLOC26 @ 0x200034
  1444                           ;	unspecified, using default values
  1445  200034                     	org	2097204
  1446  200034  0FFF               	dw	4095
  1447                           
  1448                           ;Config register IDLOC27 @ 0x200036
  1449                           ;	unspecified, using default values
  1450  200036                     	org	2097206
  1451  200036  0FFF               	dw	4095
  1452                           
  1453                           ;Config register IDLOC28 @ 0x200038
  1454                           ;	unspecified, using default values
  1455  200038                     	org	2097208
  1456  200038  0FFF               	dw	4095
  1457                           
  1458                           ;Config register IDLOC29 @ 0x20003A
  1459                           ;	unspecified, using default values
  1460  20003A                     	org	2097210
  1461  20003A  0FFF               	dw	4095
  1462                           
  1463                           ;Config register IDLOC30 @ 0x20003C
  1464                           ;	unspecified, using default values
  1465  20003C                     	org	2097212
  1466  20003C  0FFF               	dw	4095
  1467                           
  1468                           ;Config register IDLOC31 @ 0x20003E
  1469                           ;	unspecified, using default values
  1470  20003E                     	org	2097214
  1471  20003E  0FFF               	dw	4095
  1472                           
  1473                           	psect	config
  1474                           
  1475                           ;Config register CONFIG1 @ 0x300000
  1476                           ;	External Oscillator Selection
  1477                           ;	FEXTOSC = OFF, Oscillator not enabled
  1478                           ;	Reset Oscillator Selection
  1479                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  1480  300000                     	org	3145728
  1481  300000  8C                 	db	140
  1482                           
  1483                           ;Config register CONFIG2 @ 0x300001
  1484                           ;	Clock out Enable bit
  1485                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1486                           ;	PRLOCKED One-Way Set Enable bit
  1487                           ;	PR1WAY = OFF, PRLOCKED bit can be set and cleared repeatedly
  1488                           ;	Clock Switch Enable bit
  1489                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  1490                           ;	Fail-Safe Clock Monitor Enable bit
  1491                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1492  300001                     	org	3145729
  1493  300001  D5                 	db	213
  1494                           
  1495                           ;Config register CONFIG3 @ 0x300002
  1496                           ;	MCLR Enable bit
  1497                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1498                           ;	Power-up timer selection bits
  1499                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1500                           ;	Multi-vector enable bit
  1501                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  1502                           ;	IVTLOCK bit One-way set enable bit
  1503                           ;	IVT1WAY = OFF, IVTLOCKED bit can be cleared and set repeatedly
  1504                           ;	Low Power BOR Enable bit
  1505                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1506                           ;	Brown-out Reset Enable bits
  1507                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1508  300002                     	org	3145730
  1509  300002  E7                 	db	231
  1510                           
  1511                           ;Config register CONFIG4 @ 0x300003
  1512                           ;	Brown-out Reset Voltage Selection bits
  1513                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1514                           ;	ZCD Disable bit
  1515                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1516                           ;	PPSLOCK bit One-Way Set Enable bit
  1517                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
  1518                           ;	Stack Full/Underflow Reset Enable bit
  1519                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1520                           ;	Low Voltage Programming Enable bit
  1521                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1522                           ;	Extended Instruction Set Enable bit
  1523                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1524  300003                     	org	3145731
  1525  300003  C7                 	db	199
  1526                           
  1527                           ;Config register CONFIG5 @ 0x300004
  1528                           ;	WDT Period selection bits
  1529                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1530                           ;	WDT operating mode
  1531                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1532  300004                     	org	3145732
  1533  300004  9F                 	db	159
  1534                           
  1535                           ;Config register CONFIG6 @ 0x300005
  1536                           ;	WDT Window Select bits
  1537                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1538                           ;	WDT input clock selector
  1539                           ;	WDTCCS = SC, Software Control
  1540  300005                     	org	3145733
  1541  300005  FF                 	db	255
  1542                           
  1543                           ;Config register CONFIG7 @ 0x300006
  1544                           ;	Boot Block Size selection bits
  1545                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1546                           ;	Boot Block enable bit
  1547                           ;	BBEN = OFF, Boot block disabled
  1548                           ;	Storage Area Flash enable bit
  1549                           ;	SAFEN = OFF, SAF disabled
  1550                           ;	Background Debugger
  1551                           ;	DEBUG = OFF, Background Debugger disabled
  1552  300006                     	org	3145734
  1553  300006  FF                 	db	255
  1554                           
  1555                           ;Config register CONFIG8 @ 0x300007
  1556                           ;	Boot Block Write Protection bit
  1557                           ;	WRTB = OFF, Boot Block not Write protected
  1558                           ;	Configuration Register Write Protection bit
  1559                           ;	WRTC = OFF, Configuration registers not Write protected
  1560                           ;	Data EEPROM Write Protection bit
  1561                           ;	WRTD = OFF, Data EEPROM not Write protected
  1562                           ;	SAF Write protection bit
  1563                           ;	WRTSAF = OFF, SAF not Write Protected
  1564                           ;	Application Block write protection bit
  1565                           ;	WRTAPP = OFF, Application Block not write protected
  1566  300007                     	org	3145735
  1567  300007  FF                 	db	255
  1568                           
  1569                           ; Padding undefined space
  1570  300008                     	org	3145736
  1571  300008  FF                 	db	255
  1572                           
  1573                           ;Config register CONFIG10 @ 0x300009
  1574                           ;	PFM and Data EEPROM Code Protection bit
  1575                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1576  300009                     	org	3145737
  1577  300009  FF                 	db	255
  1578                           tosu	equ	0x4FF
  1579                           tosh	equ	0x4FE
  1580                           tosl	equ	0x4FD
  1581                           stkptr	equ	0x4FC
  1582                           pclatu	equ	0x4FB
  1583                           pclath	equ	0x4FA
  1584                           pcl	equ	0x4F9
  1585                           tblptru	equ	0x4F8
  1586                           tblptrh	equ	0x4F7
  1587                           tblptrl	equ	0x4F6
  1588                           tablat	equ	0x4F5
  1589                           prodh	equ	0x4F4
  1590                           prodl	equ	0x4F3
  1591                           indf0	equ	0x4EF
  1592                           postinc0	equ	0x4EE
  1593                           postdec0	equ	0x4ED
  1594                           preinc0	equ	0x4EC
  1595                           plusw0	equ	0x4EB
  1596                           fsr0h	equ	0x4EA
  1597                           fsr0l	equ	0x4E9
  1598                           wreg	equ	0x4E8
  1599                           indf1	equ	0x4E7
  1600                           postinc1	equ	0x4E6
  1601                           postdec1	equ	0x4E5
  1602                           preinc1	equ	0x4E4
  1603                           plusw1	equ	0x4E3
  1604                           fsr1h	equ	0x4E2
  1605                           fsr1l	equ	0x4E1
  1606                           bsr	equ	0x4E0
  1607                           indf2	equ	0x4DF
  1608                           postinc2	equ	0x4DE
  1609                           postdec2	equ	0x4DD
  1610                           preinc2	equ	0x4DC
  1611                           plusw2	equ	0x4DB
  1612                           fsr2h	equ	0x4DA
  1613                           fsr2l	equ	0x4D9
  1614                           status	equ	0x4D8

Data Sizes:
    Strings     44
    Constant    0
    Data        28
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      45
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    FM_Lcd_Send_String@cadena	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[11]), STR_4(CODE[12]), STR_3(CODE[13]), clave_ingresada(COMRAM[6]), 
		 -> STR_2(CODE[8]), STR_1(CODE[13]), 

    FM_Hfintosc_Init@clock_params	PTR struct . size(2) Largest target is 2
		 -> Internal_Oscillator_Init@my_clock_params(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_FM_Lcd_Send_String
    _Internal_Oscillator_Init->_FM_Hfintosc_Init
    _FM_Lcd_Set_Cursor->_FM_Lcd_Send_Command
    _FM_Lcd_Send_String->_FM_Lcd_Send_Character
    _FM_Lcd_Send_Character->_FM_Lcd_Send_Nibble
    _FM_Lcd_Easy_Init->_FM_Lcd_Send_Command
    _FM_Lcd_Send_Command->_FM_Lcd_Send_Nibble

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1897
                                             10 COMRAM     5     5      0
                   _FM_Lcd_Easy_Init
                _FM_Lcd_Send_Command
                 _FM_Lcd_Send_String
                  _FM_Lcd_Set_Cursor
           _Internal_Oscillator_Init
                _Matrix_74LS922_Init
 ---------------------------------------------------------------------------------
 (1) _Matrix_74LS922_Init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Internal_Oscillator_Init                             2     2      0     169
                                              3 COMRAM     2     2      0
                   _FM_Hfintosc_Init
 ---------------------------------------------------------------------------------
 (2) _FM_Hfintosc_Init                                     3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Set_Cursor                                    3     2      1     654
                                              5 COMRAM     3     2      1
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Send_String                                   5     3      2     727
                                              5 COMRAM     5     3      2
              _FM_Lcd_Send_Character
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Character                                1     1      0     105
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (1) _FM_Lcd_Easy_Init                                     0     0      0     105
              _FM_Lcd_Easy_Gpio_Init
                _FM_Lcd_Send_Command
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Send_Command                                  1     1      0     105
                                              4 COMRAM     1     1      0
                 _FM_Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (3) _FM_Lcd_Send_Nibble                                   4     4      0      90
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _FM_Lcd_Easy_Gpio_Init                                1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FM_Lcd_Easy_Init
     _FM_Lcd_Easy_Gpio_Init
     _FM_Lcd_Send_Command
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Send_Command
   _FM_Lcd_Send_String
     _FM_Lcd_Send_Character
       _FM_Lcd_Send_Nibble
   _FM_Lcd_Set_Cursor
     _FM_Lcd_Send_Command
   _Internal_Oscillator_Init
     _FM_Hfintosc_Init
   _Matrix_74LS922_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      2D       1       47.4%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      68        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 26 12:06:05 2023

                                     l43 2586                                       l45 259A  
                                     l71 28D0                                       l55 26B8  
                                     l84 283A                                       l77 28C4  
                                     l95 28F0                                       l98 27B6  
                                    l101 28E8                                      l111 27FA  
                                    l104 28DC                                      l123 2892  
                                    l117 2742                                      l109 27EE  
                                    l801 275E                                      l811 278E  
                                    l803 2770                                      l813 279E  
                                    l805 2772                                      l815 27B0  
                                    l807 2782                                      l831 28D4  
                                    l809 2788                                      l817 28E0  
                                    l833 28D6                                      l841 28C6  
                                    l827 28EA                                      l819 28E2  
                                    l829 28EE                                      l839 286A  
                                    l971 2806                                      l981 27BE  
                                    l973 2820                                      l799 2746  
                                    l991 27F4                                      l983 27CE  
                                    l975 28B0                                      l993 27FA  
                                    l985 27D6                                      l969 27FC  
                                    l977 28B8                                      l995 26C0  
                                    l987 27E6                                      l979 27BA  
                                    l997 26C8                                      l989 27F0  
                                    l999 26FE                                      u200 2742  
                                    u201 273E                                      u210 2594  
                                    u211 2590                                      u220 25A8  
                                    u221 25A4                                      u230 25EC  
                                    u231 25E8                                      u160 27CE  
                                    u240 261C                                      u161 27CA  
                                    u241 2618                                      u170 27E6  
                                    u250 2650                                      u307 2778  
                                    u171 27E2                                      u251 264C  
                                    u180 26FA                                      u260 2666  
                                    u317 2794                                      u261 2662  
                                    u190 2732                                      u270 269C  
                                    u327 27A6                                      u271 2698  
                                    u187 26F0                                      u197 2728  
                                    u287 25FE                                      u297 2766  
                                    wreg 0004E8                                     l1001 2700  
                                   l1011 2540                                     l1003 252E  
                                   l1021 2576                                     l1013 254A  
                                   l1005 2532                                     l1031 25D0  
                                   l1023 2594                                     l1015 2556  
                                   l1007 2536                                     l1033 25DC  
                                   l1025 25A8                                     l1041 260C  
                                   l1017 2560                                     l1009 253A  
                                   l1043 261C                                     l1035 25EC  
                                   l1027 25C4                                     l1019 256C  
                                   l1061 2666                                     l1053 2626  
                                   l1045 261E                                     l1029 25C6  
                                   l1037 25F0                                     l1071 26AC  
                                   l1063 2676                                     l1055 2650  
                                   l1047 2622                                     l1039 25F4  
                                   l1065 2682                                     l1057 2654  
                                   l1067 268C                                     l1059 2656  
                                   l1069 269C                                     STR_1 2501  
                                   STR_2 2525                                     STR_3 2501  
                                   STR_4 250E                                     STR_5 251A  
                                   _LATF 0004C3               __end_of_FM_Lcd_Send_Nibble 27B8  
                      ?_FM_Hfintosc_Init 051D                              main@pass_ok 052A  
                                   _main 252E             FM_Lcd_Send_Nibble@upper_bits 051F  
                                   fsr0h 0004EA                                     indf0 0004EF  
                                   fsr2h 0004DA                                     fsr0l 0004E9  
                                   indf1 0004E7                                     indf2 0004DF  
                                   fsr1l 0004E1                                     fsr2l 0004D9  
                     ??_FM_Hfintosc_Init 051F               __end_of_FM_Lcd_Send_String 2744  
                ??_FM_Lcd_Send_Character 0521                                     start FFFC  
 FM_Lcd_Send_Character@character_to_send 0521                    _FM_Lcd_Easy_Gpio_Init 28EA  
                           ___param_bank 000000                __size_of_FM_Lcd_Easy_Init 002A  
                                  ?_main 051D              __end_of_FM_Lcd_Send_Command 28EA  
                                  _PORTD 0004D1                                    _TRISD 0004C9  
                                  _TRISF 0004CB                                    tablat 0004F5  
                                  status 0004D8                          __initialization 283C  
                           __end_of_main 26C0              __end_of_Matrix_74LS922_Init 28D2  
                                 ??_main 0527                            __activetblptr 000002  
                                 _ANSELD 000418                   ?_FM_Lcd_Easy_Gpio_Init 051D  
                                 isa$std 000001                             __pdataCOMRAM 0501  
                           __mediumconst 0000                                   tblptrh 0004F7  
                                 tblptrl 0004F6                                   tblptru 0004F8  
                             __accesstop 0560                  __end_of__initialization 2860  
                          ___rparam_used 000001        __size_of_Internal_Oscillator_Init 0016  
                         __pcstackCOMRAM 051D                ?_Internal_Oscillator_Init 051D  
                       _FM_Lcd_Easy_Init 286A             FM_Hfintosc_Init@clock_params 051D  
         __size_of_FM_Lcd_Send_Character 000C            __end_of_FM_Lcd_Send_Character 28DE  
                     _FM_Lcd_Send_Nibble 2744                __size_of_FM_Hfintosc_Init 0040  
                     _FM_Lcd_Send_String 26C0                      ?_FM_Lcd_Send_Nibble 051D  
                    ?_FM_Lcd_Send_String 0522                             _claves_index 052D  
                   ??_FM_Lcd_Send_Nibble 051D                     ??_FM_Lcd_Send_String 0524  
                                __Hparam 0000                                  __Lparam 0000  
                           __psmallconst 2500                                  __pcinit 283C  
                                __ramtop 2500                                  __ptext0 252E  
                                __ptext1 28C6                                  __ptext2 28B0  
                                __ptext3 27FC                                  __ptext4 27B8  
                                __ptext5 26C0                                  __ptext6 28D2  
                                __ptext7 286A                                  __ptext8 28DE  
                                __ptext9 2744                           _clave_guardada 0511  
           __size_of_FM_Lcd_Send_Command 000C                     end_of_initialization 2860  
                ??_FM_Lcd_Easy_Gpio_Init 051D                            __Lmediumconst 0000  
                                postdec1 0004E5                                  postinc0 0004EE  
                                postinc1 0004E6                                  postinc2 0004DE  
                 FM_Lcd_Set_Cursor@filas 0523                 _character_matrix_buttons 0501  
           __size_of_Matrix_74LS922_Init 000C         __end_of_Internal_Oscillator_Init 28C6  
               __end_of_FM_Lcd_Easy_Init 2894                FM_Lcd_Set_Cursor@base_pos 0524  
                       _FM_Hfintosc_Init 27FC                            __pidataCOMRAM 2894  
                    start_initialization 283C                          main@data_readed 0529  
               FM_Lcd_Send_String@cadena 0522                              __pbssCOMRAM 052C  
               _Internal_Oscillator_Init 28B0                    _FM_Lcd_Send_Character 28D2  
                    _FM_Lcd_Send_Command 28DE                        _FM_Lcd_Set_Cursor 27B8  
                     ?_FM_Lcd_Set_Cursor 0522       FM_Lcd_Send_Command@command_to_send 0521  
                            __smallconst 2500                      ??_FM_Lcd_Set_Cursor 0523  
                   ?_FM_Lcd_Send_Command 051D                                _safe_lock 052C  
                      main@compare_index 052B              __size_of_FM_Lcd_Send_Nibble 0074  
         __size_of_FM_Lcd_Easy_Gpio_Init 0008            __end_of_FM_Lcd_Easy_Gpio_Init 28F2  
Internal_Oscillator_Init@my_clock_params 0520              __size_of_FM_Lcd_Send_String 0084  
              __end_of_FM_Lcd_Set_Cursor 27FC                      _Matrix_74LS922_Init 28C6  
                   ?_Matrix_74LS922_Init 051D                    ??_FM_Lcd_Send_Command 0521  
                              copy_data0 2850                 __end_of_FM_Hfintosc_Init 283C  
                      ?_FM_Lcd_Easy_Init 051D                       ??_FM_Lcd_Easy_Init 0522  
                FM_Lcd_Send_String@index 0526                                 __Hrparam 0000  
                 ?_FM_Lcd_Send_Character 051D                                 __Lrparam 0000  
                  ??_Matrix_74LS922_Init 051D                                 __ptext10 28EA  
                            _OSCCON1bits 0000AD                            __size_of_main 0192  
             __size_of_FM_Lcd_Set_Cursor 0044                                 isa$xinst 000000  
                        _clave_ingresada 0517               ??_Internal_Oscillator_Init 0520  
         FM_Lcd_Send_Nibble@byte_to_send 051E                               _OSCFRQbits 0000B1  
               FM_Lcd_Set_Cursor@columna 0522             FM_Lcd_Send_Nibble@lower_bits 0520  
